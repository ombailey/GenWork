{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCount = void 0;\nvar _factory = require(\"../../utils/factory.js\");\nvar name = 'count';\nvar dependencies = ['typed', 'size', 'prod'];\nvar createCount = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    size = _ref.size,\n    prod = _ref.prod;\n\n  /**\n   * Count the number of elements of a matrix, array or string.\n   *\n   * Syntax:\n   *\n   *     math.count(x)\n   *\n   * Examples:\n   *\n   *     math.count('hello world')        // returns 11\n   *     const A = [[1, 2, 3], [4, 5, 6]]\n   *     math.count(A)                    // returns 6\n   *     math.count(math.range(1,6))      // returns 5\n   *\n   * See also:\n   *\n   *     size\n   *\n   * @param {string | Array | Matrix} x  A matrix or string\n   * @return {number} An integer with the elements in `x`.\n   */\n  return typed(name, {\n    string: function string(x) {\n      return x.length;\n    },\n    'Matrix | Array': function MatrixArray(x) {\n      return prod(size(x));\n    }\n  });\n});\nexports.createCount = createCount;","map":{"version":3,"names":["Object","defineProperty","exports","value","createCount","_factory","require","name","dependencies","factory","_ref","typed","size","prod","string","x","length","MatrixArray"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/function/matrix/count.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCount = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'count';\nvar dependencies = ['typed', 'size', 'prod'];\nvar createCount = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      size = _ref.size,\n      prod = _ref.prod;\n\n  /**\n   * Count the number of elements of a matrix, array or string.\n   *\n   * Syntax:\n   *\n   *     math.count(x)\n   *\n   * Examples:\n   *\n   *     math.count('hello world')        // returns 11\n   *     const A = [[1, 2, 3], [4, 5, 6]]\n   *     math.count(A)                    // returns 6\n   *     math.count(math.range(1,6))      // returns 5\n   *\n   * See also:\n   *\n   *     size\n   *\n   * @param {string | Array | Matrix} x  A matrix or string\n   * @return {number} An integer with the elements in `x`.\n   */\n  return typed(name, {\n    string: function string(x) {\n      return x.length;\n    },\n    'Matrix | Array': function MatrixArray(x) {\n      return prod(size(x));\n    }\n  });\n});\nexports.createCount = createCount;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,WAAW,GAAG,KAAK,CAAC;AAE5B,IAAIC,QAAQ,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAEhD,IAAIC,IAAI,GAAG,OAAO;AAClB,IAAIC,YAAY,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC;AAC5C,IAAIJ,WAAW,GAAG,eAAe,CAAC,CAAC,EAAEC,QAAQ,CAACI,OAAO,EAAEF,IAAI,EAAEC,YAAY,EAAE,UAAUE,IAAI,EAAE;EACzF,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;IAClBC,IAAI,GAAGF,IAAI,CAACE,IAAI;IAChBC,IAAI,GAAGH,IAAI,CAACG,IAAI;;EAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOF,KAAK,CAACJ,IAAI,EAAE;IACjBO,MAAM,EAAE,SAASA,MAAM,CAACC,CAAC,EAAE;MACzB,OAAOA,CAAC,CAACC,MAAM;IACjB,CAAC;IACD,gBAAgB,EAAE,SAASC,WAAW,CAACF,CAAC,EAAE;MACxC,OAAOF,IAAI,CAACD,IAAI,CAACG,CAAC,CAAC,CAAC;IACtB;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AACFb,OAAO,CAACE,WAAW,GAAGA,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}