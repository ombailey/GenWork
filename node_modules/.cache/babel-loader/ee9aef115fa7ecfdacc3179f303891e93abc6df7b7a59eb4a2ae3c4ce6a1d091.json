{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSin = void 0;\nvar _factory = require(\"../../utils/factory.js\");\nvar _collection = require(\"../../utils/collection.js\");\nvar name = 'sin';\nvar dependencies = ['typed'];\nvar createSin = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Calculate the sine of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.sin(x)\n   *\n   * Examples:\n   *\n   *    math.sin(2)                      // returns number 0.9092974268256813\n   *    math.sin(math.pi / 4)            // returns number 0.7071067811865475\n   *    math.sin(math.unit(90, 'deg'))   // returns number 1\n   *    math.sin(math.unit(30, 'deg'))   // returns number 0.5\n   *\n   *    const angle = 0.2\n   *    math.pow(math.sin(angle), 2) + math.pow(math.cos(angle), 2) // returns number ~1\n   *\n   * See also:\n   *\n   *    cos, tan\n   *\n   * @param {number | BigNumber | Complex | Unit | Array | Matrix} x  Function input\n   * @return {number | BigNumber | Complex | Array | Matrix} Sine of x\n   */\n  return typed(name, {\n    number: Math.sin,\n    Complex: function Complex(x) {\n      return x.sin();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.sin();\n    },\n    Unit: function Unit(x) {\n      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\n        throw new TypeError('Unit in function sin is no angle');\n      }\n      return this(x.value);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since sin(0) = 0\n      return (0, _collection.deepMap)(x, this, true);\n    }\n  });\n});\nexports.createSin = createSin;","map":{"version":3,"names":["Object","defineProperty","exports","value","createSin","_factory","require","_collection","name","dependencies","factory","_ref","typed","number","Math","sin","Complex","x","BigNumber","Unit","hasBase","constructor","BASE_UNITS","ANGLE","TypeError","ArrayMatrix","deepMap"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/function/trigonometry/sin.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSin = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _collection = require(\"../../utils/collection.js\");\n\nvar name = 'sin';\nvar dependencies = ['typed'];\nvar createSin = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Calculate the sine of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.sin(x)\n   *\n   * Examples:\n   *\n   *    math.sin(2)                      // returns number 0.9092974268256813\n   *    math.sin(math.pi / 4)            // returns number 0.7071067811865475\n   *    math.sin(math.unit(90, 'deg'))   // returns number 1\n   *    math.sin(math.unit(30, 'deg'))   // returns number 0.5\n   *\n   *    const angle = 0.2\n   *    math.pow(math.sin(angle), 2) + math.pow(math.cos(angle), 2) // returns number ~1\n   *\n   * See also:\n   *\n   *    cos, tan\n   *\n   * @param {number | BigNumber | Complex | Unit | Array | Matrix} x  Function input\n   * @return {number | BigNumber | Complex | Array | Matrix} Sine of x\n   */\n  return typed(name, {\n    number: Math.sin,\n    Complex: function Complex(x) {\n      return x.sin();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.sin();\n    },\n    Unit: function Unit(x) {\n      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\n        throw new TypeError('Unit in function sin is no angle');\n      }\n\n      return this(x.value);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since sin(0) = 0\n      return (0, _collection.deepMap)(x, this, true);\n    }\n  });\n});\nexports.createSin = createSin;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,SAAS,GAAG,KAAK,CAAC;AAE1B,IAAIC,QAAQ,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAEhD,IAAIC,WAAW,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AAEtD,IAAIE,IAAI,GAAG,KAAK;AAChB,IAAIC,YAAY,GAAG,CAAC,OAAO,CAAC;AAC5B,IAAIL,SAAS,GAAG,eAAe,CAAC,CAAC,EAAEC,QAAQ,CAACK,OAAO,EAAEF,IAAI,EAAEC,YAAY,EAAE,UAAUE,IAAI,EAAE;EACvF,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;;EAEtB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOA,KAAK,CAACJ,IAAI,EAAE;IACjBK,MAAM,EAAEC,IAAI,CAACC,GAAG;IAChBC,OAAO,EAAE,SAASA,OAAO,CAACC,CAAC,EAAE;MAC3B,OAAOA,CAAC,CAACF,GAAG,EAAE;IAChB,CAAC;IACDG,SAAS,EAAE,SAASA,SAAS,CAACD,CAAC,EAAE;MAC/B,OAAOA,CAAC,CAACF,GAAG,EAAE;IAChB,CAAC;IACDI,IAAI,EAAE,SAASA,IAAI,CAACF,CAAC,EAAE;MACrB,IAAI,CAACA,CAAC,CAACG,OAAO,CAACH,CAAC,CAACI,WAAW,CAACC,UAAU,CAACC,KAAK,CAAC,EAAE;QAC9C,MAAM,IAAIC,SAAS,CAAC,kCAAkC,CAAC;MACzD;MAEA,OAAO,IAAI,CAACP,CAAC,CAACd,KAAK,CAAC;IACtB,CAAC;IACD,gBAAgB,EAAE,SAASsB,WAAW,CAACR,CAAC,EAAE;MACxC;MACA,OAAO,CAAC,CAAC,EAAEV,WAAW,CAACmB,OAAO,EAAET,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;IAChD;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AACFf,OAAO,CAACE,SAAS,GAAGA,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}