{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setPowersetDocs = void 0;\nvar setPowersetDocs = {\n  name: 'setPowerset',\n  category: 'Set',\n  syntax: ['setPowerset(set)'],\n  description: 'Create the powerset of a (multi)set: the powerset contains very possible subsets of a (multi)set. A multi-dimension array will be converted to a single-dimension array before the operation.',\n  examples: ['setPowerset([1, 2, 3])'],\n  seealso: ['setCartesian']\n};\nexports.setPowersetDocs = setPowersetDocs;","map":{"version":3,"names":["Object","defineProperty","exports","value","setPowersetDocs","name","category","syntax","description","examples","seealso"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/set/setPowerset.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setPowersetDocs = void 0;\nvar setPowersetDocs = {\n  name: 'setPowerset',\n  category: 'Set',\n  syntax: ['setPowerset(set)'],\n  description: 'Create the powerset of a (multi)set: the powerset contains very possible subsets of a (multi)set. A multi-dimension array will be converted to a single-dimension array before the operation.',\n  examples: ['setPowerset([1, 2, 3])'],\n  seealso: ['setCartesian']\n};\nexports.setPowersetDocs = setPowersetDocs;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,eAAe,GAAG,KAAK,CAAC;AAChC,IAAIA,eAAe,GAAG;EACpBC,IAAI,EAAE,aAAa;EACnBC,QAAQ,EAAE,KAAK;EACfC,MAAM,EAAE,CAAC,kBAAkB,CAAC;EAC5BC,WAAW,EAAE,+LAA+L;EAC5MC,QAAQ,EAAE,CAAC,wBAAwB,CAAC;EACpCC,OAAO,EAAE,CAAC,cAAc;AAC1B,CAAC;AACDR,OAAO,CAACE,eAAe,GAAGA,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}