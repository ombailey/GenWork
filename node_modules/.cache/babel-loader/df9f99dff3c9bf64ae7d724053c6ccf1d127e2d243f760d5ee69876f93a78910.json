{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCompareTextNumber = exports.createCompareText = void 0;\nvar _string = require(\"../../utils/string.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar _algorithm = require(\"../../type/matrix/utils/algorithm14.js\");\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm13.js\");\nvar name = 'compareText';\nvar dependencies = ['typed', 'matrix'];\nvar createCompareText = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    matrix = _ref.matrix;\n  var algorithm13 = (0, _algorithm2.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Compare two strings lexically. Comparison is case sensitive.\n   * Returns 1 when x > y, -1 when x < y, and 0 when x == y.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.compareText(x, y)\n   *\n   * Examples:\n   *\n   *    math.compareText('B', 'A')     // returns 1\n   *    math.compareText('2', '10')    // returns 1\n   *    math.compare('2', '10')        // returns -1\n   *    math.compareNatural('2', '10') // returns -1\n   *\n   *    math.compareText('B', ['A', 'B', 'C']) // returns [1, 0, -1]\n   *\n   * See also:\n   *\n   *    equal, equalText, compare, compareNatural\n   *\n   * @param  {string | Array | DenseMatrix} x First string to compare\n   * @param  {string | Array | DenseMatrix} y Second string to compare\n   * @return {number | Array | DenseMatrix} Returns the result of the comparison:\n   *                                        1 when x > y, -1 when x < y, and 0 when x == y.\n   */\n\n  return typed(name, {\n    'any, any': _string.compareText,\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, _string.compareText);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, _string.compareText, false);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, _string.compareText, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, _string.compareText, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, _string.compareText, true).valueOf();\n    }\n  });\n});\nexports.createCompareText = createCompareText;\nvar createCompareTextNumber = /* #__PURE__ */(0, _factory.factory)(name, ['typed'], function (_ref2) {\n  var typed = _ref2.typed;\n  return typed(name, {\n    'any, any': _string.compareText\n  });\n});\nexports.createCompareTextNumber = createCompareTextNumber;","map":{"version":3,"names":["Object","defineProperty","exports","value","createCompareTextNumber","createCompareText","_string","require","_factory","_algorithm","_algorithm2","name","dependencies","factory","_ref","typed","matrix","algorithm13","createAlgorithm13","algorithm14","createAlgorithm14","compareText","DenseMatrixDenseMatrix","x","y","ArrayArray","valueOf","ArrayMatrix","MatrixArray","DenseMatrixAny","anyDenseMatrix","ArrayAny","anyArray","_ref2"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/function/relational/compareText.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCompareTextNumber = exports.createCompareText = void 0;\n\nvar _string = require(\"../../utils/string.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar name = 'compareText';\nvar dependencies = ['typed', 'matrix'];\nvar createCompareText = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix;\n  var algorithm13 = (0, _algorithm2.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Compare two strings lexically. Comparison is case sensitive.\n   * Returns 1 when x > y, -1 when x < y, and 0 when x == y.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.compareText(x, y)\n   *\n   * Examples:\n   *\n   *    math.compareText('B', 'A')     // returns 1\n   *    math.compareText('2', '10')    // returns 1\n   *    math.compare('2', '10')        // returns -1\n   *    math.compareNatural('2', '10') // returns -1\n   *\n   *    math.compareText('B', ['A', 'B', 'C']) // returns [1, 0, -1]\n   *\n   * See also:\n   *\n   *    equal, equalText, compare, compareNatural\n   *\n   * @param  {string | Array | DenseMatrix} x First string to compare\n   * @param  {string | Array | DenseMatrix} y Second string to compare\n   * @return {number | Array | DenseMatrix} Returns the result of the comparison:\n   *                                        1 when x > y, -1 when x < y, and 0 when x == y.\n   */\n\n  return typed(name, {\n    'any, any': _string.compareText,\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, _string.compareText);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, _string.compareText, false);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, _string.compareText, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, _string.compareText, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, _string.compareText, true).valueOf();\n    }\n  });\n});\nexports.createCompareText = createCompareText;\nvar createCompareTextNumber = /* #__PURE__ */(0, _factory.factory)(name, ['typed'], function (_ref2) {\n  var typed = _ref2.typed;\n  return typed(name, {\n    'any, any': _string.compareText\n  });\n});\nexports.createCompareTextNumber = createCompareTextNumber;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}