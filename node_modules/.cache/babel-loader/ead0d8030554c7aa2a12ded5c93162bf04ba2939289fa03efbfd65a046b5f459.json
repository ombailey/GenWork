{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFilterTransform = void 0;\nvar _is = require(\"../../utils/is.js\");\nvar _array = require(\"../../utils/array.js\");\nvar _function = require(\"../../utils/function.js\");\nvar _compileInlineExpression = require(\"./utils/compileInlineExpression.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar name = 'filter';\nvar dependencies = ['typed'];\nvar createFilterTransform = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Attach a transform function to math.filter\n   * Adds a property transform containing the transform function.\n   *\n   * This transform adds support for equations as test function for math.filter,\n   * so you can do something like 'filter([3, -2, 5], x > 0)'.\n   */\n  function filterTransform(args, math, scope) {\n    var x, callback;\n    if (args[0]) {\n      x = args[0].compile().evaluate(scope);\n    }\n    if (args[1]) {\n      if ((0, _is.isSymbolNode)(args[1]) || (0, _is.isFunctionAssignmentNode)(args[1])) {\n        // a function pointer, like filter([3, -2, 5], myTestFunction)\n        callback = args[1].compile().evaluate(scope);\n      } else {\n        // an expression like filter([3, -2, 5], x > 0)\n        callback = (0, _compileInlineExpression.compileInlineExpression)(args[1], math, scope);\n      }\n    }\n    return filter(x, callback);\n  }\n  filterTransform.rawArgs = true; // one based version of function filter\n\n  var filter = typed('filter', {\n    'Array, function': _filter,\n    'Matrix, function': function MatrixFunction(x, test) {\n      return x.create(_filter(x.toArray(), test));\n    },\n    'Array, RegExp': _array.filterRegExp,\n    'Matrix, RegExp': function MatrixRegExp(x, test) {\n      return x.create((0, _array.filterRegExp)(x.toArray(), test));\n    }\n  });\n  return filterTransform;\n}, {\n  isTransformFunction: true\n});\n/**\n * Filter values in a callback given a callback function\n *\n * !!! Passes a one-based index !!!\n *\n * @param {Array} x\n * @param {Function} callback\n * @return {Array} Returns the filtered array\n * @private\n */\n\nexports.createFilterTransform = createFilterTransform;\nfunction _filter(x, callback) {\n  // figure out what number of arguments the callback function expects\n  var args = (0, _function.maxArgumentCount)(callback);\n  return (0, _array.filter)(x, function (value, index, array) {\n    // invoke the callback function with the right number of arguments\n    if (args === 1) {\n      return callback(value);\n    } else if (args === 2) {\n      return callback(value, [index + 1]);\n    } else {\n      // 3 or -1\n      return callback(value, [index + 1], array);\n    }\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","createFilterTransform","_is","require","_array","_function","_compileInlineExpression","_factory","name","dependencies","factory","_ref","typed","filterTransform","args","math","scope","x","callback","compile","evaluate","isSymbolNode","isFunctionAssignmentNode","compileInlineExpression","filter","rawArgs","_filter","MatrixFunction","test","create","toArray","filterRegExp","MatrixRegExp","isTransformFunction","maxArgumentCount","index","array"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/expression/transform/filter.transform.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFilterTransform = void 0;\n\nvar _is = require(\"../../utils/is.js\");\n\nvar _array = require(\"../../utils/array.js\");\n\nvar _function = require(\"../../utils/function.js\");\n\nvar _compileInlineExpression = require(\"./utils/compileInlineExpression.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'filter';\nvar dependencies = ['typed'];\nvar createFilterTransform = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Attach a transform function to math.filter\n   * Adds a property transform containing the transform function.\n   *\n   * This transform adds support for equations as test function for math.filter,\n   * so you can do something like 'filter([3, -2, 5], x > 0)'.\n   */\n  function filterTransform(args, math, scope) {\n    var x, callback;\n\n    if (args[0]) {\n      x = args[0].compile().evaluate(scope);\n    }\n\n    if (args[1]) {\n      if ((0, _is.isSymbolNode)(args[1]) || (0, _is.isFunctionAssignmentNode)(args[1])) {\n        // a function pointer, like filter([3, -2, 5], myTestFunction)\n        callback = args[1].compile().evaluate(scope);\n      } else {\n        // an expression like filter([3, -2, 5], x > 0)\n        callback = (0, _compileInlineExpression.compileInlineExpression)(args[1], math, scope);\n      }\n    }\n\n    return filter(x, callback);\n  }\n\n  filterTransform.rawArgs = true; // one based version of function filter\n\n  var filter = typed('filter', {\n    'Array, function': _filter,\n    'Matrix, function': function MatrixFunction(x, test) {\n      return x.create(_filter(x.toArray(), test));\n    },\n    'Array, RegExp': _array.filterRegExp,\n    'Matrix, RegExp': function MatrixRegExp(x, test) {\n      return x.create((0, _array.filterRegExp)(x.toArray(), test));\n    }\n  });\n  return filterTransform;\n}, {\n  isTransformFunction: true\n});\n/**\n * Filter values in a callback given a callback function\n *\n * !!! Passes a one-based index !!!\n *\n * @param {Array} x\n * @param {Function} callback\n * @return {Array} Returns the filtered array\n * @private\n */\n\nexports.createFilterTransform = createFilterTransform;\n\nfunction _filter(x, callback) {\n  // figure out what number of arguments the callback function expects\n  var args = (0, _function.maxArgumentCount)(callback);\n  return (0, _array.filter)(x, function (value, index, array) {\n    // invoke the callback function with the right number of arguments\n    if (args === 1) {\n      return callback(value);\n    } else if (args === 2) {\n      return callback(value, [index + 1]);\n    } else {\n      // 3 or -1\n      return callback(value, [index + 1], array);\n    }\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}