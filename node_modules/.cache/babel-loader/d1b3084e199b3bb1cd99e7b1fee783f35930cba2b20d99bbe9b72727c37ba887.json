{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRightLogShift = void 0;\nvar _algorithm = require(\"../../type/matrix/utils/algorithm02.js\");\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm11.js\");\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm13.js\");\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm14.js\");\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm01.js\");\nvar _algorithm6 = require(\"../../type/matrix/utils/algorithm10.js\");\nvar _algorithm7 = require(\"../../type/matrix/utils/algorithm08.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar _index = require(\"../../plain/number/index.js\");\nvar name = 'rightLogShift';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'DenseMatrix'];\nvar createRightLogShift = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    matrix = _ref.matrix,\n    equalScalar = _ref.equalScalar,\n    zeros = _ref.zeros,\n    DenseMatrix = _ref.DenseMatrix;\n  var algorithm01 = (0, _algorithm5.createAlgorithm01)({\n    typed: typed\n  });\n  var algorithm02 = (0, _algorithm.createAlgorithm02)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm08 = (0, _algorithm7.createAlgorithm08)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm10 = (0, _algorithm6.createAlgorithm10)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm11 = (0, _algorithm2.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm13 = (0, _algorithm3.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm4.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Bitwise right logical shift of value x by y number of bits, `x >>> y`.\n   * For matrices, the function is evaluated element wise.\n   * For units, the function is evaluated on the best prefix base.\n   *\n   * Syntax:\n   *\n   *    math.rightLogShift(x, y)\n   *\n   * Examples:\n   *\n   *    math.rightLogShift(4, 2)               // returns number 1\n   *\n   *    math.rightLogShift([16, -32, 64], 4)   // returns Array [1, 2, 3]\n   *\n   * See also:\n   *\n   *    bitAnd, bitNot, bitOr, bitXor, leftShift, rightLogShift\n   *\n   * @param  {number | Array | Matrix} x Value to be shifted\n   * @param  {number} y Amount of shifts\n   * @return {number | Array | Matrix} `x` zero-filled shifted right `y` times\n   */\n\n  return typed(name, {\n    'number, number': _index.rightLogShiftNumber,\n    // 'BigNumber, BigNumber': ..., // TODO: implement BigNumber support for rightLogShift\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm08(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm01(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      // check scalar\n      if (equalScalar(y, 0)) {\n        return x.clone();\n      }\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      // check scalar\n      if (equalScalar(y, 0)) {\n        return x.clone();\n      }\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      // check scalar\n      if (equalScalar(x, 0)) {\n        return zeros(y.size(), y.storage());\n      }\n      return algorithm10(y, x, this, true);\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      // check scalar\n      if (equalScalar(x, 0)) {\n        return zeros(y.size(), y.storage());\n      }\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y)).valueOf();\n    }\n  });\n});\nexports.createRightLogShift = createRightLogShift;","map":{"version":3,"names":["Object","defineProperty","exports","value","createRightLogShift","_algorithm","require","_algorithm2","_algorithm3","_algorithm4","_algorithm5","_algorithm6","_algorithm7","_factory","_index","name","dependencies","factory","_ref","typed","matrix","equalScalar","zeros","DenseMatrix","algorithm01","createAlgorithm01","algorithm02","createAlgorithm02","algorithm08","createAlgorithm08","algorithm10","createAlgorithm10","algorithm11","createAlgorithm11","algorithm13","createAlgorithm13","algorithm14","createAlgorithm14","rightLogShiftNumber","SparseMatrixSparseMatrix","x","y","SparseMatrixDenseMatrix","DenseMatrixSparseMatrix","DenseMatrixDenseMatrix","ArrayArray","valueOf","ArrayMatrix","MatrixArray","SparseMatrixNumberBigNumber","clone","DenseMatrixNumberBigNumber","numberBigNumberSparseMatrix","size","storage","numberBigNumberDenseMatrix","ArrayNumberBigNumber","numberBigNumberArray"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/function/bitwise/rightLogShift.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRightLogShift = void 0;\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm02.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm11.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm01.js\");\n\nvar _algorithm6 = require(\"../../type/matrix/utils/algorithm10.js\");\n\nvar _algorithm7 = require(\"../../type/matrix/utils/algorithm08.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _index = require(\"../../plain/number/index.js\");\n\nvar name = 'rightLogShift';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'DenseMatrix'];\nvar createRightLogShift = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      zeros = _ref.zeros,\n      DenseMatrix = _ref.DenseMatrix;\n  var algorithm01 = (0, _algorithm5.createAlgorithm01)({\n    typed: typed\n  });\n  var algorithm02 = (0, _algorithm.createAlgorithm02)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm08 = (0, _algorithm7.createAlgorithm08)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm10 = (0, _algorithm6.createAlgorithm10)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm11 = (0, _algorithm2.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm13 = (0, _algorithm3.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm4.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Bitwise right logical shift of value x by y number of bits, `x >>> y`.\n   * For matrices, the function is evaluated element wise.\n   * For units, the function is evaluated on the best prefix base.\n   *\n   * Syntax:\n   *\n   *    math.rightLogShift(x, y)\n   *\n   * Examples:\n   *\n   *    math.rightLogShift(4, 2)               // returns number 1\n   *\n   *    math.rightLogShift([16, -32, 64], 4)   // returns Array [1, 2, 3]\n   *\n   * See also:\n   *\n   *    bitAnd, bitNot, bitOr, bitXor, leftShift, rightLogShift\n   *\n   * @param  {number | Array | Matrix} x Value to be shifted\n   * @param  {number} y Amount of shifts\n   * @return {number | Array | Matrix} `x` zero-filled shifted right `y` times\n   */\n\n  return typed(name, {\n    'number, number': _index.rightLogShiftNumber,\n    // 'BigNumber, BigNumber': ..., // TODO: implement BigNumber support for rightLogShift\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm08(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm01(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      // check scalar\n      if (equalScalar(y, 0)) {\n        return x.clone();\n      }\n\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      // check scalar\n      if (equalScalar(y, 0)) {\n        return x.clone();\n      }\n\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      // check scalar\n      if (equalScalar(x, 0)) {\n        return zeros(y.size(), y.storage());\n      }\n\n      return algorithm10(y, x, this, true);\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      // check scalar\n      if (equalScalar(x, 0)) {\n        return zeros(y.size(), y.storage());\n      }\n\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y)).valueOf();\n    }\n  });\n});\nexports.createRightLogShift = createRightLogShift;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}