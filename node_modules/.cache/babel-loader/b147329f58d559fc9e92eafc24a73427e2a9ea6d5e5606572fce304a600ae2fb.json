{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAtan2 = void 0;\nvar _factory = require(\"../../utils/factory.js\");\nvar _algorithm = require(\"../../type/matrix/utils/algorithm02.js\");\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm03.js\");\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm09.js\");\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm11.js\");\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm12.js\");\nvar _algorithm6 = require(\"../../type/matrix/utils/algorithm13.js\");\nvar _algorithm7 = require(\"../../type/matrix/utils/algorithm14.js\");\nvar name = 'atan2';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'BigNumber', 'DenseMatrix'];\nvar createAtan2 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    matrix = _ref.matrix,\n    equalScalar = _ref.equalScalar,\n    BigNumber = _ref.BigNumber,\n    DenseMatrix = _ref.DenseMatrix;\n  var algorithm02 = (0, _algorithm.createAlgorithm02)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm03 = (0, _algorithm2.createAlgorithm03)({\n    typed: typed\n  });\n  var algorithm09 = (0, _algorithm3.createAlgorithm09)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm11 = (0, _algorithm4.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm12 = (0, _algorithm5.createAlgorithm12)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm13 = (0, _algorithm6.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm7.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Calculate the inverse tangent function with two arguments, y/x.\n   * By providing two arguments, the right quadrant of the computed angle can be\n   * determined.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.atan2(y, x)\n   *\n   * Examples:\n   *\n   *    math.atan2(2, 2) / math.pi       // returns number 0.25\n   *\n   *    const angle = math.unit(60, 'deg') // returns Unit 60 deg\n   *    const x = math.cos(angle)\n   *    const y = math.sin(angle)\n   *\n   *    math.atan(2)             // returns Complex 1.5707963267948966 -1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    tan, atan, sin, cos\n   *\n   * @param {number | Array | Matrix} y  Second dimension\n   * @param {number | Array | Matrix} x  First dimension\n   * @return {number | Array | Matrix} Four-quadrant inverse tangent\n   */\n\n  return typed(name, {\n    'number, number': Math.atan2,\n    // Complex numbers doesn't seem to have a reasonable implementation of\n    // atan2(). Even Matlab removed the support, after they only calculated\n    // the atan only on base of the real part of the numbers and ignored the imaginary.\n    'BigNumber, BigNumber': function BigNumberBigNumber(y, x) {\n      return BigNumber.atan2(y, x);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm09(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      // mind the order of y and x!\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      // mind the order of y and x\n      return algorithm12(y, x, this, true);\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      // mind the order of y and x\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nexports.createAtan2 = createAtan2;","map":{"version":3,"names":["Object","defineProperty","exports","value","createAtan2","_factory","require","_algorithm","_algorithm2","_algorithm3","_algorithm4","_algorithm5","_algorithm6","_algorithm7","name","dependencies","factory","_ref","typed","matrix","equalScalar","BigNumber","DenseMatrix","algorithm02","createAlgorithm02","algorithm03","createAlgorithm03","algorithm09","createAlgorithm09","algorithm11","createAlgorithm11","algorithm12","createAlgorithm12","algorithm13","createAlgorithm13","algorithm14","createAlgorithm14","Math","atan2","BigNumberBigNumber","y","x","SparseMatrixSparseMatrix","SparseMatrixDenseMatrix","DenseMatrixSparseMatrix","DenseMatrixDenseMatrix","ArrayArray","valueOf","ArrayMatrix","MatrixArray","SparseMatrixNumberBigNumber","DenseMatrixNumberBigNumber","numberBigNumberSparseMatrix","numberBigNumberDenseMatrix","ArrayNumberBigNumber","numberBigNumberArray"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/function/trigonometry/atan2.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAtan2 = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm02.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm03.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm09.js\");\n\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm11.js\");\n\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm12.js\");\n\nvar _algorithm6 = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar _algorithm7 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar name = 'atan2';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'BigNumber', 'DenseMatrix'];\nvar createAtan2 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      BigNumber = _ref.BigNumber,\n      DenseMatrix = _ref.DenseMatrix;\n  var algorithm02 = (0, _algorithm.createAlgorithm02)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm03 = (0, _algorithm2.createAlgorithm03)({\n    typed: typed\n  });\n  var algorithm09 = (0, _algorithm3.createAlgorithm09)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm11 = (0, _algorithm4.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm12 = (0, _algorithm5.createAlgorithm12)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm13 = (0, _algorithm6.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm7.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Calculate the inverse tangent function with two arguments, y/x.\n   * By providing two arguments, the right quadrant of the computed angle can be\n   * determined.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.atan2(y, x)\n   *\n   * Examples:\n   *\n   *    math.atan2(2, 2) / math.pi       // returns number 0.25\n   *\n   *    const angle = math.unit(60, 'deg') // returns Unit 60 deg\n   *    const x = math.cos(angle)\n   *    const y = math.sin(angle)\n   *\n   *    math.atan(2)             // returns Complex 1.5707963267948966 -1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    tan, atan, sin, cos\n   *\n   * @param {number | Array | Matrix} y  Second dimension\n   * @param {number | Array | Matrix} x  First dimension\n   * @return {number | Array | Matrix} Four-quadrant inverse tangent\n   */\n\n  return typed(name, {\n    'number, number': Math.atan2,\n    // Complex numbers doesn't seem to have a reasonable implementation of\n    // atan2(). Even Matlab removed the support, after they only calculated\n    // the atan only on base of the real part of the numbers and ignored the imaginary.\n    'BigNumber, BigNumber': function BigNumberBigNumber(y, x) {\n      return BigNumber.atan2(y, x);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm09(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      // mind the order of y and x!\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      // mind the order of y and x\n      return algorithm12(y, x, this, true);\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      // mind the order of y and x\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nexports.createAtan2 = createAtan2;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}