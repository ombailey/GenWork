{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createResize = void 0;\nvar _is = require(\"../../utils/is.js\");\nvar _DimensionError = require(\"../../error/DimensionError.js\");\nvar _ArgumentsError = require(\"../../error/ArgumentsError.js\");\nvar _number = require(\"../../utils/number.js\");\nvar _string = require(\"../../utils/string.js\");\nvar _object = require(\"../../utils/object.js\");\nvar _array = require(\"../../utils/array.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar name = 'resize';\nvar dependencies = ['config', 'matrix'];\nvar createResize = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var config = _ref.config,\n    matrix = _ref.matrix;\n\n  /**\n   * Resize a matrix\n   *\n   * Syntax:\n   *\n   *     math.resize(x, size)\n   *     math.resize(x, size, defaultValue)\n   *\n   * Examples:\n   *\n   *     math.resize([1, 2, 3, 4, 5], [3]) // returns Array  [1, 2, 3]\n   *     math.resize([1, 2, 3], [5], 0)    // returns Array  [1, 2, 3, 0, 0]\n   *     math.resize(2, [2, 3], 0)         // returns Matrix [[2, 0, 0], [0, 0, 0]]\n   *     math.resize(\"hello\", [8], \"!\")    // returns string 'hello!!!'\n   *\n   * See also:\n   *\n   *     size, squeeze, subset, reshape\n   *\n   * @param {Array | Matrix | *} x             Matrix to be resized\n   * @param {Array | Matrix} size              One dimensional array with numbers\n   * @param {number | string} [defaultValue=0] Zero by default, except in\n   *                                           case of a string, in that case\n   *                                           defaultValue = ' '\n   * @return {* | Array | Matrix} A resized clone of matrix `x`\n   */\n  // TODO: rework resize to a typed-function\n  return function resize(x, size, defaultValue) {\n    if (arguments.length !== 2 && arguments.length !== 3) {\n      throw new _ArgumentsError.ArgumentsError('resize', arguments.length, 2, 3);\n    }\n    if ((0, _is.isMatrix)(size)) {\n      size = size.valueOf(); // get Array\n    }\n\n    if ((0, _is.isBigNumber)(size[0])) {\n      // convert bignumbers to numbers\n      size = size.map(function (value) {\n        return !(0, _is.isBigNumber)(value) ? value : value.toNumber();\n      });\n    } // check x is a Matrix\n\n    if ((0, _is.isMatrix)(x)) {\n      // use optimized matrix implementation, return copy\n      return x.resize(size, defaultValue, true);\n    }\n    if (typeof x === 'string') {\n      // resize string\n      return _resizeString(x, size, defaultValue);\n    } // check result should be a matrix\n\n    var asMatrix = Array.isArray(x) ? false : config.matrix !== 'Array';\n    if (size.length === 0) {\n      // output a scalar\n      while (Array.isArray(x)) {\n        x = x[0];\n      }\n      return (0, _object.clone)(x);\n    } else {\n      // output an array/matrix\n      if (!Array.isArray(x)) {\n        x = [x];\n      }\n      x = (0, _object.clone)(x);\n      var res = (0, _array.resize)(x, size, defaultValue);\n      return asMatrix ? matrix(res) : res;\n    }\n  };\n  /**\n   * Resize a string\n   * @param {string} str\n   * @param {number[]} size\n   * @param {string} [defaultChar=' ']\n   * @private\n   */\n\n  function _resizeString(str, size, defaultChar) {\n    if (defaultChar !== undefined) {\n      if (typeof defaultChar !== 'string' || defaultChar.length !== 1) {\n        throw new TypeError('Single character expected as defaultValue');\n      }\n    } else {\n      defaultChar = ' ';\n    }\n    if (size.length !== 1) {\n      throw new _DimensionError.DimensionError(size.length, 1);\n    }\n    var len = size[0];\n    if (typeof len !== 'number' || !(0, _number.isInteger)(len)) {\n      throw new TypeError('Invalid size, must contain positive integers ' + '(size: ' + (0, _string.format)(size) + ')');\n    }\n    if (str.length > len) {\n      return str.substring(0, len);\n    } else if (str.length < len) {\n      var res = str;\n      for (var i = 0, ii = len - str.length; i < ii; i++) {\n        res += defaultChar;\n      }\n      return res;\n    } else {\n      return str;\n    }\n  }\n});\nexports.createResize = createResize;","map":{"version":3,"names":["Object","defineProperty","exports","value","createResize","_is","require","_DimensionError","_ArgumentsError","_number","_string","_object","_array","_factory","name","dependencies","factory","_ref","config","matrix","resize","x","size","defaultValue","arguments","length","ArgumentsError","isMatrix","valueOf","isBigNumber","map","toNumber","_resizeString","asMatrix","Array","isArray","clone","res","str","defaultChar","undefined","TypeError","DimensionError","len","isInteger","format","substring","i","ii"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/function/matrix/resize.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createResize = void 0;\n\nvar _is = require(\"../../utils/is.js\");\n\nvar _DimensionError = require(\"../../error/DimensionError.js\");\n\nvar _ArgumentsError = require(\"../../error/ArgumentsError.js\");\n\nvar _number = require(\"../../utils/number.js\");\n\nvar _string = require(\"../../utils/string.js\");\n\nvar _object = require(\"../../utils/object.js\");\n\nvar _array = require(\"../../utils/array.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'resize';\nvar dependencies = ['config', 'matrix'];\nvar createResize = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var config = _ref.config,\n      matrix = _ref.matrix;\n\n  /**\n   * Resize a matrix\n   *\n   * Syntax:\n   *\n   *     math.resize(x, size)\n   *     math.resize(x, size, defaultValue)\n   *\n   * Examples:\n   *\n   *     math.resize([1, 2, 3, 4, 5], [3]) // returns Array  [1, 2, 3]\n   *     math.resize([1, 2, 3], [5], 0)    // returns Array  [1, 2, 3, 0, 0]\n   *     math.resize(2, [2, 3], 0)         // returns Matrix [[2, 0, 0], [0, 0, 0]]\n   *     math.resize(\"hello\", [8], \"!\")    // returns string 'hello!!!'\n   *\n   * See also:\n   *\n   *     size, squeeze, subset, reshape\n   *\n   * @param {Array | Matrix | *} x             Matrix to be resized\n   * @param {Array | Matrix} size              One dimensional array with numbers\n   * @param {number | string} [defaultValue=0] Zero by default, except in\n   *                                           case of a string, in that case\n   *                                           defaultValue = ' '\n   * @return {* | Array | Matrix} A resized clone of matrix `x`\n   */\n  // TODO: rework resize to a typed-function\n  return function resize(x, size, defaultValue) {\n    if (arguments.length !== 2 && arguments.length !== 3) {\n      throw new _ArgumentsError.ArgumentsError('resize', arguments.length, 2, 3);\n    }\n\n    if ((0, _is.isMatrix)(size)) {\n      size = size.valueOf(); // get Array\n    }\n\n    if ((0, _is.isBigNumber)(size[0])) {\n      // convert bignumbers to numbers\n      size = size.map(function (value) {\n        return !(0, _is.isBigNumber)(value) ? value : value.toNumber();\n      });\n    } // check x is a Matrix\n\n\n    if ((0, _is.isMatrix)(x)) {\n      // use optimized matrix implementation, return copy\n      return x.resize(size, defaultValue, true);\n    }\n\n    if (typeof x === 'string') {\n      // resize string\n      return _resizeString(x, size, defaultValue);\n    } // check result should be a matrix\n\n\n    var asMatrix = Array.isArray(x) ? false : config.matrix !== 'Array';\n\n    if (size.length === 0) {\n      // output a scalar\n      while (Array.isArray(x)) {\n        x = x[0];\n      }\n\n      return (0, _object.clone)(x);\n    } else {\n      // output an array/matrix\n      if (!Array.isArray(x)) {\n        x = [x];\n      }\n\n      x = (0, _object.clone)(x);\n      var res = (0, _array.resize)(x, size, defaultValue);\n      return asMatrix ? matrix(res) : res;\n    }\n  };\n  /**\n   * Resize a string\n   * @param {string} str\n   * @param {number[]} size\n   * @param {string} [defaultChar=' ']\n   * @private\n   */\n\n  function _resizeString(str, size, defaultChar) {\n    if (defaultChar !== undefined) {\n      if (typeof defaultChar !== 'string' || defaultChar.length !== 1) {\n        throw new TypeError('Single character expected as defaultValue');\n      }\n    } else {\n      defaultChar = ' ';\n    }\n\n    if (size.length !== 1) {\n      throw new _DimensionError.DimensionError(size.length, 1);\n    }\n\n    var len = size[0];\n\n    if (typeof len !== 'number' || !(0, _number.isInteger)(len)) {\n      throw new TypeError('Invalid size, must contain positive integers ' + '(size: ' + (0, _string.format)(size) + ')');\n    }\n\n    if (str.length > len) {\n      return str.substring(0, len);\n    } else if (str.length < len) {\n      var res = str;\n\n      for (var i = 0, ii = len - str.length; i < ii; i++) {\n        res += defaultChar;\n      }\n\n      return res;\n    } else {\n      return str;\n    }\n  }\n});\nexports.createResize = createResize;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}