{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRandomInt = void 0;\nvar _factory = require(\"../../utils/factory.js\");\nvar _randomMatrix = require(\"./util/randomMatrix.js\");\nvar _seededRNG = require(\"./util/seededRNG.js\");\nvar _is = require(\"../../utils/is.js\");\nvar name = 'randomInt';\nvar dependencies = ['typed', 'config', '?on'];\nvar createRandomInt = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    config = _ref.config,\n    on = _ref.on;\n  // seeded pseudo random number generator\n  var rng = (0, _seededRNG.createRng)(config.randomSeed);\n  if (on) {\n    on('config', function (curr, prev) {\n      if (curr.randomSeed !== prev.randomSeed) {\n        rng = (0, _seededRNG.createRng)(curr.randomSeed);\n      }\n    });\n  }\n  /**\n   * Return a random integer number larger or equal to `min` and smaller than `max`\n   * using a uniform distribution.\n   *\n   * Syntax:\n   *\n   *     math.randomInt()                // generate a random integer between 0 and 1\n   *     math.randomInt(max)             // generate a random integer between 0 and max\n   *     math.randomInt(min, max)        // generate a random integer between min and max\n   *     math.randomInt(size)            // generate a matrix with random integer between 0 and 1\n   *     math.randomInt(size, max)       // generate a matrix with random integer between 0 and max\n   *     math.randomInt(size, min, max)  // generate a matrix with random integer between min and max\n   *\n   * Examples:\n   *\n   *     math.randomInt(100)    // returns a random integer between 0 and 100\n   *     math.randomInt(30, 40) // returns a random integer between 30 and 40\n   *     math.randomInt([2, 3]) // returns a 2x3 matrix with random integers between 0 and 1\n   *\n   * See also:\n   *\n   *     random, pickRandom\n   *\n   * @param {Array | Matrix} [size] If provided, an array or matrix with given\n   *                                size and filled with random values is returned\n   * @param {number} [min]  Minimum boundary for the random value, included\n   * @param {number} [max]  Maximum boundary for the random value, excluded\n   * @return {number | Array | Matrix} A random integer value\n   */\n\n  return typed(name, {\n    '': function _() {\n      return _randomInt(0, 1);\n    },\n    number: function number(max) {\n      return _randomInt(0, max);\n    },\n    'number, number': function numberNumber(min, max) {\n      return _randomInt(min, max);\n    },\n    'Array | Matrix': function ArrayMatrix(size) {\n      return _randomIntMatrix(size, 0, 1);\n    },\n    'Array | Matrix, number': function ArrayMatrixNumber(size, max) {\n      return _randomIntMatrix(size, 0, max);\n    },\n    'Array | Matrix, number, number': function ArrayMatrixNumberNumber(size, min, max) {\n      return _randomIntMatrix(size, min, max);\n    }\n  });\n  function _randomIntMatrix(size, min, max) {\n    var res = (0, _randomMatrix.randomMatrix)(size.valueOf(), function () {\n      return _randomInt(min, max);\n    });\n    return (0, _is.isMatrix)(size) ? size.create(res) : res;\n  }\n  function _randomInt(min, max) {\n    return Math.floor(min + rng() * (max - min));\n  }\n});\nexports.createRandomInt = createRandomInt;","map":{"version":3,"names":["Object","defineProperty","exports","value","createRandomInt","_factory","require","_randomMatrix","_seededRNG","_is","name","dependencies","factory","_ref","typed","config","on","rng","createRng","randomSeed","curr","prev","_","_randomInt","number","max","numberNumber","min","ArrayMatrix","size","_randomIntMatrix","ArrayMatrixNumber","ArrayMatrixNumberNumber","res","randomMatrix","valueOf","isMatrix","create","Math","floor"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/function/probability/randomInt.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRandomInt = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _randomMatrix = require(\"./util/randomMatrix.js\");\n\nvar _seededRNG = require(\"./util/seededRNG.js\");\n\nvar _is = require(\"../../utils/is.js\");\n\nvar name = 'randomInt';\nvar dependencies = ['typed', 'config', '?on'];\nvar createRandomInt = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      config = _ref.config,\n      on = _ref.on;\n  // seeded pseudo random number generator\n  var rng = (0, _seededRNG.createRng)(config.randomSeed);\n\n  if (on) {\n    on('config', function (curr, prev) {\n      if (curr.randomSeed !== prev.randomSeed) {\n        rng = (0, _seededRNG.createRng)(curr.randomSeed);\n      }\n    });\n  }\n  /**\n   * Return a random integer number larger or equal to `min` and smaller than `max`\n   * using a uniform distribution.\n   *\n   * Syntax:\n   *\n   *     math.randomInt()                // generate a random integer between 0 and 1\n   *     math.randomInt(max)             // generate a random integer between 0 and max\n   *     math.randomInt(min, max)        // generate a random integer between min and max\n   *     math.randomInt(size)            // generate a matrix with random integer between 0 and 1\n   *     math.randomInt(size, max)       // generate a matrix with random integer between 0 and max\n   *     math.randomInt(size, min, max)  // generate a matrix with random integer between min and max\n   *\n   * Examples:\n   *\n   *     math.randomInt(100)    // returns a random integer between 0 and 100\n   *     math.randomInt(30, 40) // returns a random integer between 30 and 40\n   *     math.randomInt([2, 3]) // returns a 2x3 matrix with random integers between 0 and 1\n   *\n   * See also:\n   *\n   *     random, pickRandom\n   *\n   * @param {Array | Matrix} [size] If provided, an array or matrix with given\n   *                                size and filled with random values is returned\n   * @param {number} [min]  Minimum boundary for the random value, included\n   * @param {number} [max]  Maximum boundary for the random value, excluded\n   * @return {number | Array | Matrix} A random integer value\n   */\n\n\n  return typed(name, {\n    '': function _() {\n      return _randomInt(0, 1);\n    },\n    number: function number(max) {\n      return _randomInt(0, max);\n    },\n    'number, number': function numberNumber(min, max) {\n      return _randomInt(min, max);\n    },\n    'Array | Matrix': function ArrayMatrix(size) {\n      return _randomIntMatrix(size, 0, 1);\n    },\n    'Array | Matrix, number': function ArrayMatrixNumber(size, max) {\n      return _randomIntMatrix(size, 0, max);\n    },\n    'Array | Matrix, number, number': function ArrayMatrixNumberNumber(size, min, max) {\n      return _randomIntMatrix(size, min, max);\n    }\n  });\n\n  function _randomIntMatrix(size, min, max) {\n    var res = (0, _randomMatrix.randomMatrix)(size.valueOf(), function () {\n      return _randomInt(min, max);\n    });\n    return (0, _is.isMatrix)(size) ? size.create(res) : res;\n  }\n\n  function _randomInt(min, max) {\n    return Math.floor(min + rng() * (max - min));\n  }\n});\nexports.createRandomInt = createRandomInt;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,eAAe,GAAG,KAAK,CAAC;AAEhC,IAAIC,QAAQ,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAEhD,IAAIC,aAAa,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AAErD,IAAIE,UAAU,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAE/C,IAAIG,GAAG,GAAGH,OAAO,CAAC,mBAAmB,CAAC;AAEtC,IAAII,IAAI,GAAG,WAAW;AACtB,IAAIC,YAAY,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC;AAC7C,IAAIP,eAAe,GAAG,eAAe,CAAC,CAAC,EAAEC,QAAQ,CAACO,OAAO,EAAEF,IAAI,EAAEC,YAAY,EAAE,UAAUE,IAAI,EAAE;EAC7F,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;IAClBC,MAAM,GAAGF,IAAI,CAACE,MAAM;IACpBC,EAAE,GAAGH,IAAI,CAACG,EAAE;EAChB;EACA,IAAIC,GAAG,GAAG,CAAC,CAAC,EAAET,UAAU,CAACU,SAAS,EAAEH,MAAM,CAACI,UAAU,CAAC;EAEtD,IAAIH,EAAE,EAAE;IACNA,EAAE,CAAC,QAAQ,EAAE,UAAUI,IAAI,EAAEC,IAAI,EAAE;MACjC,IAAID,IAAI,CAACD,UAAU,KAAKE,IAAI,CAACF,UAAU,EAAE;QACvCF,GAAG,GAAG,CAAC,CAAC,EAAET,UAAU,CAACU,SAAS,EAAEE,IAAI,CAACD,UAAU,CAAC;MAClD;IACF,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGE,OAAOL,KAAK,CAACJ,IAAI,EAAE;IACjB,EAAE,EAAE,SAASY,CAAC,GAAG;MACf,OAAOC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;IACzB,CAAC;IACDC,MAAM,EAAE,SAASA,MAAM,CAACC,GAAG,EAAE;MAC3B,OAAOF,UAAU,CAAC,CAAC,EAAEE,GAAG,CAAC;IAC3B,CAAC;IACD,gBAAgB,EAAE,SAASC,YAAY,CAACC,GAAG,EAAEF,GAAG,EAAE;MAChD,OAAOF,UAAU,CAACI,GAAG,EAAEF,GAAG,CAAC;IAC7B,CAAC;IACD,gBAAgB,EAAE,SAASG,WAAW,CAACC,IAAI,EAAE;MAC3C,OAAOC,gBAAgB,CAACD,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;IACrC,CAAC;IACD,wBAAwB,EAAE,SAASE,iBAAiB,CAACF,IAAI,EAAEJ,GAAG,EAAE;MAC9D,OAAOK,gBAAgB,CAACD,IAAI,EAAE,CAAC,EAAEJ,GAAG,CAAC;IACvC,CAAC;IACD,gCAAgC,EAAE,SAASO,uBAAuB,CAACH,IAAI,EAAEF,GAAG,EAAEF,GAAG,EAAE;MACjF,OAAOK,gBAAgB,CAACD,IAAI,EAAEF,GAAG,EAAEF,GAAG,CAAC;IACzC;EACF,CAAC,CAAC;EAEF,SAASK,gBAAgB,CAACD,IAAI,EAAEF,GAAG,EAAEF,GAAG,EAAE;IACxC,IAAIQ,GAAG,GAAG,CAAC,CAAC,EAAE1B,aAAa,CAAC2B,YAAY,EAAEL,IAAI,CAACM,OAAO,EAAE,EAAE,YAAY;MACpE,OAAOZ,UAAU,CAACI,GAAG,EAAEF,GAAG,CAAC;IAC7B,CAAC,CAAC;IACF,OAAO,CAAC,CAAC,EAAEhB,GAAG,CAAC2B,QAAQ,EAAEP,IAAI,CAAC,GAAGA,IAAI,CAACQ,MAAM,CAACJ,GAAG,CAAC,GAAGA,GAAG;EACzD;EAEA,SAASV,UAAU,CAACI,GAAG,EAAEF,GAAG,EAAE;IAC5B,OAAOa,IAAI,CAACC,KAAK,CAACZ,GAAG,GAAGV,GAAG,EAAE,IAAIQ,GAAG,GAAGE,GAAG,CAAC,CAAC;EAC9C;AACF,CAAC,CAAC;AACFzB,OAAO,CAACE,eAAe,GAAGA,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}