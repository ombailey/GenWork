{"ast":null,"code":"\"use strict\";\n\n/**\n*  @license\n* Copyright 2022 JsData. All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n* ==========================================================================\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.throwErrorOnWrongColName = exports.checkIfColsExist = void 0;\nvar checkIfColsExist = function (ndframe, cols) {\n  cols.forEach(function (col) {\n    if (!ndframe.columns.includes(col)) {\n      throw Error(\"Column Error: \" + col + \" not found in columns. Columns should be one of [ \" + ndframe.columns + \" ]\");\n    }\n  });\n  return cols;\n};\nexports.checkIfColsExist = checkIfColsExist;\nvar throwErrorOnWrongColName = function (ndframe, colName) {\n  if (!ndframe.columns.includes(colName)) {\n    throw Error(\"ParamError: specified column \" + colName + \" not found in columns\");\n  }\n};\nexports.throwErrorOnWrongColName = throwErrorOnWrongColName;","map":{"version":3,"names":["Object","defineProperty","exports","value","throwErrorOnWrongColName","checkIfColsExist","ndframe","cols","forEach","col","columns","includes","Error","colName"],"sources":["/Users/omarbailey/node_modules/danfojs/dist/danfojs-base/plotting/plotly/utils.js"],"sourcesContent":["\"use strict\";\n/**\n*  @license\n* Copyright 2022 JsData. All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n* ==========================================================================\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.throwErrorOnWrongColName = exports.checkIfColsExist = void 0;\nvar checkIfColsExist = function (ndframe, cols) {\n    cols.forEach(function (col) {\n        if (!ndframe.columns.includes(col)) {\n            throw Error(\"Column Error: \" + col + \" not found in columns. Columns should be one of [ \" + ndframe.columns + \" ]\");\n        }\n    });\n    return cols;\n};\nexports.checkIfColsExist = checkIfColsExist;\nvar throwErrorOnWrongColName = function (ndframe, colName) {\n    if (!ndframe.columns.includes(colName)) {\n        throw Error(\"ParamError: specified column \" + colName + \" not found in columns\");\n    }\n};\nexports.throwErrorOnWrongColName = throwErrorOnWrongColName;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,wBAAwB,GAAGF,OAAO,CAACG,gBAAgB,GAAG,KAAK,CAAC;AACpE,IAAIA,gBAAgB,GAAG,UAAUC,OAAO,EAAEC,IAAI,EAAE;EAC5CA,IAAI,CAACC,OAAO,CAAC,UAAUC,GAAG,EAAE;IACxB,IAAI,CAACH,OAAO,CAACI,OAAO,CAACC,QAAQ,CAACF,GAAG,CAAC,EAAE;MAChC,MAAMG,KAAK,CAAC,gBAAgB,GAAGH,GAAG,GAAG,oDAAoD,GAAGH,OAAO,CAACI,OAAO,GAAG,IAAI,CAAC;IACvH;EACJ,CAAC,CAAC;EACF,OAAOH,IAAI;AACf,CAAC;AACDL,OAAO,CAACG,gBAAgB,GAAGA,gBAAgB;AAC3C,IAAID,wBAAwB,GAAG,UAAUE,OAAO,EAAEO,OAAO,EAAE;EACvD,IAAI,CAACP,OAAO,CAACI,OAAO,CAACC,QAAQ,CAACE,OAAO,CAAC,EAAE;IACpC,MAAMD,KAAK,CAAC,+BAA+B,GAAGC,OAAO,GAAG,uBAAuB,CAAC;EACpF;AACJ,CAAC;AACDX,OAAO,CAACE,wBAAwB,GAAGA,wBAAwB"},"metadata":{},"sourceType":"script","externalDependencies":[]}