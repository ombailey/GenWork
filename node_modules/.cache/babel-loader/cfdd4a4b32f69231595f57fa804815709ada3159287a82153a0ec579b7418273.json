{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setCartesianDocs = void 0;\nvar setCartesianDocs = {\n  name: 'setCartesian',\n  category: 'Set',\n  syntax: ['setCartesian(set1, set2)'],\n  description: 'Create the cartesian product of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.',\n  examples: ['setCartesian([1, 2], [3, 4])'],\n  seealso: ['setUnion', 'setIntersect', 'setDifference', 'setPowerset']\n};\nexports.setCartesianDocs = setCartesianDocs;","map":{"version":3,"names":["Object","defineProperty","exports","value","setCartesianDocs","name","category","syntax","description","examples","seealso"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/set/setCartesian.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setCartesianDocs = void 0;\nvar setCartesianDocs = {\n  name: 'setCartesian',\n  category: 'Set',\n  syntax: ['setCartesian(set1, set2)'],\n  description: 'Create the cartesian product of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.',\n  examples: ['setCartesian([1, 2], [3, 4])'],\n  seealso: ['setUnion', 'setIntersect', 'setDifference', 'setPowerset']\n};\nexports.setCartesianDocs = setCartesianDocs;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,gBAAgB,GAAG,KAAK,CAAC;AACjC,IAAIA,gBAAgB,GAAG;EACrBC,IAAI,EAAE,cAAc;EACpBC,QAAQ,EAAE,KAAK;EACfC,MAAM,EAAE,CAAC,0BAA0B,CAAC;EACpCC,WAAW,EAAE,4IAA4I;EACzJC,QAAQ,EAAE,CAAC,8BAA8B,CAAC;EAC1CC,OAAO,EAAE,CAAC,UAAU,EAAE,cAAc,EAAE,eAAe,EAAE,aAAa;AACtE,CAAC;AACDR,OAAO,CAACE,gBAAgB,GAAGA,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}