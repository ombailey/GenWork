{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createString = void 0;\nvar _factory = require(\"../utils/factory.js\");\nvar _collection = require(\"../utils/collection.js\");\nvar _number = require(\"../utils/number.js\");\nvar name = 'string';\nvar dependencies = ['typed'];\nvar createString = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Create a string or convert any object into a string.\n   * Elements of Arrays and Matrices are processed element wise.\n   *\n   * Syntax:\n   *\n   *    math.string(value)\n   *\n   * Examples:\n   *\n   *    math.string(4.2)               // returns string '4.2'\n   *    math.string(math.complex(3, 2) // returns string '3 + 2i'\n   *\n   *    const u = math.unit(5, 'km')\n   *    math.string(u.to('m'))         // returns string '5000 m'\n   *\n   *    math.string([true, false])     // returns ['true', 'false']\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, matrix, number, unit\n   *\n   * @param {* | Array | Matrix | null} [value]  A value to convert to a string\n   * @return {string | Array | Matrix} The created string\n   */\n  return typed(name, {\n    '': function _() {\n      return '';\n    },\n    number: _number.format,\n    \"null\": function _null(x) {\n      return 'null';\n    },\n    \"boolean\": function boolean(x) {\n      return x + '';\n    },\n    string: function string(x) {\n      return x;\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0, _collection.deepMap)(x, this);\n    },\n    any: function any(x) {\n      return String(x);\n    }\n  });\n});\nexports.createString = createString;","map":{"version":3,"names":["Object","defineProperty","exports","value","createString","_factory","require","_collection","_number","name","dependencies","factory","_ref","typed","_","number","format","_null","x","boolean","string","ArrayMatrix","deepMap","any","String"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/type/string.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createString = void 0;\n\nvar _factory = require(\"../utils/factory.js\");\n\nvar _collection = require(\"../utils/collection.js\");\n\nvar _number = require(\"../utils/number.js\");\n\nvar name = 'string';\nvar dependencies = ['typed'];\nvar createString = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Create a string or convert any object into a string.\n   * Elements of Arrays and Matrices are processed element wise.\n   *\n   * Syntax:\n   *\n   *    math.string(value)\n   *\n   * Examples:\n   *\n   *    math.string(4.2)               // returns string '4.2'\n   *    math.string(math.complex(3, 2) // returns string '3 + 2i'\n   *\n   *    const u = math.unit(5, 'km')\n   *    math.string(u.to('m'))         // returns string '5000 m'\n   *\n   *    math.string([true, false])     // returns ['true', 'false']\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, matrix, number, unit\n   *\n   * @param {* | Array | Matrix | null} [value]  A value to convert to a string\n   * @return {string | Array | Matrix} The created string\n   */\n  return typed(name, {\n    '': function _() {\n      return '';\n    },\n    number: _number.format,\n    \"null\": function _null(x) {\n      return 'null';\n    },\n    \"boolean\": function boolean(x) {\n      return x + '';\n    },\n    string: function string(x) {\n      return x;\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0, _collection.deepMap)(x, this);\n    },\n    any: function any(x) {\n      return String(x);\n    }\n  });\n});\nexports.createString = createString;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAE7B,IAAIC,QAAQ,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAE7C,IAAIC,WAAW,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AAEnD,IAAIE,OAAO,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAE3C,IAAIG,IAAI,GAAG,QAAQ;AACnB,IAAIC,YAAY,GAAG,CAAC,OAAO,CAAC;AAC5B,IAAIN,YAAY,GAAG,eAAe,CAAC,CAAC,EAAEC,QAAQ,CAACM,OAAO,EAAEF,IAAI,EAAEC,YAAY,EAAE,UAAUE,IAAI,EAAE;EAC1F,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;;EAEtB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOA,KAAK,CAACJ,IAAI,EAAE;IACjB,EAAE,EAAE,SAASK,CAAC,GAAG;MACf,OAAO,EAAE;IACX,CAAC;IACDC,MAAM,EAAEP,OAAO,CAACQ,MAAM;IACtB,MAAM,EAAE,SAASC,KAAK,CAACC,CAAC,EAAE;MACxB,OAAO,MAAM;IACf,CAAC;IACD,SAAS,EAAE,SAASC,OAAO,CAACD,CAAC,EAAE;MAC7B,OAAOA,CAAC,GAAG,EAAE;IACf,CAAC;IACDE,MAAM,EAAE,SAASA,MAAM,CAACF,CAAC,EAAE;MACzB,OAAOA,CAAC;IACV,CAAC;IACD,gBAAgB,EAAE,SAASG,WAAW,CAACH,CAAC,EAAE;MACxC,OAAO,CAAC,CAAC,EAAEX,WAAW,CAACe,OAAO,EAAEJ,CAAC,EAAE,IAAI,CAAC;IAC1C,CAAC;IACDK,GAAG,EAAE,SAASA,GAAG,CAACL,CAAC,EAAE;MACnB,OAAOM,MAAM,CAACN,CAAC,CAAC;IAClB;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AACFhB,OAAO,CAACE,YAAY,GAAGA,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}