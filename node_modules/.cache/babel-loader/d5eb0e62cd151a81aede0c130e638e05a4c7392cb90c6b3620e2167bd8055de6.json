{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRoundNumber = exports.createRound = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _factory = require(\"../../utils/factory.js\");\nvar _collection = require(\"../../utils/collection.js\");\nvar _number = require(\"../../utils/number.js\");\nvar _algorithm = require(\"../../type/matrix/utils/algorithm11.js\");\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm12.js\");\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm14.js\");\nvar _index = require(\"../../plain/number/index.js\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar NO_INT = 'Number of decimals in function round must be an integer';\nvar name = 'round';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'BigNumber', 'DenseMatrix'];\nvar createRound = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    matrix = _ref.matrix,\n    equalScalar = _ref.equalScalar,\n    zeros = _ref.zeros,\n    BigNumber = _ref.BigNumber,\n    DenseMatrix = _ref.DenseMatrix;\n  var algorithm11 = (0, _algorithm.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm12 = (0, _algorithm2.createAlgorithm12)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm14 = (0, _algorithm3.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Round a value towards the nearest integer.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.round(x)\n   *    math.round(x, n)\n   *\n   * Examples:\n   *\n   *    math.round(3.22)             // returns number 3\n   *    math.round(3.82)             // returns number 4\n   *    math.round(-4.2)             // returns number -4\n   *    math.round(-4.7)             // returns number -5\n   *    math.round(3.22, 1)          // returns number 3.2\n   *    math.round(3.88, 1)          // returns number 3.9\n   *    math.round(-4.21, 1)         // returns number -4.2\n   *    math.round(-4.71, 1)         // returns number -4.7\n   *    math.round(math.pi, 3)       // returns number 3.142\n   *    math.round(123.45678, 2)     // returns number 123.46\n   *\n   *    const c = math.complex(3.2, -2.7)\n   *    math.round(c)                // returns Complex 3 - 3i\n   *\n   *    math.round([3.2, 3.8, -4.7]) // returns Array [3, 4, -5]\n   *\n   * See also:\n   *\n   *    ceil, fix, floor\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                            Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value\n   */\n\n  return typed(name, _objectSpread(_objectSpread({}, roundNumberSignatures), {}, {\n    Complex: function Complex(x) {\n      return x.round();\n    },\n    'Complex, number': function ComplexNumber(x, n) {\n      if (n % 1) {\n        throw new TypeError(NO_INT);\n      }\n      return x.round(n);\n    },\n    'Complex, BigNumber': function ComplexBigNumber(x, n) {\n      if (!n.isInteger()) {\n        throw new TypeError(NO_INT);\n      }\n      var _n = n.toNumber();\n      return x.round(_n);\n    },\n    'number, BigNumber': function numberBigNumber(x, n) {\n      if (!n.isInteger()) {\n        throw new TypeError(NO_INT);\n      }\n      return new BigNumber(x).toDecimalPlaces(n.toNumber());\n    },\n    BigNumber: function BigNumber(x) {\n      return x.toDecimalPlaces(0);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, n) {\n      if (!n.isInteger()) {\n        throw new TypeError(NO_INT);\n      }\n      return x.toDecimalPlaces(n.toNumber());\n    },\n    Fraction: function Fraction(x) {\n      return x.round();\n    },\n    'Fraction, number': function FractionNumber(x, n) {\n      if (n % 1) {\n        throw new TypeError(NO_INT);\n      }\n      return x.round(n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since round(0) = 0\n      return (0, _collection.deepMap)(x, this, true);\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | Complex | BigNumber, SparseMatrix': function numberComplexBigNumberSparseMatrix(x, y) {\n      // check scalar is zero\n      if (equalScalar(x, 0)) {\n        // do not execute algorithm, result will be a zero matrix\n        return zeros(y.size(), y.storage());\n      }\n      return algorithm12(y, x, this, true);\n    },\n    'number | Complex | BigNumber, DenseMatrix': function numberComplexBigNumberDenseMatrix(x, y) {\n      // check scalar is zero\n      if (equalScalar(x, 0)) {\n        // do not execute algorithm, result will be a zero matrix\n        return zeros(y.size(), y.storage());\n      }\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  }));\n});\nexports.createRound = createRound;\nvar roundNumberSignatures = {\n  number: _index.roundNumber,\n  'number, number': function numberNumber(x, n) {\n    if (!(0, _number.isInteger)(n)) {\n      throw new TypeError(NO_INT);\n    }\n    if (n < 0 || n > 15) {\n      throw new Error('Number of decimals in function round must be in the range of 0-15');\n    }\n    return (0, _index.roundNumber)(x, n);\n  }\n};\nvar createRoundNumber = /* #__PURE__ */(0, _factory.factory)(name, ['typed'], function (_ref2) {\n  var typed = _ref2.typed;\n  return typed(name, roundNumberSignatures);\n});\nexports.createRoundNumber = createRoundNumber;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","createRoundNumber","createRound","_defineProperty2","_factory","_collection","_number","_algorithm","_algorithm2","_algorithm3","_index","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","NO_INT","name","dependencies","factory","_ref","typed","matrix","equalScalar","zeros","BigNumber","DenseMatrix","algorithm11","createAlgorithm11","algorithm12","createAlgorithm12","algorithm14","createAlgorithm14","roundNumberSignatures","Complex","x","round","ComplexNumber","n","TypeError","ComplexBigNumber","isInteger","_n","toNumber","numberBigNumber","toDecimalPlaces","BigNumberBigNumber","Fraction","FractionNumber","ArrayMatrix","deepMap","SparseMatrixNumberBigNumber","y","DenseMatrixNumberBigNumber","numberComplexBigNumberSparseMatrix","size","storage","numberComplexBigNumberDenseMatrix","ArrayNumberBigNumber","valueOf","numberComplexBigNumberArray","number","roundNumber","numberNumber","Error","_ref2"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/function/arithmetic/round.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRoundNumber = exports.createRound = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _collection = require(\"../../utils/collection.js\");\n\nvar _number = require(\"../../utils/number.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm11.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm12.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar _index = require(\"../../plain/number/index.js\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar NO_INT = 'Number of decimals in function round must be an integer';\nvar name = 'round';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'BigNumber', 'DenseMatrix'];\nvar createRound = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      zeros = _ref.zeros,\n      BigNumber = _ref.BigNumber,\n      DenseMatrix = _ref.DenseMatrix;\n  var algorithm11 = (0, _algorithm.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm12 = (0, _algorithm2.createAlgorithm12)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm14 = (0, _algorithm3.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Round a value towards the nearest integer.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.round(x)\n   *    math.round(x, n)\n   *\n   * Examples:\n   *\n   *    math.round(3.22)             // returns number 3\n   *    math.round(3.82)             // returns number 4\n   *    math.round(-4.2)             // returns number -4\n   *    math.round(-4.7)             // returns number -5\n   *    math.round(3.22, 1)          // returns number 3.2\n   *    math.round(3.88, 1)          // returns number 3.9\n   *    math.round(-4.21, 1)         // returns number -4.2\n   *    math.round(-4.71, 1)         // returns number -4.7\n   *    math.round(math.pi, 3)       // returns number 3.142\n   *    math.round(123.45678, 2)     // returns number 123.46\n   *\n   *    const c = math.complex(3.2, -2.7)\n   *    math.round(c)                // returns Complex 3 - 3i\n   *\n   *    math.round([3.2, 3.8, -4.7]) // returns Array [3, 4, -5]\n   *\n   * See also:\n   *\n   *    ceil, fix, floor\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                            Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value\n   */\n\n  return typed(name, _objectSpread(_objectSpread({}, roundNumberSignatures), {}, {\n    Complex: function Complex(x) {\n      return x.round();\n    },\n    'Complex, number': function ComplexNumber(x, n) {\n      if (n % 1) {\n        throw new TypeError(NO_INT);\n      }\n\n      return x.round(n);\n    },\n    'Complex, BigNumber': function ComplexBigNumber(x, n) {\n      if (!n.isInteger()) {\n        throw new TypeError(NO_INT);\n      }\n\n      var _n = n.toNumber();\n\n      return x.round(_n);\n    },\n    'number, BigNumber': function numberBigNumber(x, n) {\n      if (!n.isInteger()) {\n        throw new TypeError(NO_INT);\n      }\n\n      return new BigNumber(x).toDecimalPlaces(n.toNumber());\n    },\n    BigNumber: function BigNumber(x) {\n      return x.toDecimalPlaces(0);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, n) {\n      if (!n.isInteger()) {\n        throw new TypeError(NO_INT);\n      }\n\n      return x.toDecimalPlaces(n.toNumber());\n    },\n    Fraction: function Fraction(x) {\n      return x.round();\n    },\n    'Fraction, number': function FractionNumber(x, n) {\n      if (n % 1) {\n        throw new TypeError(NO_INT);\n      }\n\n      return x.round(n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since round(0) = 0\n      return (0, _collection.deepMap)(x, this, true);\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | Complex | BigNumber, SparseMatrix': function numberComplexBigNumberSparseMatrix(x, y) {\n      // check scalar is zero\n      if (equalScalar(x, 0)) {\n        // do not execute algorithm, result will be a zero matrix\n        return zeros(y.size(), y.storage());\n      }\n\n      return algorithm12(y, x, this, true);\n    },\n    'number | Complex | BigNumber, DenseMatrix': function numberComplexBigNumberDenseMatrix(x, y) {\n      // check scalar is zero\n      if (equalScalar(x, 0)) {\n        // do not execute algorithm, result will be a zero matrix\n        return zeros(y.size(), y.storage());\n      }\n\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  }));\n});\nexports.createRound = createRound;\nvar roundNumberSignatures = {\n  number: _index.roundNumber,\n  'number, number': function numberNumber(x, n) {\n    if (!(0, _number.isInteger)(n)) {\n      throw new TypeError(NO_INT);\n    }\n\n    if (n < 0 || n > 15) {\n      throw new Error('Number of decimals in function round must be in the range of 0-15');\n    }\n\n    return (0, _index.roundNumber)(x, n);\n  }\n};\nvar createRoundNumber = /* #__PURE__ */(0, _factory.factory)(name, ['typed'], function (_ref2) {\n  var typed = _ref2.typed;\n  return typed(name, roundNumberSignatures);\n});\nexports.createRoundNumber = createRoundNumber;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}