{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createForEach = void 0;\nvar _function = require(\"../../utils/function.js\");\nvar _array = require(\"../../utils/array.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar name = 'forEach';\nvar dependencies = ['typed'];\nvar createForEach = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Iterate over all elements of a matrix/array, and executes the given callback function.\n   *\n   * Syntax:\n   *\n   *    math.forEach(x, callback)\n   *\n   * Examples:\n   *\n   *    math.forEach([1, 2, 3], function(value) {\n   *      console.log(value)\n   *    })\n   *    // outputs 1, 2, 3\n   *\n   * See also:\n   *\n   *    filter, map, sort\n   *\n   * @param {Matrix | Array} x    The matrix to iterate on.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix/array being traversed.\n   */\n  return typed(name, {\n    'Array, function': _forEach,\n    'Matrix, function': function MatrixFunction(x, callback) {\n      return x.forEach(callback);\n    }\n  });\n});\n/**\n * forEach for a multi dimensional array\n * @param {Array} array\n * @param {Function} callback\n * @private\n */\n\nexports.createForEach = createForEach;\nfunction _forEach(array, callback) {\n  // figure out what number of arguments the callback function expects\n  var args = (0, _function.maxArgumentCount)(callback);\n  var recurse = function recurse(value, index) {\n    if (Array.isArray(value)) {\n      (0, _array.forEach)(value, function (child, i) {\n        // we create a copy of the index array and append the new index value\n        recurse(child, index.concat(i));\n      });\n    } else {\n      // invoke the callback function with the right number of arguments\n      if (args === 1) {\n        callback(value);\n      } else if (args === 2) {\n        callback(value, index);\n      } else {\n        // 3 or -1\n        callback(value, index, array);\n      }\n    }\n  };\n  recurse(array, []);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","createForEach","_function","require","_array","_factory","name","dependencies","factory","_ref","typed","_forEach","MatrixFunction","x","callback","forEach","array","args","maxArgumentCount","recurse","index","Array","isArray","child","i","concat"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/function/matrix/forEach.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createForEach = void 0;\n\nvar _function = require(\"../../utils/function.js\");\n\nvar _array = require(\"../../utils/array.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'forEach';\nvar dependencies = ['typed'];\nvar createForEach = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Iterate over all elements of a matrix/array, and executes the given callback function.\n   *\n   * Syntax:\n   *\n   *    math.forEach(x, callback)\n   *\n   * Examples:\n   *\n   *    math.forEach([1, 2, 3], function(value) {\n   *      console.log(value)\n   *    })\n   *    // outputs 1, 2, 3\n   *\n   * See also:\n   *\n   *    filter, map, sort\n   *\n   * @param {Matrix | Array} x    The matrix to iterate on.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix/array being traversed.\n   */\n  return typed(name, {\n    'Array, function': _forEach,\n    'Matrix, function': function MatrixFunction(x, callback) {\n      return x.forEach(callback);\n    }\n  });\n});\n/**\n * forEach for a multi dimensional array\n * @param {Array} array\n * @param {Function} callback\n * @private\n */\n\nexports.createForEach = createForEach;\n\nfunction _forEach(array, callback) {\n  // figure out what number of arguments the callback function expects\n  var args = (0, _function.maxArgumentCount)(callback);\n\n  var recurse = function recurse(value, index) {\n    if (Array.isArray(value)) {\n      (0, _array.forEach)(value, function (child, i) {\n        // we create a copy of the index array and append the new index value\n        recurse(child, index.concat(i));\n      });\n    } else {\n      // invoke the callback function with the right number of arguments\n      if (args === 1) {\n        callback(value);\n      } else if (args === 2) {\n        callback(value, index);\n      } else {\n        // 3 or -1\n        callback(value, index, array);\n      }\n    }\n  };\n\n  recurse(array, []);\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,aAAa,GAAG,KAAK,CAAC;AAE9B,IAAIC,SAAS,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AAElD,IAAIC,MAAM,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAE5C,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAwB,CAAC;AAEhD,IAAIG,IAAI,GAAG,SAAS;AACpB,IAAIC,YAAY,GAAG,CAAC,OAAO,CAAC;AAC5B,IAAIN,aAAa,GAAG,eAAe,CAAC,CAAC,EAAEI,QAAQ,CAACG,OAAO,EAAEF,IAAI,EAAEC,YAAY,EAAE,UAAUE,IAAI,EAAE;EAC3F,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;;EAEtB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOA,KAAK,CAACJ,IAAI,EAAE;IACjB,iBAAiB,EAAEK,QAAQ;IAC3B,kBAAkB,EAAE,SAASC,cAAc,CAACC,CAAC,EAAEC,QAAQ,EAAE;MACvD,OAAOD,CAAC,CAACE,OAAO,CAACD,QAAQ,CAAC;IAC5B;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;;AAEAf,OAAO,CAACE,aAAa,GAAGA,aAAa;AAErC,SAASU,QAAQ,CAACK,KAAK,EAAEF,QAAQ,EAAE;EACjC;EACA,IAAIG,IAAI,GAAG,CAAC,CAAC,EAAEf,SAAS,CAACgB,gBAAgB,EAAEJ,QAAQ,CAAC;EAEpD,IAAIK,OAAO,GAAG,SAASA,OAAO,CAACnB,KAAK,EAAEoB,KAAK,EAAE;IAC3C,IAAIC,KAAK,CAACC,OAAO,CAACtB,KAAK,CAAC,EAAE;MACxB,CAAC,CAAC,EAAEI,MAAM,CAACW,OAAO,EAAEf,KAAK,EAAE,UAAUuB,KAAK,EAAEC,CAAC,EAAE;QAC7C;QACAL,OAAO,CAACI,KAAK,EAAEH,KAAK,CAACK,MAAM,CAACD,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACA,IAAIP,IAAI,KAAK,CAAC,EAAE;QACdH,QAAQ,CAACd,KAAK,CAAC;MACjB,CAAC,MAAM,IAAIiB,IAAI,KAAK,CAAC,EAAE;QACrBH,QAAQ,CAACd,KAAK,EAAEoB,KAAK,CAAC;MACxB,CAAC,MAAM;QACL;QACAN,QAAQ,CAACd,KAAK,EAAEoB,KAAK,EAAEJ,KAAK,CAAC;MAC/B;IACF;EACF,CAAC;EAEDG,OAAO,CAACH,KAAK,EAAE,EAAE,CAAC;AACpB"},"metadata":{},"sourceType":"script","externalDependencies":[]}