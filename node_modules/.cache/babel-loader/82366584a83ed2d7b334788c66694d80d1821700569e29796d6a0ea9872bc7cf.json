{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSubsetTransform = void 0;\nvar _factory = require(\"../../utils/factory.js\");\nvar _errorTransform = require(\"./utils/errorTransform.js\");\nvar _subset = require(\"../../function/matrix/subset.js\");\nvar name = 'subset';\nvar dependencies = ['typed', 'matrix'];\nvar createSubsetTransform = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    matrix = _ref.matrix;\n  var subset = (0, _subset.createSubset)({\n    typed: typed,\n    matrix: matrix\n  });\n  /**\n   * Attach a transform function to math.subset\n   * Adds a property transform containing the transform function.\n   *\n   * This transform creates a range which includes the end value\n   */\n\n  return typed('subset', {\n    '...any': function any(args) {\n      try {\n        return subset.apply(null, args);\n      } catch (err) {\n        throw (0, _errorTransform.errorTransform)(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});\nexports.createSubsetTransform = createSubsetTransform;","map":{"version":3,"names":["Object","defineProperty","exports","value","createSubsetTransform","_factory","require","_errorTransform","_subset","name","dependencies","factory","_ref","typed","matrix","subset","createSubset","any","args","apply","err","errorTransform","isTransformFunction"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/expression/transform/subset.transform.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSubsetTransform = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _errorTransform = require(\"./utils/errorTransform.js\");\n\nvar _subset = require(\"../../function/matrix/subset.js\");\n\nvar name = 'subset';\nvar dependencies = ['typed', 'matrix'];\nvar createSubsetTransform = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix;\n  var subset = (0, _subset.createSubset)({\n    typed: typed,\n    matrix: matrix\n  });\n  /**\n   * Attach a transform function to math.subset\n   * Adds a property transform containing the transform function.\n   *\n   * This transform creates a range which includes the end value\n   */\n\n  return typed('subset', {\n    '...any': function any(args) {\n      try {\n        return subset.apply(null, args);\n      } catch (err) {\n        throw (0, _errorTransform.errorTransform)(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});\nexports.createSubsetTransform = createSubsetTransform;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,qBAAqB,GAAG,KAAK,CAAC;AAEtC,IAAIC,QAAQ,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAEhD,IAAIC,eAAe,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AAE1D,IAAIE,OAAO,GAAGF,OAAO,CAAC,iCAAiC,CAAC;AAExD,IAAIG,IAAI,GAAG,QAAQ;AACnB,IAAIC,YAAY,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC;AACtC,IAAIN,qBAAqB,GAAG,eAAe,CAAC,CAAC,EAAEC,QAAQ,CAACM,OAAO,EAAEF,IAAI,EAAEC,YAAY,EAAE,UAAUE,IAAI,EAAE;EACnG,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;IAClBC,MAAM,GAAGF,IAAI,CAACE,MAAM;EACxB,IAAIC,MAAM,GAAG,CAAC,CAAC,EAAEP,OAAO,CAACQ,YAAY,EAAE;IACrCH,KAAK,EAAEA,KAAK;IACZC,MAAM,EAAEA;EACV,CAAC,CAAC;EACF;AACF;AACA;AACA;AACA;AACA;;EAEE,OAAOD,KAAK,CAAC,QAAQ,EAAE;IACrB,QAAQ,EAAE,SAASI,GAAG,CAACC,IAAI,EAAE;MAC3B,IAAI;QACF,OAAOH,MAAM,CAACI,KAAK,CAAC,IAAI,EAAED,IAAI,CAAC;MACjC,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZ,MAAM,CAAC,CAAC,EAAEb,eAAe,CAACc,cAAc,EAAED,GAAG,CAAC;MAChD;IACF;EACF,CAAC,CAAC;AACJ,CAAC,EAAE;EACDE,mBAAmB,EAAE;AACvB,CAAC,CAAC;AACFpB,OAAO,CAACE,qBAAqB,GAAGA,qBAAqB"},"metadata":{},"sourceType":"script","externalDependencies":[]}