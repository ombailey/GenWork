{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createNthRootNumber = exports.createNthRoot = void 0;\nvar _factory = require(\"../../utils/factory.js\");\nvar _algorithm = require(\"../../type/matrix/utils/algorithm01.js\");\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm02.js\");\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm06.js\");\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm11.js\");\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm13.js\");\nvar _algorithm6 = require(\"../../type/matrix/utils/algorithm14.js\");\nvar _index = require(\"../../plain/number/index.js\");\nvar name = 'nthRoot';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'BigNumber'];\nvar createNthRoot = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    matrix = _ref.matrix,\n    equalScalar = _ref.equalScalar,\n    _BigNumber = _ref.BigNumber;\n  var algorithm01 = (0, _algorithm.createAlgorithm01)({\n    typed: typed\n  });\n  var algorithm02 = (0, _algorithm2.createAlgorithm02)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm06 = (0, _algorithm3.createAlgorithm06)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm11 = (0, _algorithm4.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm13 = (0, _algorithm5.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm6.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Calculate the nth root of a value.\n   * The principal nth root of a positive real number A, is the positive real\n   * solution of the equation\n   *\n   *     x^root = A\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *     math.nthRoot(a)\n   *     math.nthRoot(a, root)\n   *\n   * Examples:\n   *\n   *     math.nthRoot(9, 2)    // returns 3, as 3^2 == 9\n   *     math.sqrt(9)          // returns 3, as 3^2 == 9\n   *     math.nthRoot(64, 3)   // returns 4, as 4^3 == 64\n   *\n   * See also:\n   *\n   *     sqrt, pow\n   *\n   * @param {number | BigNumber | Array | Matrix | Complex} a\n   *              Value for which to calculate the nth root\n   * @param {number | BigNumber} [root=2]    The root.\n   * @return {number | Complex | Array | Matrix} Returns the nth root of `a`\n   */\n\n  var complexErr = '' + 'Complex number not supported in function nthRoot. ' + 'Use nthRoots instead.';\n  return typed(name, {\n    number: function number(x) {\n      return (0, _index.nthRootNumber)(x, 2);\n    },\n    'number, number': _index.nthRootNumber,\n    BigNumber: function BigNumber(x) {\n      return _bigNthRoot(x, new _BigNumber(2));\n    },\n    Complex: function Complex(x) {\n      throw new Error(complexErr);\n    },\n    'Complex, number': function ComplexNumber(x, y) {\n      throw new Error(complexErr);\n    },\n    'BigNumber, BigNumber': _bigNthRoot,\n    'Array | Matrix': function ArrayMatrix(x) {\n      return this(x, 2);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      // density must be one (no zeros in matrix)\n      if (y.density() === 1) {\n        // sparse + sparse\n        return algorithm06(x, y, this);\n      } else {\n        // throw exception\n        throw new Error('Root must be non-zero');\n      }\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      // density must be one (no zeros in matrix)\n      if (y.density() === 1) {\n        // dense + sparse\n        return algorithm01(x, y, this, false);\n      } else {\n        // throw exception\n        throw new Error('Root must be non-zero');\n      }\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      // density must be one (no zeros in matrix)\n      if (y.density() === 1) {\n        // sparse - scalar\n        return algorithm11(y, x, this, true);\n      } else {\n        // throw exception\n        throw new Error('Root must be non-zero');\n      }\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y)).valueOf();\n    }\n  });\n  /**\n   * Calculate the nth root of a for BigNumbers, solve x^root == a\n   * https://rosettacode.org/wiki/Nth_root#JavaScript\n   * @param {BigNumber} a\n   * @param {BigNumber} root\n   * @private\n   */\n\n  function _bigNthRoot(a, root) {\n    var precision = _BigNumber.precision;\n    var Big = _BigNumber.clone({\n      precision: precision + 2\n    });\n    var zero = new _BigNumber(0);\n    var one = new Big(1);\n    var inv = root.isNegative();\n    if (inv) {\n      root = root.neg();\n    }\n    if (root.isZero()) {\n      throw new Error('Root must be non-zero');\n    }\n    if (a.isNegative() && !root.abs().mod(2).equals(1)) {\n      throw new Error('Root must be odd when a is negative.');\n    } // edge cases zero and infinity\n\n    if (a.isZero()) {\n      return inv ? new Big(Infinity) : 0;\n    }\n    if (!a.isFinite()) {\n      return inv ? zero : a;\n    }\n    var x = a.abs().pow(one.div(root)); // If a < 0, we require that root is an odd integer,\n    // so (-1) ^ (1/root) = -1\n\n    x = a.isNeg() ? x.neg() : x;\n    return new _BigNumber((inv ? one.div(x) : x).toPrecision(precision));\n  }\n});\nexports.createNthRoot = createNthRoot;\nvar createNthRootNumber = /* #__PURE__ */(0, _factory.factory)(name, ['typed'], function (_ref2) {\n  var typed = _ref2.typed;\n  return typed(name, {\n    number: _index.nthRootNumber,\n    'number, number': _index.nthRootNumber\n  });\n});\nexports.createNthRootNumber = createNthRootNumber;","map":{"version":3,"names":["Object","defineProperty","exports","value","createNthRootNumber","createNthRoot","_factory","require","_algorithm","_algorithm2","_algorithm3","_algorithm4","_algorithm5","_algorithm6","_index","name","dependencies","factory","_ref","typed","matrix","equalScalar","_BigNumber","BigNumber","algorithm01","createAlgorithm01","algorithm02","createAlgorithm02","algorithm06","createAlgorithm06","algorithm11","createAlgorithm11","algorithm13","createAlgorithm13","algorithm14","createAlgorithm14","complexErr","number","x","nthRootNumber","_bigNthRoot","Complex","Error","ComplexNumber","y","ArrayMatrix","SparseMatrixSparseMatrix","density","SparseMatrixDenseMatrix","DenseMatrixSparseMatrix","DenseMatrixDenseMatrix","ArrayArray","valueOf","MatrixArray","SparseMatrixNumberBigNumber","DenseMatrixNumberBigNumber","numberBigNumberSparseMatrix","numberBigNumberDenseMatrix","ArrayNumberBigNumber","numberBigNumberArray","a","root","precision","Big","clone","zero","one","inv","isNegative","neg","isZero","abs","mod","equals","Infinity","isFinite","pow","div","isNeg","toPrecision","_ref2"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/function/arithmetic/nthRoot.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createNthRootNumber = exports.createNthRoot = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm01.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm02.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm06.js\");\n\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm11.js\");\n\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar _algorithm6 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar _index = require(\"../../plain/number/index.js\");\n\nvar name = 'nthRoot';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'BigNumber'];\nvar createNthRoot = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      _BigNumber = _ref.BigNumber;\n  var algorithm01 = (0, _algorithm.createAlgorithm01)({\n    typed: typed\n  });\n  var algorithm02 = (0, _algorithm2.createAlgorithm02)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm06 = (0, _algorithm3.createAlgorithm06)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm11 = (0, _algorithm4.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm13 = (0, _algorithm5.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm6.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Calculate the nth root of a value.\n   * The principal nth root of a positive real number A, is the positive real\n   * solution of the equation\n   *\n   *     x^root = A\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *     math.nthRoot(a)\n   *     math.nthRoot(a, root)\n   *\n   * Examples:\n   *\n   *     math.nthRoot(9, 2)    // returns 3, as 3^2 == 9\n   *     math.sqrt(9)          // returns 3, as 3^2 == 9\n   *     math.nthRoot(64, 3)   // returns 4, as 4^3 == 64\n   *\n   * See also:\n   *\n   *     sqrt, pow\n   *\n   * @param {number | BigNumber | Array | Matrix | Complex} a\n   *              Value for which to calculate the nth root\n   * @param {number | BigNumber} [root=2]    The root.\n   * @return {number | Complex | Array | Matrix} Returns the nth root of `a`\n   */\n\n  var complexErr = '' + 'Complex number not supported in function nthRoot. ' + 'Use nthRoots instead.';\n  return typed(name, {\n    number: function number(x) {\n      return (0, _index.nthRootNumber)(x, 2);\n    },\n    'number, number': _index.nthRootNumber,\n    BigNumber: function BigNumber(x) {\n      return _bigNthRoot(x, new _BigNumber(2));\n    },\n    Complex: function Complex(x) {\n      throw new Error(complexErr);\n    },\n    'Complex, number': function ComplexNumber(x, y) {\n      throw new Error(complexErr);\n    },\n    'BigNumber, BigNumber': _bigNthRoot,\n    'Array | Matrix': function ArrayMatrix(x) {\n      return this(x, 2);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      // density must be one (no zeros in matrix)\n      if (y.density() === 1) {\n        // sparse + sparse\n        return algorithm06(x, y, this);\n      } else {\n        // throw exception\n        throw new Error('Root must be non-zero');\n      }\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      // density must be one (no zeros in matrix)\n      if (y.density() === 1) {\n        // dense + sparse\n        return algorithm01(x, y, this, false);\n      } else {\n        // throw exception\n        throw new Error('Root must be non-zero');\n      }\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      // density must be one (no zeros in matrix)\n      if (y.density() === 1) {\n        // sparse - scalar\n        return algorithm11(y, x, this, true);\n      } else {\n        // throw exception\n        throw new Error('Root must be non-zero');\n      }\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y)).valueOf();\n    }\n  });\n  /**\n   * Calculate the nth root of a for BigNumbers, solve x^root == a\n   * https://rosettacode.org/wiki/Nth_root#JavaScript\n   * @param {BigNumber} a\n   * @param {BigNumber} root\n   * @private\n   */\n\n  function _bigNthRoot(a, root) {\n    var precision = _BigNumber.precision;\n\n    var Big = _BigNumber.clone({\n      precision: precision + 2\n    });\n\n    var zero = new _BigNumber(0);\n    var one = new Big(1);\n    var inv = root.isNegative();\n\n    if (inv) {\n      root = root.neg();\n    }\n\n    if (root.isZero()) {\n      throw new Error('Root must be non-zero');\n    }\n\n    if (a.isNegative() && !root.abs().mod(2).equals(1)) {\n      throw new Error('Root must be odd when a is negative.');\n    } // edge cases zero and infinity\n\n\n    if (a.isZero()) {\n      return inv ? new Big(Infinity) : 0;\n    }\n\n    if (!a.isFinite()) {\n      return inv ? zero : a;\n    }\n\n    var x = a.abs().pow(one.div(root)); // If a < 0, we require that root is an odd integer,\n    // so (-1) ^ (1/root) = -1\n\n    x = a.isNeg() ? x.neg() : x;\n    return new _BigNumber((inv ? one.div(x) : x).toPrecision(precision));\n  }\n});\nexports.createNthRoot = createNthRoot;\nvar createNthRootNumber = /* #__PURE__ */(0, _factory.factory)(name, ['typed'], function (_ref2) {\n  var typed = _ref2.typed;\n  return typed(name, {\n    number: _index.nthRootNumber,\n    'number, number': _index.nthRootNumber\n  });\n});\nexports.createNthRootNumber = createNthRootNumber;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}