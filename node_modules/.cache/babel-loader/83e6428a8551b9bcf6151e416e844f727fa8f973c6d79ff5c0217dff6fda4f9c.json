{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStream = void 0;\nconst alignTableData_1 = require(\"./alignTableData\");\nconst calculateRowHeights_1 = require(\"./calculateRowHeights\");\nconst drawBorder_1 = require(\"./drawBorder\");\nconst drawRow_1 = require(\"./drawRow\");\nconst makeStreamConfig_1 = require(\"./makeStreamConfig\");\nconst mapDataUsingRowHeights_1 = require(\"./mapDataUsingRowHeights\");\nconst padTableData_1 = require(\"./padTableData\");\nconst stringifyTableData_1 = require(\"./stringifyTableData\");\nconst truncateTableData_1 = require(\"./truncateTableData\");\nconst prepareData = (data, config) => {\n  let rows = stringifyTableData_1.stringifyTableData(data);\n  rows = truncateTableData_1.truncateTableData(rows, config);\n  const rowHeights = calculateRowHeights_1.calculateRowHeights(rows, config);\n  rows = mapDataUsingRowHeights_1.mapDataUsingRowHeights(rows, rowHeights, config);\n  rows = alignTableData_1.alignTableData(rows, config);\n  rows = padTableData_1.padTableData(rows, config);\n  return rows;\n};\nconst create = (row, columnWidths, config) => {\n  const rows = prepareData([row], config);\n  const body = rows.map(literalRow => {\n    return drawRow_1.drawRow(literalRow, config);\n  }).join('');\n  let output;\n  output = '';\n  output += drawBorder_1.drawBorderTop(columnWidths, config);\n  output += body;\n  output += drawBorder_1.drawBorderBottom(columnWidths, config);\n  output = output.trimEnd();\n  process.stdout.write(output);\n};\nconst append = (row, columnWidths, config) => {\n  const rows = prepareData([row], config);\n  const body = rows.map(literalRow => {\n    return drawRow_1.drawRow(literalRow, config);\n  }).join('');\n  let output = '';\n  const bottom = drawBorder_1.drawBorderBottom(columnWidths, config);\n  if (bottom !== '\\n') {\n    output = '\\r\\u001B[K';\n  }\n  output += drawBorder_1.drawBorderJoin(columnWidths, config);\n  output += body;\n  output += bottom;\n  output = output.trimEnd();\n  process.stdout.write(output);\n};\nconst createStream = userConfig => {\n  const config = makeStreamConfig_1.makeStreamConfig(userConfig);\n  const columnWidths = Object.values(config.columns).map(column => {\n    return column.width + column.paddingLeft + column.paddingRight;\n  });\n  let empty = true;\n  return {\n    write: row => {\n      if (row.length !== config.columnCount) {\n        throw new Error('Row cell count does not match the config.columnCount.');\n      }\n      if (empty) {\n        empty = false;\n        create(row, columnWidths, config);\n      } else {\n        append(row, columnWidths, config);\n      }\n    }\n  };\n};\nexports.createStream = createStream;","map":{"version":3,"names":["Object","defineProperty","exports","value","createStream","alignTableData_1","require","calculateRowHeights_1","drawBorder_1","drawRow_1","makeStreamConfig_1","mapDataUsingRowHeights_1","padTableData_1","stringifyTableData_1","truncateTableData_1","prepareData","data","config","rows","stringifyTableData","truncateTableData","rowHeights","calculateRowHeights","mapDataUsingRowHeights","alignTableData","padTableData","create","row","columnWidths","body","map","literalRow","drawRow","join","output","drawBorderTop","drawBorderBottom","trimEnd","process","stdout","write","append","bottom","drawBorderJoin","userConfig","makeStreamConfig","values","columns","column","width","paddingLeft","paddingRight","empty","length","columnCount","Error"],"sources":["/Users/omarbailey/node_modules/table/dist/createStream.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createStream = void 0;\nconst alignTableData_1 = require(\"./alignTableData\");\nconst calculateRowHeights_1 = require(\"./calculateRowHeights\");\nconst drawBorder_1 = require(\"./drawBorder\");\nconst drawRow_1 = require(\"./drawRow\");\nconst makeStreamConfig_1 = require(\"./makeStreamConfig\");\nconst mapDataUsingRowHeights_1 = require(\"./mapDataUsingRowHeights\");\nconst padTableData_1 = require(\"./padTableData\");\nconst stringifyTableData_1 = require(\"./stringifyTableData\");\nconst truncateTableData_1 = require(\"./truncateTableData\");\nconst prepareData = (data, config) => {\n    let rows = stringifyTableData_1.stringifyTableData(data);\n    rows = truncateTableData_1.truncateTableData(rows, config);\n    const rowHeights = calculateRowHeights_1.calculateRowHeights(rows, config);\n    rows = mapDataUsingRowHeights_1.mapDataUsingRowHeights(rows, rowHeights, config);\n    rows = alignTableData_1.alignTableData(rows, config);\n    rows = padTableData_1.padTableData(rows, config);\n    return rows;\n};\nconst create = (row, columnWidths, config) => {\n    const rows = prepareData([row], config);\n    const body = rows.map((literalRow) => {\n        return drawRow_1.drawRow(literalRow, config);\n    }).join('');\n    let output;\n    output = '';\n    output += drawBorder_1.drawBorderTop(columnWidths, config);\n    output += body;\n    output += drawBorder_1.drawBorderBottom(columnWidths, config);\n    output = output.trimEnd();\n    process.stdout.write(output);\n};\nconst append = (row, columnWidths, config) => {\n    const rows = prepareData([row], config);\n    const body = rows.map((literalRow) => {\n        return drawRow_1.drawRow(literalRow, config);\n    }).join('');\n    let output = '';\n    const bottom = drawBorder_1.drawBorderBottom(columnWidths, config);\n    if (bottom !== '\\n') {\n        output = '\\r\\u001B[K';\n    }\n    output += drawBorder_1.drawBorderJoin(columnWidths, config);\n    output += body;\n    output += bottom;\n    output = output.trimEnd();\n    process.stdout.write(output);\n};\nconst createStream = (userConfig) => {\n    const config = makeStreamConfig_1.makeStreamConfig(userConfig);\n    const columnWidths = Object.values(config.columns).map((column) => {\n        return column.width + column.paddingLeft + column.paddingRight;\n    });\n    let empty = true;\n    return {\n        write: (row) => {\n            if (row.length !== config.columnCount) {\n                throw new Error('Row cell count does not match the config.columnCount.');\n            }\n            if (empty) {\n                empty = false;\n                create(row, columnWidths, config);\n            }\n            else {\n                append(row, columnWidths, config);\n            }\n        },\n    };\n};\nexports.createStream = createStream;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}