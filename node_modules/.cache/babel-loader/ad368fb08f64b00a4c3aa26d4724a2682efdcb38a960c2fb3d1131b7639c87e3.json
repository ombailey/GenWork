{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.simplifyDocs = void 0;\nvar simplifyDocs = {\n  name: 'simplify',\n  category: 'Algebra',\n  syntax: ['simplify(expr)', 'simplify(expr, rules)'],\n  description: 'Simplify an expression tree.',\n  examples: ['simplify(\"3 + 2 / 4\")', 'simplify(\"2x + x\")', 'f = parse(\"x * (x + 2 + x)\")', 'simplified = simplify(f)', 'simplified.evaluate({x: 2})'],\n  seealso: ['derivative', 'parse', 'evaluate']\n};\nexports.simplifyDocs = simplifyDocs;","map":{"version":3,"names":["Object","defineProperty","exports","value","simplifyDocs","name","category","syntax","description","examples","seealso"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/algebra/simplify.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.simplifyDocs = void 0;\nvar simplifyDocs = {\n  name: 'simplify',\n  category: 'Algebra',\n  syntax: ['simplify(expr)', 'simplify(expr, rules)'],\n  description: 'Simplify an expression tree.',\n  examples: ['simplify(\"3 + 2 / 4\")', 'simplify(\"2x + x\")', 'f = parse(\"x * (x + 2 + x)\")', 'simplified = simplify(f)', 'simplified.evaluate({x: 2})'],\n  seealso: ['derivative', 'parse', 'evaluate']\n};\nexports.simplifyDocs = simplifyDocs;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,IAAIA,YAAY,GAAG;EACjBC,IAAI,EAAE,UAAU;EAChBC,QAAQ,EAAE,SAAS;EACnBC,MAAM,EAAE,CAAC,gBAAgB,EAAE,uBAAuB,CAAC;EACnDC,WAAW,EAAE,8BAA8B;EAC3CC,QAAQ,EAAE,CAAC,uBAAuB,EAAE,oBAAoB,EAAE,8BAA8B,EAAE,0BAA0B,EAAE,6BAA6B,CAAC;EACpJC,OAAO,EAAE,CAAC,YAAY,EAAE,OAAO,EAAE,UAAU;AAC7C,CAAC;AACDR,OAAO,CAACE,YAAY,GAAGA,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}