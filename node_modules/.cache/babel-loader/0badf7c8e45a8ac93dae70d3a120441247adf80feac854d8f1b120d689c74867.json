{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.drawTable = void 0;\nconst string_width_1 = __importDefault(require(\"string-width\"));\nconst drawBorder_1 = require(\"./drawBorder\");\nconst drawContent_1 = require(\"./drawContent\");\nconst drawHeader_1 = require(\"./drawHeader\");\nconst drawRow_1 = require(\"./drawRow\");\nconst utils_1 = require(\"./utils\");\nconst drawTable = (rows, columnWidths, rowHeights, config) => {\n  const {\n    drawHorizontalLine,\n    singleLine\n  } = config;\n  const contents = utils_1.groupBySizes(rows, rowHeights).map(group => {\n    return group.map(row => {\n      return drawRow_1.drawRow(row, config);\n    }).join('');\n  });\n  if (config.header) {\n    // assume that topLeft/right border have width = 1\n    const headerWidth = string_width_1.default(drawRow_1.drawRow(rows[0], config)) - 2 - config.header.paddingLeft - config.header.paddingRight;\n    const header = drawHeader_1.drawHeader(headerWidth, config);\n    contents.unshift(header);\n  }\n  return drawContent_1.drawContent(contents, {\n    drawSeparator: (index, size) => {\n      // Top/bottom border\n      if (index === 0 || index === size) {\n        return drawHorizontalLine(index, size);\n      }\n      return !singleLine && drawHorizontalLine(index, size);\n    },\n    separatorGetter: drawBorder_1.createTableBorderGetter(columnWidths, config)\n  });\n};\nexports.drawTable = drawTable;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","drawTable","string_width_1","require","drawBorder_1","drawContent_1","drawHeader_1","drawRow_1","utils_1","rows","columnWidths","rowHeights","config","drawHorizontalLine","singleLine","contents","groupBySizes","map","group","row","drawRow","join","header","headerWidth","default","paddingLeft","paddingRight","drawHeader","unshift","drawContent","drawSeparator","index","size","separatorGetter","createTableBorderGetter"],"sources":["/Users/omarbailey/node_modules/table/dist/drawTable.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.drawTable = void 0;\nconst string_width_1 = __importDefault(require(\"string-width\"));\nconst drawBorder_1 = require(\"./drawBorder\");\nconst drawContent_1 = require(\"./drawContent\");\nconst drawHeader_1 = require(\"./drawHeader\");\nconst drawRow_1 = require(\"./drawRow\");\nconst utils_1 = require(\"./utils\");\nconst drawTable = (rows, columnWidths, rowHeights, config) => {\n    const { drawHorizontalLine, singleLine, } = config;\n    const contents = utils_1.groupBySizes(rows, rowHeights).map((group) => {\n        return group.map((row) => {\n            return drawRow_1.drawRow(row, config);\n        }).join('');\n    });\n    if (config.header) {\n        // assume that topLeft/right border have width = 1\n        const headerWidth = string_width_1.default(drawRow_1.drawRow(rows[0], config)) - 2 -\n            config.header.paddingLeft - config.header.paddingRight;\n        const header = drawHeader_1.drawHeader(headerWidth, config);\n        contents.unshift(header);\n    }\n    return drawContent_1.drawContent(contents, {\n        drawSeparator: (index, size) => {\n            // Top/bottom border\n            if (index === 0 || index === size) {\n                return drawHorizontalLine(index, size);\n            }\n            return !singleLine && drawHorizontalLine(index, size);\n        },\n        separatorGetter: drawBorder_1.createTableBorderGetter(columnWidths, config),\n    });\n};\nexports.drawTable = drawTable;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,SAAS,GAAG,KAAK,CAAC;AAC1B,MAAMC,cAAc,GAAGR,eAAe,CAACS,OAAO,CAAC,cAAc,CAAC,CAAC;AAC/D,MAAMC,YAAY,GAAGD,OAAO,CAAC,cAAc,CAAC;AAC5C,MAAME,aAAa,GAAGF,OAAO,CAAC,eAAe,CAAC;AAC9C,MAAMG,YAAY,GAAGH,OAAO,CAAC,cAAc,CAAC;AAC5C,MAAMI,SAAS,GAAGJ,OAAO,CAAC,WAAW,CAAC;AACtC,MAAMK,OAAO,GAAGL,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMF,SAAS,GAAG,CAACQ,IAAI,EAAEC,YAAY,EAAEC,UAAU,EAAEC,MAAM,KAAK;EAC1D,MAAM;IAAEC,kBAAkB;IAAEC;EAAY,CAAC,GAAGF,MAAM;EAClD,MAAMG,QAAQ,GAAGP,OAAO,CAACQ,YAAY,CAACP,IAAI,EAAEE,UAAU,CAAC,CAACM,GAAG,CAAEC,KAAK,IAAK;IACnE,OAAOA,KAAK,CAACD,GAAG,CAAEE,GAAG,IAAK;MACtB,OAAOZ,SAAS,CAACa,OAAO,CAACD,GAAG,EAAEP,MAAM,CAAC;IACzC,CAAC,CAAC,CAACS,IAAI,CAAC,EAAE,CAAC;EACf,CAAC,CAAC;EACF,IAAIT,MAAM,CAACU,MAAM,EAAE;IACf;IACA,MAAMC,WAAW,GAAGrB,cAAc,CAACsB,OAAO,CAACjB,SAAS,CAACa,OAAO,CAACX,IAAI,CAAC,CAAC,CAAC,EAAEG,MAAM,CAAC,CAAC,GAAG,CAAC,GAC9EA,MAAM,CAACU,MAAM,CAACG,WAAW,GAAGb,MAAM,CAACU,MAAM,CAACI,YAAY;IAC1D,MAAMJ,MAAM,GAAGhB,YAAY,CAACqB,UAAU,CAACJ,WAAW,EAAEX,MAAM,CAAC;IAC3DG,QAAQ,CAACa,OAAO,CAACN,MAAM,CAAC;EAC5B;EACA,OAAOjB,aAAa,CAACwB,WAAW,CAACd,QAAQ,EAAE;IACvCe,aAAa,EAAE,CAACC,KAAK,EAAEC,IAAI,KAAK;MAC5B;MACA,IAAID,KAAK,KAAK,CAAC,IAAIA,KAAK,KAAKC,IAAI,EAAE;QAC/B,OAAOnB,kBAAkB,CAACkB,KAAK,EAAEC,IAAI,CAAC;MAC1C;MACA,OAAO,CAAClB,UAAU,IAAID,kBAAkB,CAACkB,KAAK,EAAEC,IAAI,CAAC;IACzD,CAAC;IACDC,eAAe,EAAE7B,YAAY,CAAC8B,uBAAuB,CAACxB,YAAY,EAAEE,MAAM;EAC9E,CAAC,CAAC;AACN,CAAC;AACDb,OAAO,CAACE,SAAS,GAAGA,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}