{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n*  @license\n* Copyright 2022 JsData. All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n* ==========================================================================\n*/\nvar utils_1 = __importDefault(require(\"../shared/utils\"));\nvar utils = new utils_1.default();\nvar DateRange = /** @class */function () {\n  function DateRange(_a) {\n    var start = _a.start,\n      end = _a.end,\n      offset = _a.offset,\n      freq = _a.freq,\n      period = _a.period;\n    this.start = start;\n    this.end = end;\n    this.offset = offset;\n    this.freq = freq ? freq : \"D\";\n    this.period = period;\n    this.freqList = [\"M\", \"D\", \"s\", \"H\", \"m\", \"Y\"];\n    if (this.freq.length == 1) {\n      if (!this.freqList.includes(this.freq)) {\n        throw new Error(\"invalid freq \" + this.freq);\n      }\n    } else {\n      this.offset = parseInt(this.freq.slice(0, -1));\n      if (!Number.isFinite(this.offset)) {\n        throw new Error(\"invalid freq offset \" + this.freq.slice(0, -1));\n      }\n      this.freq = this.freq.slice(-1);\n      if (!this.freqList.includes(this.freq)) {\n        throw new Error(\"invalid freq \" + this.freq);\n      }\n    }\n  }\n  DateRange.prototype.range = function () {\n    var _this = this;\n    var start = this.start;\n    var period = this.period;\n    var end = this.end;\n    var offset = this.offset;\n    var startDate;\n    var endDate;\n    var startRange;\n    var endRange;\n    if (start && end) {\n      startDate = new Date(start);\n      startRange = this.freqType(startDate, this.freq);\n      endDate = new Date(end);\n      endRange = this.freqType(endDate, this.freq);\n      var startYear = startDate.getFullYear();\n      var endYear = endDate.getFullYear();\n      if (startYear <= endYear && startDate.getMonth() !== endDate.getMonth()) {\n        if (this.freq == \"M\") {\n          endRange = this.monthEnd(startDate, endDate);\n        } else if (this.freq === \"D\") {\n          endRange = this.dayEnd(startDate, endDate) - startRange;\n        }\n      }\n      var rangeArray_1 = utils.range(startRange, endRange);\n      if (offset) {\n        rangeArray_1 = this.offsetCount(rangeArray_1, offset);\n      }\n      var dateRange_1 = rangeArray_1.map(function (x) {\n        return _this.setDateProps(startDate, _this.freq, x);\n      });\n      dateRange_1[dateRange_1.length - 1] = endDate;\n      var dateString_1 = this.toLocalString(dateRange_1);\n      return dateString_1;\n    } else if (start && !end) {\n      startDate = new Date(start);\n      startRange = this.freqType(startDate, this.freq);\n      period = period;\n      endRange = offset ? period * offset - 1 : period - 1;\n      if (startRange > endRange) {\n        endRange = endRange + startRange;\n      }\n      var rangeArray_2 = utils.range(startRange, endRange);\n      if (offset) {\n        rangeArray_2 = this.offsetCount(rangeArray_2, offset);\n      }\n      var dateRange_2 = rangeArray_2.map(function (x) {\n        return _this.setDateProps(startDate, _this.freq, x);\n      });\n      var dateString_2 = this.toLocalString(dateRange_2);\n      return dateString_2;\n    }\n    // if end and not start given\n    endDate = new Date(end);\n    endRange = this.freqType(endDate, this.freq);\n    period = period;\n    startRange = endRange - period + 1;\n    var rangeArray = utils.range(startRange, endRange);\n    if (offset) {\n      rangeArray = this.offsetCount(rangeArray, offset);\n    }\n    var dateRange = rangeArray.map(function (x) {\n      return _this.setDateProps(endDate, _this.freq, x);\n    });\n    var dateString = this.toLocalString(dateRange);\n    return dateString;\n  };\n  /**\n   * @param date Date\n   * @param ftype string:  frequency type, month, Year, day etc\n   * @param number\n   */\n  DateRange.prototype.freqType = function (date, ftype) {\n    var rslt = 0;\n    switch (ftype) {\n      case \"M\":\n        rslt = date.getMonth();\n        break;\n      case \"Y\":\n        rslt = date.getFullYear();\n        break;\n      case \"s\":\n        rslt = date.getSeconds();\n        break;\n      case \"D\":\n        rslt = date.getDate();\n        break;\n      case \"H\":\n        rslt = date.getHours();\n        break;\n      case \"m\":\n        rslt = date.getMinutes();\n        break;\n    }\n    return rslt;\n  };\n  DateRange.prototype.offsetCount = function (dArray, offset) {\n    var rArray = [];\n    for (var i = 0; i < dArray.length; i += offset) {\n      rArray.push(dArray[i]);\n    }\n    return rArray;\n  };\n  DateRange.prototype.setDateProps = function (date, ftype, val) {\n    var newDate = new Date(date.valueOf());\n    switch (ftype) {\n      case \"M\":\n        if (Array.isArray(val)) {\n          newDate.setFullYear(newDate.getFullYear() + val[0]);\n          newDate.setMonth(val[1]);\n        } else {\n          newDate.setMonth(val);\n        }\n        break;\n      case \"Y\":\n        newDate.setFullYear(val);\n        break;\n      case \"s\":\n        newDate.setSeconds(val);\n        break;\n      case \"D\":\n        newDate.setDate(val);\n        break;\n      case \"H\":\n        newDate.setHours(val);\n        break;\n      case \"m\":\n        newDate.setMinutes(val);\n        break;\n    }\n    return newDate;\n  };\n  DateRange.prototype.toLocalString = function (dArray) {\n    var r_array = dArray.map(function (x) {\n      return x.toLocaleString();\n    });\n    return r_array;\n  };\n  DateRange.prototype.monthEnd = function (startDate, endDate) {\n    var endMonth = endDate.getMonth();\n    var diffYear = endDate.getFullYear() - startDate.getFullYear();\n    var endRange = 12 * diffYear + endMonth;\n    return endRange;\n  };\n  DateRange.prototype.monthRange = function (range) {\n    var minus;\n    var yVal = 0;\n    var dateRange = range.map(function (x) {\n      if (x > 11) {\n        if (x % 12 == 0) {\n          minus = x;\n          yVal = x / 12;\n          return [yVal, x - minus];\n        } else {\n          return [yVal, x - minus];\n        }\n      }\n      return [yVal, x];\n    });\n    return dateRange;\n  };\n  DateRange.prototype.dayEnd = function (startDate, endDate) {\n    var monthEnd = this.monthEnd(startDate, endDate);\n    var range = utils.range(startDate.getMonth(), monthEnd);\n    var mRange = this.monthRange(range);\n    var sum = 0;\n    for (var i = 0; i < mRange.length; i++) {\n      var val = mRange[i];\n      var dDate = void 0;\n      if (i === mRange.length - 1) {\n        dDate = new Date(startDate.getUTCFullYear() + val[0], val[1], endDate.getDate()).getDate();\n      } else {\n        dDate = new Date(startDate.getUTCFullYear() + val[0], val[1], 0).getDate();\n      }\n      sum += dDate;\n    }\n    return sum;\n  };\n  return DateRange;\n}();\n/**\n * Generate sequence of Dates\n * @param start : signify the date to start with\n * @param end : signify the date to end with\n * @param period :  the total number of date to generate\n * @param offset : set the date range offset\n * @param freq: set the date range frequency and offset\n * @return string[]\n */\nfunction dateRange(param) {\n  var dateRange = new DateRange(param);\n  return dateRange.range();\n}\nexports.default = dateRange;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","utils_1","require","utils","default","DateRange","_a","start","end","offset","freq","period","freqList","length","includes","Error","parseInt","slice","Number","isFinite","prototype","range","_this","startDate","endDate","startRange","endRange","Date","freqType","startYear","getFullYear","endYear","getMonth","monthEnd","dayEnd","rangeArray_1","offsetCount","dateRange_1","map","x","setDateProps","dateString_1","toLocalString","rangeArray_2","dateRange_2","dateString_2","rangeArray","dateRange","dateString","date","ftype","rslt","getSeconds","getDate","getHours","getMinutes","dArray","rArray","i","push","val","newDate","valueOf","Array","isArray","setFullYear","setMonth","setSeconds","setDate","setHours","setMinutes","r_array","toLocaleString","endMonth","diffYear","monthRange","minus","yVal","mRange","sum","dDate","getUTCFullYear","param"],"sources":["/Users/omarbailey/node_modules/danfojs/dist/danfojs-base/core/daterange.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n*  @license\n* Copyright 2022 JsData. All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n* ==========================================================================\n*/\nvar utils_1 = __importDefault(require(\"../shared/utils\"));\nvar utils = new utils_1.default();\nvar DateRange = /** @class */ (function () {\n    function DateRange(_a) {\n        var start = _a.start, end = _a.end, offset = _a.offset, freq = _a.freq, period = _a.period;\n        this.start = start;\n        this.end = end;\n        this.offset = offset;\n        this.freq = freq ? freq : \"D\";\n        this.period = period;\n        this.freqList = [\"M\", \"D\", \"s\", \"H\", \"m\", \"Y\"];\n        if (this.freq.length == 1) {\n            if (!this.freqList.includes(this.freq)) {\n                throw new Error(\"invalid freq \" + this.freq);\n            }\n        }\n        else {\n            this.offset = parseInt(this.freq.slice(0, -1));\n            if (!Number.isFinite(this.offset)) {\n                throw new Error(\"invalid freq offset \" + this.freq.slice(0, -1));\n            }\n            this.freq = this.freq.slice(-1);\n            if (!this.freqList.includes(this.freq)) {\n                throw new Error(\"invalid freq \" + this.freq);\n            }\n        }\n    }\n    DateRange.prototype.range = function () {\n        var _this = this;\n        var start = this.start;\n        var period = this.period;\n        var end = this.end;\n        var offset = this.offset;\n        var startDate;\n        var endDate;\n        var startRange;\n        var endRange;\n        if (start && end) {\n            startDate = new Date(start);\n            startRange = this.freqType(startDate, this.freq);\n            endDate = new Date(end);\n            endRange = this.freqType(endDate, this.freq);\n            var startYear = startDate.getFullYear();\n            var endYear = endDate.getFullYear();\n            if ((startYear <= endYear) && (startDate.getMonth() !== endDate.getMonth())) {\n                if (this.freq == \"M\") {\n                    endRange = this.monthEnd(startDate, endDate);\n                }\n                else if (this.freq === \"D\") {\n                    endRange = this.dayEnd(startDate, endDate) - startRange;\n                }\n            }\n            var rangeArray_1 = utils.range(startRange, endRange);\n            if (offset) {\n                rangeArray_1 = this.offsetCount(rangeArray_1, offset);\n            }\n            var dateRange_1 = rangeArray_1.map(function (x) {\n                return _this.setDateProps(startDate, _this.freq, x);\n            });\n            dateRange_1[dateRange_1.length - 1] = endDate;\n            var dateString_1 = this.toLocalString(dateRange_1);\n            return dateString_1;\n        }\n        else if (start && !(end)) {\n            startDate = new Date(start);\n            startRange = this.freqType(startDate, this.freq);\n            period = period;\n            endRange = offset ? ((period * offset) - 1) : period - 1;\n            if (startRange > endRange) {\n                endRange = endRange + startRange;\n            }\n            var rangeArray_2 = utils.range(startRange, endRange);\n            if (offset) {\n                rangeArray_2 = this.offsetCount(rangeArray_2, offset);\n            }\n            var dateRange_2 = rangeArray_2.map(function (x) {\n                return _this.setDateProps(startDate, _this.freq, x);\n            });\n            var dateString_2 = this.toLocalString(dateRange_2);\n            return dateString_2;\n        }\n        // if end and not start given\n        endDate = new Date(end);\n        endRange = this.freqType(endDate, this.freq);\n        period = period;\n        startRange = (endRange - period) + 1;\n        var rangeArray = utils.range(startRange, endRange);\n        if (offset) {\n            rangeArray = this.offsetCount(rangeArray, offset);\n        }\n        var dateRange = rangeArray.map(function (x) {\n            return _this.setDateProps(endDate, _this.freq, x);\n        });\n        var dateString = this.toLocalString(dateRange);\n        return dateString;\n    };\n    /**\n     * @param date Date\n     * @param ftype string:  frequency type, month, Year, day etc\n     * @param number\n     */\n    DateRange.prototype.freqType = function (date, ftype) {\n        var rslt = 0;\n        switch (ftype) {\n            case \"M\":\n                rslt = date.getMonth();\n                break;\n            case \"Y\":\n                rslt = date.getFullYear();\n                break;\n            case \"s\":\n                rslt = date.getSeconds();\n                break;\n            case \"D\":\n                rslt = date.getDate();\n                break;\n            case \"H\":\n                rslt = date.getHours();\n                break;\n            case \"m\":\n                rslt = date.getMinutes();\n                break;\n        }\n        return rslt;\n    };\n    DateRange.prototype.offsetCount = function (dArray, offset) {\n        var rArray = [];\n        for (var i = 0; i < dArray.length; i += offset) {\n            rArray.push(dArray[i]);\n        }\n        return rArray;\n    };\n    DateRange.prototype.setDateProps = function (date, ftype, val) {\n        var newDate = new Date(date.valueOf());\n        switch (ftype) {\n            case \"M\":\n                if (Array.isArray(val)) {\n                    newDate.setFullYear(newDate.getFullYear() + val[0]);\n                    newDate.setMonth(val[1]);\n                }\n                else {\n                    newDate.setMonth(val);\n                }\n                break;\n            case \"Y\":\n                newDate.setFullYear(val);\n                break;\n            case \"s\":\n                newDate.setSeconds(val);\n                break;\n            case \"D\":\n                newDate.setDate(val);\n                break;\n            case \"H\":\n                newDate.setHours(val);\n                break;\n            case \"m\":\n                newDate.setMinutes(val);\n                break;\n        }\n        return newDate;\n    };\n    DateRange.prototype.toLocalString = function (dArray) {\n        var r_array = dArray.map(function (x) {\n            return x.toLocaleString();\n        });\n        return r_array;\n    };\n    DateRange.prototype.monthEnd = function (startDate, endDate) {\n        var endMonth = endDate.getMonth();\n        var diffYear = endDate.getFullYear() - startDate.getFullYear();\n        var endRange = (12 * diffYear) + endMonth;\n        return endRange;\n    };\n    DateRange.prototype.monthRange = function (range) {\n        var minus;\n        var yVal = 0;\n        var dateRange = range.map(function (x) {\n            if (x > 11) {\n                if (x % 12 == 0) {\n                    minus = x;\n                    yVal = x / 12;\n                    return [yVal, (x - minus)];\n                }\n                else {\n                    return [yVal, (x - minus)];\n                }\n            }\n            return [yVal, x];\n        });\n        return dateRange;\n    };\n    DateRange.prototype.dayEnd = function (startDate, endDate) {\n        var monthEnd = this.monthEnd(startDate, endDate);\n        var range = utils.range(startDate.getMonth(), monthEnd);\n        var mRange = this.monthRange(range);\n        var sum = 0;\n        for (var i = 0; i < mRange.length; i++) {\n            var val = mRange[i];\n            var dDate = void 0;\n            if (i === mRange.length - 1) {\n                dDate = new Date(startDate.getUTCFullYear() + val[0], val[1], endDate.getDate()).getDate();\n            }\n            else {\n                dDate = new Date(startDate.getUTCFullYear() + val[0], val[1], 0).getDate();\n            }\n            sum += dDate;\n        }\n        return sum;\n    };\n    return DateRange;\n}());\n/**\n * Generate sequence of Dates\n * @param start : signify the date to start with\n * @param end : signify the date to end with\n * @param period :  the total number of date to generate\n * @param offset : set the date range offset\n * @param freq: set the date range frequency and offset\n * @return string[]\n */\nfunction dateRange(param) {\n    var dateRange = new DateRange(param);\n    return dateRange.range();\n}\nexports.default = dateRange;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}