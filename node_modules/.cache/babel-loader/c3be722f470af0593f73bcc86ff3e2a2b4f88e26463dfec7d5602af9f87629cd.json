{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFloor = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _decimal = _interopRequireDefault(require(\"decimal.js\"));\nvar _factory = require(\"../../utils/factory.js\");\nvar _collection = require(\"../../utils/collection.js\");\nvar _number = require(\"../../utils/number.js\");\nvar _nearlyEqual = require(\"../../utils/bignumber/nearlyEqual.js\");\nvar _algorithm = require(\"../../type/matrix/utils/algorithm11.js\");\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm14.js\");\nvar name = 'floor';\nvar dependencies = ['typed', 'config', 'round', 'matrix', 'equalScalar'];\nvar createFloor = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    config = _ref.config,\n    round = _ref.round,\n    matrix = _ref.matrix,\n    equalScalar = _ref.equalScalar;\n  var algorithm11 = (0, _algorithm.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm14 = (0, _algorithm2.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Round a value towards minus infinity.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.floor(x)\n   *    math.floor(x, n)\n   *\n   * Examples:\n   *\n   *    math.floor(3.2)              // returns number 3\n   *    math.floor(3.8)              // returns number 3\n   *    math.floor(-4.2)             // returns number -5\n   *    math.floor(-4.7)             // returns number -5\n   *\n   *    math.floor(3.212, 2)          // returns number 3.21\n   *    math.floor(3.288, 2)          // returns number 3.28\n   *    math.floor(-4.212, 2)         // returns number -4.22\n   *    math.floor(-4.782, 2)         // returns number -4.79\n   *\n   *    const c = math.complex(3.24, -2.71)\n   *    math.floor(c)                 // returns Complex 3 - 3i\n   *    math.floor(c, 1)              // returns Complex 3.2 - 2.8i\n   *\n   *    math.floor([3.2, 3.8, -4.7])       // returns Array [3, 3, -5]\n   *    math.floor([3.21, 3.82, -4.71], 1)  // returns Array [3.2, 3.8, -4.8]\n   *\n   * See also:\n   *\n   *    ceil, fix, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                            Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value\n   */\n\n  return typed('floor', {\n    number: function number(x) {\n      if ((0, _number.nearlyEqual)(x, round(x), config.epsilon)) {\n        return round(x);\n      } else {\n        return Math.floor(x);\n      }\n    },\n    'number, number': function numberNumber(x, n) {\n      if ((0, _number.nearlyEqual)(x, round(x, n), config.epsilon)) {\n        return round(x, n);\n      } else {\n        var _$split = \"\".concat(x, \"e\").split('e'),\n          _$split2 = (0, _slicedToArray2[\"default\"])(_$split, 2),\n          number = _$split2[0],\n          exponent = _$split2[1];\n        var result = Math.floor(Number(\"\".concat(number, \"e\").concat(Number(exponent) + n)));\n        var _$split3 = \"\".concat(result, \"e\").split('e');\n        var _$split4 = (0, _slicedToArray2[\"default\"])(_$split3, 2);\n        number = _$split4[0];\n        exponent = _$split4[1];\n        return Number(\"\".concat(number, \"e\").concat(Number(exponent) - n));\n      }\n    },\n    Complex: function Complex(x) {\n      return x.floor();\n    },\n    'Complex, number': function ComplexNumber(x, n) {\n      return x.floor(n);\n    },\n    BigNumber: function BigNumber(x) {\n      if ((0, _nearlyEqual.nearlyEqual)(x, round(x), config.epsilon)) {\n        return round(x);\n      } else {\n        return x.floor();\n      }\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, n) {\n      if ((0, _nearlyEqual.nearlyEqual)(x, round(x, n), config.epsilon)) {\n        return round(x, n);\n      } else {\n        return x.toDecimalPlaces(n.toNumber(), _decimal[\"default\"].ROUND_FLOOR);\n      }\n    },\n    Fraction: function Fraction(x) {\n      return x.floor();\n    },\n    'Fraction, number': function FractionNumber(x, n) {\n      return x.floor(n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since floor(0) = 0\n      return (0, _collection.deepMap)(x, this, true);\n    },\n    'Array | Matrix, number': function ArrayMatrixNumber(x, n) {\n      var _this = this;\n\n      // deep map collection, skip zeros since ceil(0) = 0\n      return (0, _collection.deepMap)(x, function (i) {\n        return _this(i, n);\n      }, true);\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nexports.createFloor = createFloor;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","createFloor","_slicedToArray2","_decimal","_factory","_collection","_number","_nearlyEqual","_algorithm","_algorithm2","name","dependencies","factory","_ref","typed","config","round","matrix","equalScalar","algorithm11","createAlgorithm11","algorithm14","createAlgorithm14","number","x","nearlyEqual","epsilon","Math","floor","numberNumber","n","_$split","concat","split","_$split2","exponent","result","Number","_$split3","_$split4","Complex","ComplexNumber","BigNumber","BigNumberBigNumber","toDecimalPlaces","toNumber","ROUND_FLOOR","Fraction","FractionNumber","ArrayMatrix","deepMap","ArrayMatrixNumber","_this","i","SparseMatrixNumberBigNumber","y","DenseMatrixNumberBigNumber","numberComplexBigNumberArray","valueOf"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/function/arithmetic/floor.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFloor = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _decimal = _interopRequireDefault(require(\"decimal.js\"));\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _collection = require(\"../../utils/collection.js\");\n\nvar _number = require(\"../../utils/number.js\");\n\nvar _nearlyEqual = require(\"../../utils/bignumber/nearlyEqual.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm11.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar name = 'floor';\nvar dependencies = ['typed', 'config', 'round', 'matrix', 'equalScalar'];\nvar createFloor = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      config = _ref.config,\n      round = _ref.round,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar;\n  var algorithm11 = (0, _algorithm.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm14 = (0, _algorithm2.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Round a value towards minus infinity.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.floor(x)\n   *    math.floor(x, n)\n   *\n   * Examples:\n   *\n   *    math.floor(3.2)              // returns number 3\n   *    math.floor(3.8)              // returns number 3\n   *    math.floor(-4.2)             // returns number -5\n   *    math.floor(-4.7)             // returns number -5\n   *\n   *    math.floor(3.212, 2)          // returns number 3.21\n   *    math.floor(3.288, 2)          // returns number 3.28\n   *    math.floor(-4.212, 2)         // returns number -4.22\n   *    math.floor(-4.782, 2)         // returns number -4.79\n   *\n   *    const c = math.complex(3.24, -2.71)\n   *    math.floor(c)                 // returns Complex 3 - 3i\n   *    math.floor(c, 1)              // returns Complex 3.2 - 2.8i\n   *\n   *    math.floor([3.2, 3.8, -4.7])       // returns Array [3, 3, -5]\n   *    math.floor([3.21, 3.82, -4.71], 1)  // returns Array [3.2, 3.8, -4.8]\n   *\n   * See also:\n   *\n   *    ceil, fix, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                            Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value\n   */\n\n  return typed('floor', {\n    number: function number(x) {\n      if ((0, _number.nearlyEqual)(x, round(x), config.epsilon)) {\n        return round(x);\n      } else {\n        return Math.floor(x);\n      }\n    },\n    'number, number': function numberNumber(x, n) {\n      if ((0, _number.nearlyEqual)(x, round(x, n), config.epsilon)) {\n        return round(x, n);\n      } else {\n        var _$split = \"\".concat(x, \"e\").split('e'),\n            _$split2 = (0, _slicedToArray2[\"default\"])(_$split, 2),\n            number = _$split2[0],\n            exponent = _$split2[1];\n\n        var result = Math.floor(Number(\"\".concat(number, \"e\").concat(Number(exponent) + n)));\n\n        var _$split3 = \"\".concat(result, \"e\").split('e');\n\n        var _$split4 = (0, _slicedToArray2[\"default\"])(_$split3, 2);\n\n        number = _$split4[0];\n        exponent = _$split4[1];\n        return Number(\"\".concat(number, \"e\").concat(Number(exponent) - n));\n      }\n    },\n    Complex: function Complex(x) {\n      return x.floor();\n    },\n    'Complex, number': function ComplexNumber(x, n) {\n      return x.floor(n);\n    },\n    BigNumber: function BigNumber(x) {\n      if ((0, _nearlyEqual.nearlyEqual)(x, round(x), config.epsilon)) {\n        return round(x);\n      } else {\n        return x.floor();\n      }\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, n) {\n      if ((0, _nearlyEqual.nearlyEqual)(x, round(x, n), config.epsilon)) {\n        return round(x, n);\n      } else {\n        return x.toDecimalPlaces(n.toNumber(), _decimal[\"default\"].ROUND_FLOOR);\n      }\n    },\n    Fraction: function Fraction(x) {\n      return x.floor();\n    },\n    'Fraction, number': function FractionNumber(x, n) {\n      return x.floor(n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since floor(0) = 0\n      return (0, _collection.deepMap)(x, this, true);\n    },\n    'Array | Matrix, number': function ArrayMatrixNumber(x, n) {\n      var _this = this;\n\n      // deep map collection, skip zeros since ceil(0) = 0\n      return (0, _collection.deepMap)(x, function (i) {\n        return _this(i, n);\n      }, true);\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nexports.createFloor = createFloor;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}