{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createLsolveAll = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _factory = require(\"../../../utils/factory.js\");\nvar _solveValidation = require(\"./utils/solveValidation.js\");\nvar name = 'lsolveAll';\nvar dependencies = ['typed', 'matrix', 'divideScalar', 'multiplyScalar', 'subtract', 'equalScalar', 'DenseMatrix'];\nvar createLsolveAll = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    matrix = _ref.matrix,\n    divideScalar = _ref.divideScalar,\n    multiplyScalar = _ref.multiplyScalar,\n    subtract = _ref.subtract,\n    equalScalar = _ref.equalScalar,\n    DenseMatrix = _ref.DenseMatrix;\n  var solveValidation = (0, _solveValidation.createSolveValidation)({\n    DenseMatrix: DenseMatrix\n  });\n  /**\n   * Finds all solutions of a linear equation system by forwards substitution. Matrix must be a lower triangular matrix.\n   *\n   * `L * x = b`\n   *\n   * Syntax:\n   *\n   *    math.lsolveAll(L, b)\n   *\n   * Examples:\n   *\n   *    const a = [[-2, 3], [2, 1]]\n   *    const b = [11, 9]\n   *    const x = lsolveAll(a, b)  // [ [[-5.5], [20]] ]\n   *\n   * See also:\n   *\n   *    lsolve, lup, slu, usolve, lusolve\n   *\n   * @param {Matrix, Array} L       A N x N matrix or array (L)\n   * @param {Matrix, Array} b       A column vector with the b values\n   *\n   * @return {DenseMatrix[] | Array[]}  An array of affine-independent column vectors (x) that solve the linear system\n   */\n\n  return typed(name, {\n    'SparseMatrix, Array | Matrix': function SparseMatrixArrayMatrix(m, b) {\n      return _sparseForwardSubstitution(m, b);\n    },\n    'DenseMatrix, Array | Matrix': function DenseMatrixArrayMatrix(m, b) {\n      return _denseForwardSubstitution(m, b);\n    },\n    'Array, Array | Matrix': function ArrayArrayMatrix(a, b) {\n      var m = matrix(a);\n      var R = _denseForwardSubstitution(m, b);\n      return R.map(function (r) {\n        return r.valueOf();\n      });\n    }\n  });\n  function _denseForwardSubstitution(m, b_) {\n    // the algorithm is derived from\n    // https://www.overleaf.com/read/csvgqdxggyjv\n    // array of right-hand sides\n    var B = [solveValidation(m, b_, true)._data.map(function (e) {\n      return e[0];\n    })];\n    var M = m._data;\n    var rows = m._size[0];\n    var columns = m._size[1]; // loop columns\n\n    for (var i = 0; i < columns; i++) {\n      var L = B.length; // loop right-hand sides\n\n      for (var k = 0; k < L; k++) {\n        var b = B[k];\n        if (!equalScalar(M[i][i], 0)) {\n          // non-singular row\n          b[i] = divideScalar(b[i], M[i][i]);\n          for (var j = i + 1; j < columns; j++) {\n            // b[j] -= b[i] * M[j,i]\n            b[j] = subtract(b[j], multiplyScalar(b[i], M[j][i]));\n          }\n        } else if (!equalScalar(b[i], 0)) {\n          // singular row, nonzero RHS\n          if (k === 0) {\n            // There is no valid solution\n            return [];\n          } else {\n            // This RHS is invalid but other solutions may still exist\n            B.splice(k, 1);\n            k -= 1;\n            L -= 1;\n          }\n        } else if (k === 0) {\n          // singular row, RHS is zero\n          var bNew = (0, _toConsumableArray2[\"default\"])(b);\n          bNew[i] = 1;\n          for (var _j = i + 1; _j < columns; _j++) {\n            bNew[_j] = subtract(bNew[_j], M[_j][i]);\n          }\n          B.push(bNew);\n        }\n      }\n    }\n    return B.map(function (x) {\n      return new DenseMatrix({\n        data: x.map(function (e) {\n          return [e];\n        }),\n        size: [rows, 1]\n      });\n    });\n  }\n  function _sparseForwardSubstitution(m, b_) {\n    // array of right-hand sides\n    var B = [solveValidation(m, b_, true)._data.map(function (e) {\n      return e[0];\n    })];\n    var rows = m._size[0];\n    var columns = m._size[1];\n    var values = m._values;\n    var index = m._index;\n    var ptr = m._ptr; // loop columns\n\n    for (var i = 0; i < columns; i++) {\n      var L = B.length; // loop right-hand sides\n\n      for (var k = 0; k < L; k++) {\n        var b = B[k]; // values & indices (column i)\n\n        var iValues = [];\n        var iIndices = []; // first & last indeces in column\n\n        var firstIndex = ptr[i];\n        var lastIndex = ptr[i + 1]; // find the value at [i, i]\n\n        var Mii = 0;\n        for (var j = firstIndex; j < lastIndex; j++) {\n          var J = index[j]; // check row\n\n          if (J === i) {\n            Mii = values[j];\n          } else if (J > i) {\n            // store lower triangular\n            iValues.push(values[j]);\n            iIndices.push(J);\n          }\n        }\n        if (!equalScalar(Mii, 0)) {\n          // non-singular row\n          b[i] = divideScalar(b[i], Mii);\n          for (var _j2 = 0, _lastIndex = iIndices.length; _j2 < _lastIndex; _j2++) {\n            var _J = iIndices[_j2];\n            b[_J] = subtract(b[_J], multiplyScalar(b[i], iValues[_j2]));\n          }\n        } else if (!equalScalar(b[i], 0)) {\n          // singular row, nonzero RHS\n          if (k === 0) {\n            // There is no valid solution\n            return [];\n          } else {\n            // This RHS is invalid but other solutions may still exist\n            B.splice(k, 1);\n            k -= 1;\n            L -= 1;\n          }\n        } else if (k === 0) {\n          // singular row, RHS is zero\n          var bNew = (0, _toConsumableArray2[\"default\"])(b);\n          bNew[i] = 1;\n          for (var _j3 = 0, _lastIndex2 = iIndices.length; _j3 < _lastIndex2; _j3++) {\n            var _J2 = iIndices[_j3];\n            bNew[_J2] = subtract(bNew[_J2], iValues[_j3]);\n          }\n          B.push(bNew);\n        }\n      }\n    }\n    return B.map(function (x) {\n      return new DenseMatrix({\n        data: x.map(function (e) {\n          return [e];\n        }),\n        size: [rows, 1]\n      });\n    });\n  }\n});\nexports.createLsolveAll = createLsolveAll;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","createLsolveAll","_toConsumableArray2","_factory","_solveValidation","name","dependencies","factory","_ref","typed","matrix","divideScalar","multiplyScalar","subtract","equalScalar","DenseMatrix","solveValidation","createSolveValidation","SparseMatrixArrayMatrix","m","b","_sparseForwardSubstitution","DenseMatrixArrayMatrix","_denseForwardSubstitution","ArrayArrayMatrix","a","R","map","r","valueOf","b_","B","_data","e","M","rows","_size","columns","i","L","length","k","j","splice","bNew","_j","push","x","data","size","values","_values","index","_index","ptr","_ptr","iValues","iIndices","firstIndex","lastIndex","Mii","J","_j2","_lastIndex","_J","_j3","_lastIndex2","_J2"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/function/algebra/solver/lsolveAll.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createLsolveAll = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _factory = require(\"../../../utils/factory.js\");\n\nvar _solveValidation = require(\"./utils/solveValidation.js\");\n\nvar name = 'lsolveAll';\nvar dependencies = ['typed', 'matrix', 'divideScalar', 'multiplyScalar', 'subtract', 'equalScalar', 'DenseMatrix'];\nvar createLsolveAll = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      divideScalar = _ref.divideScalar,\n      multiplyScalar = _ref.multiplyScalar,\n      subtract = _ref.subtract,\n      equalScalar = _ref.equalScalar,\n      DenseMatrix = _ref.DenseMatrix;\n  var solveValidation = (0, _solveValidation.createSolveValidation)({\n    DenseMatrix: DenseMatrix\n  });\n  /**\n   * Finds all solutions of a linear equation system by forwards substitution. Matrix must be a lower triangular matrix.\n   *\n   * `L * x = b`\n   *\n   * Syntax:\n   *\n   *    math.lsolveAll(L, b)\n   *\n   * Examples:\n   *\n   *    const a = [[-2, 3], [2, 1]]\n   *    const b = [11, 9]\n   *    const x = lsolveAll(a, b)  // [ [[-5.5], [20]] ]\n   *\n   * See also:\n   *\n   *    lsolve, lup, slu, usolve, lusolve\n   *\n   * @param {Matrix, Array} L       A N x N matrix or array (L)\n   * @param {Matrix, Array} b       A column vector with the b values\n   *\n   * @return {DenseMatrix[] | Array[]}  An array of affine-independent column vectors (x) that solve the linear system\n   */\n\n  return typed(name, {\n    'SparseMatrix, Array | Matrix': function SparseMatrixArrayMatrix(m, b) {\n      return _sparseForwardSubstitution(m, b);\n    },\n    'DenseMatrix, Array | Matrix': function DenseMatrixArrayMatrix(m, b) {\n      return _denseForwardSubstitution(m, b);\n    },\n    'Array, Array | Matrix': function ArrayArrayMatrix(a, b) {\n      var m = matrix(a);\n\n      var R = _denseForwardSubstitution(m, b);\n\n      return R.map(function (r) {\n        return r.valueOf();\n      });\n    }\n  });\n\n  function _denseForwardSubstitution(m, b_) {\n    // the algorithm is derived from\n    // https://www.overleaf.com/read/csvgqdxggyjv\n    // array of right-hand sides\n    var B = [solveValidation(m, b_, true)._data.map(function (e) {\n      return e[0];\n    })];\n    var M = m._data;\n    var rows = m._size[0];\n    var columns = m._size[1]; // loop columns\n\n    for (var i = 0; i < columns; i++) {\n      var L = B.length; // loop right-hand sides\n\n      for (var k = 0; k < L; k++) {\n        var b = B[k];\n\n        if (!equalScalar(M[i][i], 0)) {\n          // non-singular row\n          b[i] = divideScalar(b[i], M[i][i]);\n\n          for (var j = i + 1; j < columns; j++) {\n            // b[j] -= b[i] * M[j,i]\n            b[j] = subtract(b[j], multiplyScalar(b[i], M[j][i]));\n          }\n        } else if (!equalScalar(b[i], 0)) {\n          // singular row, nonzero RHS\n          if (k === 0) {\n            // There is no valid solution\n            return [];\n          } else {\n            // This RHS is invalid but other solutions may still exist\n            B.splice(k, 1);\n            k -= 1;\n            L -= 1;\n          }\n        } else if (k === 0) {\n          // singular row, RHS is zero\n          var bNew = (0, _toConsumableArray2[\"default\"])(b);\n          bNew[i] = 1;\n\n          for (var _j = i + 1; _j < columns; _j++) {\n            bNew[_j] = subtract(bNew[_j], M[_j][i]);\n          }\n\n          B.push(bNew);\n        }\n      }\n    }\n\n    return B.map(function (x) {\n      return new DenseMatrix({\n        data: x.map(function (e) {\n          return [e];\n        }),\n        size: [rows, 1]\n      });\n    });\n  }\n\n  function _sparseForwardSubstitution(m, b_) {\n    // array of right-hand sides\n    var B = [solveValidation(m, b_, true)._data.map(function (e) {\n      return e[0];\n    })];\n    var rows = m._size[0];\n    var columns = m._size[1];\n    var values = m._values;\n    var index = m._index;\n    var ptr = m._ptr; // loop columns\n\n    for (var i = 0; i < columns; i++) {\n      var L = B.length; // loop right-hand sides\n\n      for (var k = 0; k < L; k++) {\n        var b = B[k]; // values & indices (column i)\n\n        var iValues = [];\n        var iIndices = []; // first & last indeces in column\n\n        var firstIndex = ptr[i];\n        var lastIndex = ptr[i + 1]; // find the value at [i, i]\n\n        var Mii = 0;\n\n        for (var j = firstIndex; j < lastIndex; j++) {\n          var J = index[j]; // check row\n\n          if (J === i) {\n            Mii = values[j];\n          } else if (J > i) {\n            // store lower triangular\n            iValues.push(values[j]);\n            iIndices.push(J);\n          }\n        }\n\n        if (!equalScalar(Mii, 0)) {\n          // non-singular row\n          b[i] = divideScalar(b[i], Mii);\n\n          for (var _j2 = 0, _lastIndex = iIndices.length; _j2 < _lastIndex; _j2++) {\n            var _J = iIndices[_j2];\n            b[_J] = subtract(b[_J], multiplyScalar(b[i], iValues[_j2]));\n          }\n        } else if (!equalScalar(b[i], 0)) {\n          // singular row, nonzero RHS\n          if (k === 0) {\n            // There is no valid solution\n            return [];\n          } else {\n            // This RHS is invalid but other solutions may still exist\n            B.splice(k, 1);\n            k -= 1;\n            L -= 1;\n          }\n        } else if (k === 0) {\n          // singular row, RHS is zero\n          var bNew = (0, _toConsumableArray2[\"default\"])(b);\n          bNew[i] = 1;\n\n          for (var _j3 = 0, _lastIndex2 = iIndices.length; _j3 < _lastIndex2; _j3++) {\n            var _J2 = iIndices[_j3];\n            bNew[_J2] = subtract(bNew[_J2], iValues[_j3]);\n          }\n\n          B.push(bNew);\n        }\n      }\n    }\n\n    return B.map(function (x) {\n      return new DenseMatrix({\n        data: x.map(function (e) {\n          return [e];\n        }),\n        size: [rows, 1]\n      });\n    });\n  }\n});\nexports.createLsolveAll = createLsolveAll;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}