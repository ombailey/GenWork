{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFix = void 0;\nvar _factory = require(\"../../utils/factory.js\");\nvar _collection = require(\"../../utils/collection.js\");\nvar _algorithm = require(\"../../type/matrix/utils/algorithm14.js\");\nvar name = 'fix';\nvar dependencies = ['typed', 'Complex', 'matrix', 'ceil', 'floor'];\nvar createFix = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    _Complex = _ref.Complex,\n    matrix = _ref.matrix,\n    ceil = _ref.ceil,\n    floor = _ref.floor;\n  var algorithm14 = (0, _algorithm.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Round a value towards zero.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.fix(x)\n   *\n   * Examples:\n   *\n   *    math.fix(3.2)                // returns number 3\n   *    math.fix(3.8)                // returns number 3\n   *    math.fix(-4.2)               // returns number -4\n   *    math.fix(-4.7)               // returns number -4\n   *\n   *    math.fix(3.12, 1)                // returns number 3.1\n   *    math.fix(3.18, 1)                // returns number 3.1\n   *    math.fix(-4.12, 1)               // returns number -4.1\n   *    math.fix(-4.17, 1)               // returns number -4.1\n   *\n   *    const c = math.complex(3.22, -2.78)\n   *    math.fix(c)                  // returns Complex 3 - 2i\n   *    math.fix(c, 1)               // returns Complex 3.2 - 2.7i\n   *\n   *    math.fix([3.2, 3.8, -4.7])      // returns Array [3, 3, -4]\n   *    math.fix([3.2, 3.8, -4.7], 1)   // returns Array [3.2, 3.8, -4.7]\n   *\n   * See also:\n   *\n   *    ceil, floor, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x    Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                             Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix}     Rounded value\n   */\n\n  return typed('fix', {\n    number: function number(x) {\n      return x > 0 ? floor(x) : ceil(x);\n    },\n    'number, number | BigNumber': function numberNumberBigNumber(x, n) {\n      return x > 0 ? floor(x, n) : ceil(x, n);\n    },\n    Complex: function Complex(x) {\n      return new _Complex(x.re > 0 ? Math.floor(x.re) : Math.ceil(x.re), x.im > 0 ? Math.floor(x.im) : Math.ceil(x.im));\n    },\n    'Complex, number | BigNumber': function ComplexNumberBigNumber(x, n) {\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\n    },\n    BigNumber: function BigNumber(x) {\n      return x.isNegative() ? ceil(x) : floor(x);\n    },\n    'BigNumber, number | BigNumber': function BigNumberNumberBigNumber(x, n) {\n      return x.isNegative() ? ceil(x, n) : floor(x, n);\n    },\n    Fraction: function Fraction(x) {\n      return x.s < 0 ? x.ceil() : x.floor();\n    },\n    'Fraction, number | BigNumber': function FractionNumberBigNumber(x, n) {\n      return x.s < 0 ? x.ceil(n) : x.floor(n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since fix(0) = 0\n      return (0, _collection.deepMap)(x, this, true);\n    },\n    'Array | Matrix, number | BigNumber': function ArrayMatrixNumberBigNumber(x, n) {\n      var _this = this;\n\n      // deep map collection, skip zeros since fix(0) = 0\n      return (0, _collection.deepMap)(x, function (i) {\n        return _this(i, n);\n      }, true);\n    },\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nexports.createFix = createFix;","map":{"version":3,"names":["Object","defineProperty","exports","value","createFix","_factory","require","_collection","_algorithm","name","dependencies","factory","_ref","typed","_Complex","Complex","matrix","ceil","floor","algorithm14","createAlgorithm14","number","x","numberNumberBigNumber","n","re","Math","im","ComplexNumberBigNumber","BigNumber","isNegative","BigNumberNumberBigNumber","Fraction","s","FractionNumberBigNumber","ArrayMatrix","deepMap","ArrayMatrixNumberBigNumber","_this","i","numberComplexBigNumberArray","y","valueOf"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/function/arithmetic/fix.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFix = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _collection = require(\"../../utils/collection.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar name = 'fix';\nvar dependencies = ['typed', 'Complex', 'matrix', 'ceil', 'floor'];\nvar createFix = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      _Complex = _ref.Complex,\n      matrix = _ref.matrix,\n      ceil = _ref.ceil,\n      floor = _ref.floor;\n  var algorithm14 = (0, _algorithm.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Round a value towards zero.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.fix(x)\n   *\n   * Examples:\n   *\n   *    math.fix(3.2)                // returns number 3\n   *    math.fix(3.8)                // returns number 3\n   *    math.fix(-4.2)               // returns number -4\n   *    math.fix(-4.7)               // returns number -4\n   *\n   *    math.fix(3.12, 1)                // returns number 3.1\n   *    math.fix(3.18, 1)                // returns number 3.1\n   *    math.fix(-4.12, 1)               // returns number -4.1\n   *    math.fix(-4.17, 1)               // returns number -4.1\n   *\n   *    const c = math.complex(3.22, -2.78)\n   *    math.fix(c)                  // returns Complex 3 - 2i\n   *    math.fix(c, 1)               // returns Complex 3.2 - 2.7i\n   *\n   *    math.fix([3.2, 3.8, -4.7])      // returns Array [3, 3, -4]\n   *    math.fix([3.2, 3.8, -4.7], 1)   // returns Array [3.2, 3.8, -4.7]\n   *\n   * See also:\n   *\n   *    ceil, floor, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x    Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                             Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix}     Rounded value\n   */\n\n  return typed('fix', {\n    number: function number(x) {\n      return x > 0 ? floor(x) : ceil(x);\n    },\n    'number, number | BigNumber': function numberNumberBigNumber(x, n) {\n      return x > 0 ? floor(x, n) : ceil(x, n);\n    },\n    Complex: function Complex(x) {\n      return new _Complex(x.re > 0 ? Math.floor(x.re) : Math.ceil(x.re), x.im > 0 ? Math.floor(x.im) : Math.ceil(x.im));\n    },\n    'Complex, number | BigNumber': function ComplexNumberBigNumber(x, n) {\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\n    },\n    BigNumber: function BigNumber(x) {\n      return x.isNegative() ? ceil(x) : floor(x);\n    },\n    'BigNumber, number | BigNumber': function BigNumberNumberBigNumber(x, n) {\n      return x.isNegative() ? ceil(x, n) : floor(x, n);\n    },\n    Fraction: function Fraction(x) {\n      return x.s < 0 ? x.ceil() : x.floor();\n    },\n    'Fraction, number | BigNumber': function FractionNumberBigNumber(x, n) {\n      return x.s < 0 ? x.ceil(n) : x.floor(n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since fix(0) = 0\n      return (0, _collection.deepMap)(x, this, true);\n    },\n    'Array | Matrix, number | BigNumber': function ArrayMatrixNumberBigNumber(x, n) {\n      var _this = this;\n\n      // deep map collection, skip zeros since fix(0) = 0\n      return (0, _collection.deepMap)(x, function (i) {\n        return _this(i, n);\n      }, true);\n    },\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nexports.createFix = createFix;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}