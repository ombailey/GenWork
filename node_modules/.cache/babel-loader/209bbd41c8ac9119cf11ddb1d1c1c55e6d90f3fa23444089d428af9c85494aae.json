{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.wrapString = void 0;\nconst slice_ansi_1 = __importDefault(require(\"slice-ansi\"));\nconst string_width_1 = __importDefault(require(\"string-width\"));\n/**\n * Creates an array of strings split into groups the length of size.\n * This function works with strings that contain ASCII characters.\n *\n * wrapText is different from would-be \"chunk\" implementation\n * in that whitespace characters that occur on a chunk size limit are trimmed.\n *\n */\nconst wrapString = (subject, size) => {\n  let subjectSlice = subject;\n  const chunks = [];\n  do {\n    chunks.push(slice_ansi_1.default(subjectSlice, 0, size));\n    subjectSlice = slice_ansi_1.default(subjectSlice, size).trim();\n  } while (string_width_1.default(subjectSlice));\n  return chunks;\n};\nexports.wrapString = wrapString;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","wrapString","slice_ansi_1","require","string_width_1","subject","size","subjectSlice","chunks","push","default","trim"],"sources":["/Users/omarbailey/node_modules/table/dist/wrapString.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wrapString = void 0;\nconst slice_ansi_1 = __importDefault(require(\"slice-ansi\"));\nconst string_width_1 = __importDefault(require(\"string-width\"));\n/**\n * Creates an array of strings split into groups the length of size.\n * This function works with strings that contain ASCII characters.\n *\n * wrapText is different from would-be \"chunk\" implementation\n * in that whitespace characters that occur on a chunk size limit are trimmed.\n *\n */\nconst wrapString = (subject, size) => {\n    let subjectSlice = subject;\n    const chunks = [];\n    do {\n        chunks.push(slice_ansi_1.default(subjectSlice, 0, size));\n        subjectSlice = slice_ansi_1.default(subjectSlice, size).trim();\n    } while (string_width_1.default(subjectSlice));\n    return chunks;\n};\nexports.wrapString = wrapString;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAG,KAAK,CAAC;AAC3B,MAAMC,YAAY,GAAGR,eAAe,CAACS,OAAO,CAAC,YAAY,CAAC,CAAC;AAC3D,MAAMC,cAAc,GAAGV,eAAe,CAACS,OAAO,CAAC,cAAc,CAAC,CAAC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMF,UAAU,GAAG,CAACI,OAAO,EAAEC,IAAI,KAAK;EAClC,IAAIC,YAAY,GAAGF,OAAO;EAC1B,MAAMG,MAAM,GAAG,EAAE;EACjB,GAAG;IACCA,MAAM,CAACC,IAAI,CAACP,YAAY,CAACQ,OAAO,CAACH,YAAY,EAAE,CAAC,EAAED,IAAI,CAAC,CAAC;IACxDC,YAAY,GAAGL,YAAY,CAACQ,OAAO,CAACH,YAAY,EAAED,IAAI,CAAC,CAACK,IAAI,EAAE;EAClE,CAAC,QAAQP,cAAc,CAACM,OAAO,CAACH,YAAY,CAAC;EAC7C,OAAOC,MAAM;AACjB,CAAC;AACDT,OAAO,CAACE,UAAU,GAAGA,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}