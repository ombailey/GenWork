{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAnd = void 0;\nvar _algorithm = require(\"../../type/matrix/utils/algorithm02.js\");\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm11.js\");\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm13.js\");\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm14.js\");\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm06.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar _index = require(\"../../plain/number/index.js\");\nvar name = 'and';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'not'];\nvar createAnd = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    matrix = _ref.matrix,\n    equalScalar = _ref.equalScalar,\n    zeros = _ref.zeros,\n    not = _ref.not;\n  var algorithm02 = (0, _algorithm.createAlgorithm02)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm06 = (0, _algorithm5.createAlgorithm06)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm11 = (0, _algorithm2.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm13 = (0, _algorithm3.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm4.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Logical `and`. Test whether two values are both defined with a nonzero/nonempty value.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.and(x, y)\n   *\n   * Examples:\n   *\n   *    math.and(2, 4)   // returns true\n   *\n   *    a = [2, 0, 0]\n   *    b = [3, 7, 0]\n   *    c = 0\n   *\n   *    math.and(a, b)   // returns [true, false, false]\n   *    math.and(a, c)   // returns [false, false, false]\n   *\n   * See also:\n   *\n   *    not, or, xor\n   *\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} y Second value to check\n   * @return {boolean | Array | Matrix}\n   *            Returns true when both inputs are defined with a nonzero/nonempty value.\n   */\n\n  return typed(name, {\n    'number, number': _index.andNumber,\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return (x.re !== 0 || x.im !== 0) && (y.re !== 0 || y.im !== 0);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return !x.isZero() && !y.isZero() && !x.isNaN() && !y.isNaN();\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      return this(x.value || 0, y.value || 0);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm06(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm02(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      // check scalar\n      if (not(y)) {\n        // return zero matrix\n        return zeros(x.size(), x.storage());\n      }\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      // check scalar\n      if (not(y)) {\n        // return zero matrix\n        return zeros(x.size(), x.storage());\n      }\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      // check scalar\n      if (not(x)) {\n        // return zero matrix\n        return zeros(x.size(), x.storage());\n      }\n      return algorithm11(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      // check scalar\n      if (not(x)) {\n        // return zero matrix\n        return zeros(x.size(), x.storage());\n      }\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y)).valueOf();\n    }\n  });\n});\nexports.createAnd = createAnd;","map":{"version":3,"names":["Object","defineProperty","exports","value","createAnd","_algorithm","require","_algorithm2","_algorithm3","_algorithm4","_algorithm5","_factory","_index","name","dependencies","factory","_ref","typed","matrix","equalScalar","zeros","not","algorithm02","createAlgorithm02","algorithm06","createAlgorithm06","algorithm11","createAlgorithm11","algorithm13","createAlgorithm13","algorithm14","createAlgorithm14","andNumber","ComplexComplex","x","y","re","im","BigNumberBigNumber","isZero","isNaN","UnitUnit","SparseMatrixSparseMatrix","SparseMatrixDenseMatrix","DenseMatrixSparseMatrix","DenseMatrixDenseMatrix","ArrayArray","valueOf","ArrayMatrix","MatrixArray","SparseMatrixAny","size","storage","DenseMatrixAny","anySparseMatrix","anyDenseMatrix","ArrayAny","anyArray"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/function/logical/and.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAnd = void 0;\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm02.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm11.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm06.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _index = require(\"../../plain/number/index.js\");\n\nvar name = 'and';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'not'];\nvar createAnd = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      zeros = _ref.zeros,\n      not = _ref.not;\n  var algorithm02 = (0, _algorithm.createAlgorithm02)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm06 = (0, _algorithm5.createAlgorithm06)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm11 = (0, _algorithm2.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm13 = (0, _algorithm3.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm4.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Logical `and`. Test whether two values are both defined with a nonzero/nonempty value.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.and(x, y)\n   *\n   * Examples:\n   *\n   *    math.and(2, 4)   // returns true\n   *\n   *    a = [2, 0, 0]\n   *    b = [3, 7, 0]\n   *    c = 0\n   *\n   *    math.and(a, b)   // returns [true, false, false]\n   *    math.and(a, c)   // returns [false, false, false]\n   *\n   * See also:\n   *\n   *    not, or, xor\n   *\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} y Second value to check\n   * @return {boolean | Array | Matrix}\n   *            Returns true when both inputs are defined with a nonzero/nonempty value.\n   */\n\n  return typed(name, {\n    'number, number': _index.andNumber,\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return (x.re !== 0 || x.im !== 0) && (y.re !== 0 || y.im !== 0);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return !x.isZero() && !y.isZero() && !x.isNaN() && !y.isNaN();\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      return this(x.value || 0, y.value || 0);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm06(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm02(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      // check scalar\n      if (not(y)) {\n        // return zero matrix\n        return zeros(x.size(), x.storage());\n      }\n\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      // check scalar\n      if (not(y)) {\n        // return zero matrix\n        return zeros(x.size(), x.storage());\n      }\n\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      // check scalar\n      if (not(x)) {\n        // return zero matrix\n        return zeros(x.size(), x.storage());\n      }\n\n      return algorithm11(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      // check scalar\n      if (not(x)) {\n        // return zero matrix\n        return zeros(x.size(), x.storage());\n      }\n\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y)).valueOf();\n    }\n  });\n});\nexports.createAnd = createAnd;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}