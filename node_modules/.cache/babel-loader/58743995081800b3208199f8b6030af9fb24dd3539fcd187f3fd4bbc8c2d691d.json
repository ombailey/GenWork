{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.improveErrorMessage = improveErrorMessage;\nvar _is = require(\"../../../utils/is.js\");\n\n/**\n * Improve error messages for statistics functions. Errors are typically\n * thrown in an internally used function like larger, causing the error\n * not to mention the function (like max) which is actually used by the user.\n *\n * @param {Error} err\n * @param {String} fnName\n * @param {*} [value]\n * @return {Error}\n */\nfunction improveErrorMessage(err, fnName, value) {\n  // TODO: add information with the index (also needs transform in expression parser)\n  var details;\n  if (String(err).indexOf('Unexpected type') !== -1) {\n    details = arguments.length > 2 ? ' (type: ' + (0, _is.typeOf)(value) + ', value: ' + JSON.stringify(value) + ')' : ' (type: ' + err.data.actual + ')';\n    return new TypeError('Cannot calculate ' + fnName + ', unexpected type of argument' + details);\n  }\n  if (String(err).indexOf('complex numbers') !== -1) {\n    details = arguments.length > 2 ? ' (type: ' + (0, _is.typeOf)(value) + ', value: ' + JSON.stringify(value) + ')' : '';\n    return new TypeError('Cannot calculate ' + fnName + ', no ordering relation is defined for complex numbers' + details);\n  }\n  return err;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","improveErrorMessage","_is","require","err","fnName","details","String","indexOf","arguments","length","typeOf","JSON","stringify","data","actual","TypeError"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/function/statistics/utils/improveErrorMessage.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.improveErrorMessage = improveErrorMessage;\n\nvar _is = require(\"../../../utils/is.js\");\n\n/**\n * Improve error messages for statistics functions. Errors are typically\n * thrown in an internally used function like larger, causing the error\n * not to mention the function (like max) which is actually used by the user.\n *\n * @param {Error} err\n * @param {String} fnName\n * @param {*} [value]\n * @return {Error}\n */\nfunction improveErrorMessage(err, fnName, value) {\n  // TODO: add information with the index (also needs transform in expression parser)\n  var details;\n\n  if (String(err).indexOf('Unexpected type') !== -1) {\n    details = arguments.length > 2 ? ' (type: ' + (0, _is.typeOf)(value) + ', value: ' + JSON.stringify(value) + ')' : ' (type: ' + err.data.actual + ')';\n    return new TypeError('Cannot calculate ' + fnName + ', unexpected type of argument' + details);\n  }\n\n  if (String(err).indexOf('complex numbers') !== -1) {\n    details = arguments.length > 2 ? ' (type: ' + (0, _is.typeOf)(value) + ', value: ' + JSON.stringify(value) + ')' : '';\n    return new TypeError('Cannot calculate ' + fnName + ', no ordering relation is defined for complex numbers' + details);\n  }\n\n  return err;\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB;AAEjD,IAAIC,GAAG,GAAGC,OAAO,CAAC,sBAAsB,CAAC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,mBAAmB,CAACG,GAAG,EAAEC,MAAM,EAAEL,KAAK,EAAE;EAC/C;EACA,IAAIM,OAAO;EAEX,IAAIC,MAAM,CAACH,GAAG,CAAC,CAACI,OAAO,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,EAAE;IACjDF,OAAO,GAAGG,SAAS,CAACC,MAAM,GAAG,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC,EAAER,GAAG,CAACS,MAAM,EAAEX,KAAK,CAAC,GAAG,WAAW,GAAGY,IAAI,CAACC,SAAS,CAACb,KAAK,CAAC,GAAG,GAAG,GAAG,UAAU,GAAGI,GAAG,CAACU,IAAI,CAACC,MAAM,GAAG,GAAG;IACrJ,OAAO,IAAIC,SAAS,CAAC,mBAAmB,GAAGX,MAAM,GAAG,+BAA+B,GAAGC,OAAO,CAAC;EAChG;EAEA,IAAIC,MAAM,CAACH,GAAG,CAAC,CAACI,OAAO,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,EAAE;IACjDF,OAAO,GAAGG,SAAS,CAACC,MAAM,GAAG,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC,EAAER,GAAG,CAACS,MAAM,EAAEX,KAAK,CAAC,GAAG,WAAW,GAAGY,IAAI,CAACC,SAAS,CAACb,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE;IACrH,OAAO,IAAIgB,SAAS,CAAC,mBAAmB,GAAGX,MAAM,GAAG,uDAAuD,GAAGC,OAAO,CAAC;EACxH;EAEA,OAAOF,GAAG;AACZ"},"metadata":{},"sourceType":"script","externalDependencies":[]}