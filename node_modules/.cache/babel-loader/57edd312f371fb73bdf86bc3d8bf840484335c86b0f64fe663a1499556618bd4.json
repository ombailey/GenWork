{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createBigNumberTau = exports.createBigNumberPi = exports.createBigNumberPhi = exports.createBigNumberE = void 0;\nvar _function = require(\"../function.js\");\n\n/**\n * Calculate BigNumber e\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns e\n */\nvar createBigNumberE = (0, _function.memoize)(function (BigNumber) {\n  return new BigNumber(1).exp();\n}, {\n  hasher: hasher\n});\n/**\n * Calculate BigNumber golden ratio, phi = (1+sqrt(5))/2\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns phi\n */\n\nexports.createBigNumberE = createBigNumberE;\nvar createBigNumberPhi = (0, _function.memoize)(function (BigNumber) {\n  return new BigNumber(1).plus(new BigNumber(5).sqrt()).div(2);\n}, {\n  hasher: hasher\n});\n/**\n * Calculate BigNumber pi.\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns pi\n */\n\nexports.createBigNumberPhi = createBigNumberPhi;\nvar createBigNumberPi = (0, _function.memoize)(function (BigNumber) {\n  return BigNumber.acos(-1);\n}, {\n  hasher: hasher\n});\n/**\n * Calculate BigNumber tau, tau = 2 * pi\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns tau\n */\n\nexports.createBigNumberPi = createBigNumberPi;\nvar createBigNumberTau = (0, _function.memoize)(function (BigNumber) {\n  return createBigNumberPi(BigNumber).times(2);\n}, {\n  hasher: hasher\n});\n/**\n * Create a hash for a BigNumber constructor function. The created has is\n * the configured precision\n * @param {Array} args         Supposed to contain a single entry with\n *                             a BigNumber constructor\n * @return {number} precision\n * @private\n */\n\nexports.createBigNumberTau = createBigNumberTau;\nfunction hasher(args) {\n  return args[0].precision;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","createBigNumberTau","createBigNumberPi","createBigNumberPhi","createBigNumberE","_function","require","memoize","BigNumber","exp","hasher","plus","sqrt","div","acos","times","args","precision"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/utils/bignumber/constants.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createBigNumberTau = exports.createBigNumberPi = exports.createBigNumberPhi = exports.createBigNumberE = void 0;\n\nvar _function = require(\"../function.js\");\n\n/**\n * Calculate BigNumber e\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns e\n */\nvar createBigNumberE = (0, _function.memoize)(function (BigNumber) {\n  return new BigNumber(1).exp();\n}, {\n  hasher: hasher\n});\n/**\n * Calculate BigNumber golden ratio, phi = (1+sqrt(5))/2\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns phi\n */\n\nexports.createBigNumberE = createBigNumberE;\nvar createBigNumberPhi = (0, _function.memoize)(function (BigNumber) {\n  return new BigNumber(1).plus(new BigNumber(5).sqrt()).div(2);\n}, {\n  hasher: hasher\n});\n/**\n * Calculate BigNumber pi.\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns pi\n */\n\nexports.createBigNumberPhi = createBigNumberPhi;\nvar createBigNumberPi = (0, _function.memoize)(function (BigNumber) {\n  return BigNumber.acos(-1);\n}, {\n  hasher: hasher\n});\n/**\n * Calculate BigNumber tau, tau = 2 * pi\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns tau\n */\n\nexports.createBigNumberPi = createBigNumberPi;\nvar createBigNumberTau = (0, _function.memoize)(function (BigNumber) {\n  return createBigNumberPi(BigNumber).times(2);\n}, {\n  hasher: hasher\n});\n/**\n * Create a hash for a BigNumber constructor function. The created has is\n * the configured precision\n * @param {Array} args         Supposed to contain a single entry with\n *                             a BigNumber constructor\n * @return {number} precision\n * @private\n */\n\nexports.createBigNumberTau = createBigNumberTau;\n\nfunction hasher(args) {\n  return args[0].precision;\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,kBAAkB,GAAGF,OAAO,CAACG,iBAAiB,GAAGH,OAAO,CAACI,kBAAkB,GAAGJ,OAAO,CAACK,gBAAgB,GAAG,KAAK,CAAC;AAEvH,IAAIC,SAAS,GAAGC,OAAO,CAAC,gBAAgB,CAAC;;AAEzC;AACA;AACA;AACA;AACA;AACA,IAAIF,gBAAgB,GAAG,CAAC,CAAC,EAAEC,SAAS,CAACE,OAAO,EAAE,UAAUC,SAAS,EAAE;EACjE,OAAO,IAAIA,SAAS,CAAC,CAAC,CAAC,CAACC,GAAG,EAAE;AAC/B,CAAC,EAAE;EACDC,MAAM,EAAEA;AACV,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;;AAEAX,OAAO,CAACK,gBAAgB,GAAGA,gBAAgB;AAC3C,IAAID,kBAAkB,GAAG,CAAC,CAAC,EAAEE,SAAS,CAACE,OAAO,EAAE,UAAUC,SAAS,EAAE;EACnE,OAAO,IAAIA,SAAS,CAAC,CAAC,CAAC,CAACG,IAAI,CAAC,IAAIH,SAAS,CAAC,CAAC,CAAC,CAACI,IAAI,EAAE,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC;AAC9D,CAAC,EAAE;EACDH,MAAM,EAAEA;AACV,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;;AAEAX,OAAO,CAACI,kBAAkB,GAAGA,kBAAkB;AAC/C,IAAID,iBAAiB,GAAG,CAAC,CAAC,EAAEG,SAAS,CAACE,OAAO,EAAE,UAAUC,SAAS,EAAE;EAClE,OAAOA,SAAS,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,EAAE;EACDJ,MAAM,EAAEA;AACV,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;;AAEAX,OAAO,CAACG,iBAAiB,GAAGA,iBAAiB;AAC7C,IAAID,kBAAkB,GAAG,CAAC,CAAC,EAAEI,SAAS,CAACE,OAAO,EAAE,UAAUC,SAAS,EAAE;EACnE,OAAON,iBAAiB,CAACM,SAAS,CAAC,CAACO,KAAK,CAAC,CAAC,CAAC;AAC9C,CAAC,EAAE;EACDL,MAAM,EAAEA;AACV,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAX,OAAO,CAACE,kBAAkB,GAAGA,kBAAkB;AAE/C,SAASS,MAAM,CAACM,IAAI,EAAE;EACpB,OAAOA,IAAI,CAAC,CAAC,CAAC,CAACC,SAAS;AAC1B"},"metadata":{},"sourceType":"script","externalDependencies":[]}