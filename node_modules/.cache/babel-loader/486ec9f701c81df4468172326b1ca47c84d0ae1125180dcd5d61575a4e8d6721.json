{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.alignString = void 0;\nconst string_width_1 = __importDefault(require(\"string-width\"));\nconst utils_1 = require(\"./utils\");\nconst alignLeft = (subject, width) => {\n  return subject + ' '.repeat(width);\n};\nconst alignRight = (subject, width) => {\n  return ' '.repeat(width) + subject;\n};\nconst alignCenter = (subject, width) => {\n  return ' '.repeat(Math.floor(width / 2)) + subject + ' '.repeat(Math.ceil(width / 2));\n};\nconst alignJustify = (subject, width) => {\n  const spaceSequenceCount = utils_1.countSpaceSequence(subject);\n  if (spaceSequenceCount === 0) {\n    return alignLeft(subject, width);\n  }\n  const addingSpaces = utils_1.distributeUnevenly(width, spaceSequenceCount);\n  if (Math.max(...addingSpaces) > 3) {\n    return alignLeft(subject, width);\n  }\n  let spaceSequenceIndex = 0;\n  return subject.replace(/\\s+/g, groupSpace => {\n    return groupSpace + ' '.repeat(addingSpaces[spaceSequenceIndex++]);\n  });\n};\n/**\n * Pads a string to the left and/or right to position the subject\n * text in a desired alignment within a container.\n */\nconst alignString = (subject, containerWidth, alignment) => {\n  const subjectWidth = string_width_1.default(subject);\n  if (subjectWidth === containerWidth) {\n    return subject;\n  }\n  if (subjectWidth > containerWidth) {\n    throw new Error('Subject parameter value width cannot be greater than the container width.');\n  }\n  if (subjectWidth === 0) {\n    return ' '.repeat(containerWidth);\n  }\n  const availableWidth = containerWidth - subjectWidth;\n  if (alignment === 'left') {\n    return alignLeft(subject, availableWidth);\n  }\n  if (alignment === 'right') {\n    return alignRight(subject, availableWidth);\n  }\n  if (alignment === 'justify') {\n    return alignJustify(subject, availableWidth);\n  }\n  return alignCenter(subject, availableWidth);\n};\nexports.alignString = alignString;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","alignString","string_width_1","require","utils_1","alignLeft","subject","width","repeat","alignRight","alignCenter","Math","floor","ceil","alignJustify","spaceSequenceCount","countSpaceSequence","addingSpaces","distributeUnevenly","max","spaceSequenceIndex","replace","groupSpace","containerWidth","alignment","subjectWidth","default","Error","availableWidth"],"sources":["/Users/omarbailey/node_modules/table/dist/alignString.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.alignString = void 0;\nconst string_width_1 = __importDefault(require(\"string-width\"));\nconst utils_1 = require(\"./utils\");\nconst alignLeft = (subject, width) => {\n    return subject + ' '.repeat(width);\n};\nconst alignRight = (subject, width) => {\n    return ' '.repeat(width) + subject;\n};\nconst alignCenter = (subject, width) => {\n    return ' '.repeat(Math.floor(width / 2)) + subject + ' '.repeat(Math.ceil(width / 2));\n};\nconst alignJustify = (subject, width) => {\n    const spaceSequenceCount = utils_1.countSpaceSequence(subject);\n    if (spaceSequenceCount === 0) {\n        return alignLeft(subject, width);\n    }\n    const addingSpaces = utils_1.distributeUnevenly(width, spaceSequenceCount);\n    if (Math.max(...addingSpaces) > 3) {\n        return alignLeft(subject, width);\n    }\n    let spaceSequenceIndex = 0;\n    return subject.replace(/\\s+/g, (groupSpace) => {\n        return groupSpace + ' '.repeat(addingSpaces[spaceSequenceIndex++]);\n    });\n};\n/**\n * Pads a string to the left and/or right to position the subject\n * text in a desired alignment within a container.\n */\nconst alignString = (subject, containerWidth, alignment) => {\n    const subjectWidth = string_width_1.default(subject);\n    if (subjectWidth === containerWidth) {\n        return subject;\n    }\n    if (subjectWidth > containerWidth) {\n        throw new Error('Subject parameter value width cannot be greater than the container width.');\n    }\n    if (subjectWidth === 0) {\n        return ' '.repeat(containerWidth);\n    }\n    const availableWidth = containerWidth - subjectWidth;\n    if (alignment === 'left') {\n        return alignLeft(subject, availableWidth);\n    }\n    if (alignment === 'right') {\n        return alignRight(subject, availableWidth);\n    }\n    if (alignment === 'justify') {\n        return alignJustify(subject, availableWidth);\n    }\n    return alignCenter(subject, availableWidth);\n};\nexports.alignString = alignString;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}