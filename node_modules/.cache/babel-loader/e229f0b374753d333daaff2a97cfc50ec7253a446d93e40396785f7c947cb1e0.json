{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFilter = void 0;\nvar _array = require(\"../../utils/array.js\");\nvar _function = require(\"../../utils/function.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar name = 'filter';\nvar dependencies = ['typed'];\nvar createFilter = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Filter the items in an array or one dimensional matrix.\n   *\n   * Syntax:\n   *\n   *    math.filter(x, test)\n   *\n   * Examples:\n   *\n   *    function isPositive (x) {\n   *      return x > 0\n   *    }\n   *    math.filter([6, -2, -1, 4, 3], isPositive) // returns [6, 4, 3]\n   *\n   *    math.filter([\"23\", \"foo\", \"100\", \"55\", \"bar\"], /[0-9]+/) // returns [\"23\", \"100\", \"55\"]\n   *\n   * See also:\n   *\n   *    forEach, map, sort\n   *\n   * @param {Matrix | Array} x    A one dimensional matrix or array to filter\n   * @param {Function | RegExp} test\n   *        A function or regular expression to test items.\n   *        All entries for which `test` returns true are returned.\n   *        When `test` is a function, it is invoked with three parameters:\n   *        the value of the element, the index of the element, and the\n   *        matrix/array being traversed. The function must return a boolean.\n   * @return {Matrix | Array} Returns the filtered matrix.\n   */\n  return typed('filter', {\n    'Array, function': _filterCallback,\n    'Matrix, function': function MatrixFunction(x, test) {\n      return x.create(_filterCallback(x.toArray(), test));\n    },\n    'Array, RegExp': _array.filterRegExp,\n    'Matrix, RegExp': function MatrixRegExp(x, test) {\n      return x.create((0, _array.filterRegExp)(x.toArray(), test));\n    }\n  });\n});\n/**\n * Filter values in a callback given a callback function\n * @param {Array} x\n * @param {Function} callback\n * @return {Array} Returns the filtered array\n * @private\n */\n\nexports.createFilter = createFilter;\nfunction _filterCallback(x, callback) {\n  // figure out what number of arguments the callback function expects\n  var args = (0, _function.maxArgumentCount)(callback);\n  return (0, _array.filter)(x, function (value, index, array) {\n    // invoke the callback function with the right number of arguments\n    if (args === 1) {\n      return callback(value);\n    } else if (args === 2) {\n      return callback(value, [index]);\n    } else {\n      // 3 or -1\n      return callback(value, [index], array);\n    }\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","createFilter","_array","require","_function","_factory","name","dependencies","factory","_ref","typed","_filterCallback","MatrixFunction","x","test","create","toArray","filterRegExp","MatrixRegExp","callback","args","maxArgumentCount","filter","index","array"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/function/matrix/filter.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFilter = void 0;\n\nvar _array = require(\"../../utils/array.js\");\n\nvar _function = require(\"../../utils/function.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'filter';\nvar dependencies = ['typed'];\nvar createFilter = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Filter the items in an array or one dimensional matrix.\n   *\n   * Syntax:\n   *\n   *    math.filter(x, test)\n   *\n   * Examples:\n   *\n   *    function isPositive (x) {\n   *      return x > 0\n   *    }\n   *    math.filter([6, -2, -1, 4, 3], isPositive) // returns [6, 4, 3]\n   *\n   *    math.filter([\"23\", \"foo\", \"100\", \"55\", \"bar\"], /[0-9]+/) // returns [\"23\", \"100\", \"55\"]\n   *\n   * See also:\n   *\n   *    forEach, map, sort\n   *\n   * @param {Matrix | Array} x    A one dimensional matrix or array to filter\n   * @param {Function | RegExp} test\n   *        A function or regular expression to test items.\n   *        All entries for which `test` returns true are returned.\n   *        When `test` is a function, it is invoked with three parameters:\n   *        the value of the element, the index of the element, and the\n   *        matrix/array being traversed. The function must return a boolean.\n   * @return {Matrix | Array} Returns the filtered matrix.\n   */\n  return typed('filter', {\n    'Array, function': _filterCallback,\n    'Matrix, function': function MatrixFunction(x, test) {\n      return x.create(_filterCallback(x.toArray(), test));\n    },\n    'Array, RegExp': _array.filterRegExp,\n    'Matrix, RegExp': function MatrixRegExp(x, test) {\n      return x.create((0, _array.filterRegExp)(x.toArray(), test));\n    }\n  });\n});\n/**\n * Filter values in a callback given a callback function\n * @param {Array} x\n * @param {Function} callback\n * @return {Array} Returns the filtered array\n * @private\n */\n\nexports.createFilter = createFilter;\n\nfunction _filterCallback(x, callback) {\n  // figure out what number of arguments the callback function expects\n  var args = (0, _function.maxArgumentCount)(callback);\n  return (0, _array.filter)(x, function (value, index, array) {\n    // invoke the callback function with the right number of arguments\n    if (args === 1) {\n      return callback(value);\n    } else if (args === 2) {\n      return callback(value, [index]);\n    } else {\n      // 3 or -1\n      return callback(value, [index], array);\n    }\n  });\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAE7B,IAAIC,MAAM,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAE5C,IAAIC,SAAS,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AAElD,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAwB,CAAC;AAEhD,IAAIG,IAAI,GAAG,QAAQ;AACnB,IAAIC,YAAY,GAAG,CAAC,OAAO,CAAC;AAC5B,IAAIN,YAAY,GAAG,eAAe,CAAC,CAAC,EAAEI,QAAQ,CAACG,OAAO,EAAEF,IAAI,EAAEC,YAAY,EAAE,UAAUE,IAAI,EAAE;EAC1F,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;;EAEtB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOA,KAAK,CAAC,QAAQ,EAAE;IACrB,iBAAiB,EAAEC,eAAe;IAClC,kBAAkB,EAAE,SAASC,cAAc,CAACC,CAAC,EAAEC,IAAI,EAAE;MACnD,OAAOD,CAAC,CAACE,MAAM,CAACJ,eAAe,CAACE,CAAC,CAACG,OAAO,EAAE,EAAEF,IAAI,CAAC,CAAC;IACrD,CAAC;IACD,eAAe,EAAEZ,MAAM,CAACe,YAAY;IACpC,gBAAgB,EAAE,SAASC,YAAY,CAACL,CAAC,EAAEC,IAAI,EAAE;MAC/C,OAAOD,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,EAAEb,MAAM,CAACe,YAAY,EAAEJ,CAAC,CAACG,OAAO,EAAE,EAAEF,IAAI,CAAC,CAAC;IAC9D;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAf,OAAO,CAACE,YAAY,GAAGA,YAAY;AAEnC,SAASU,eAAe,CAACE,CAAC,EAAEM,QAAQ,EAAE;EACpC;EACA,IAAIC,IAAI,GAAG,CAAC,CAAC,EAAEhB,SAAS,CAACiB,gBAAgB,EAAEF,QAAQ,CAAC;EACpD,OAAO,CAAC,CAAC,EAAEjB,MAAM,CAACoB,MAAM,EAAET,CAAC,EAAE,UAAUb,KAAK,EAAEuB,KAAK,EAAEC,KAAK,EAAE;IAC1D;IACA,IAAIJ,IAAI,KAAK,CAAC,EAAE;MACd,OAAOD,QAAQ,CAACnB,KAAK,CAAC;IACxB,CAAC,MAAM,IAAIoB,IAAI,KAAK,CAAC,EAAE;MACrB,OAAOD,QAAQ,CAACnB,KAAK,EAAE,CAACuB,KAAK,CAAC,CAAC;IACjC,CAAC,MAAM;MACL;MACA,OAAOJ,QAAQ,CAACnB,KAAK,EAAE,CAACuB,KAAK,CAAC,EAAEC,KAAK,CAAC;IACxC;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}