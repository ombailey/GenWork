{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCeil = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _decimal = _interopRequireDefault(require(\"decimal.js\"));\nvar _factory = require(\"../../utils/factory.js\");\nvar _collection = require(\"../../utils/collection.js\");\nvar _number = require(\"../../utils/number.js\");\nvar _nearlyEqual = require(\"../../utils/bignumber/nearlyEqual.js\");\nvar _index = require(\"../../plain/number/index.js\");\nvar _algorithm = require(\"../../type/matrix/utils/algorithm11.js\");\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm14.js\");\nvar name = 'ceil';\nvar dependencies = ['typed', 'config', 'round', 'matrix', 'equalScalar'];\nvar createCeil = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    config = _ref.config,\n    round = _ref.round,\n    matrix = _ref.matrix,\n    equalScalar = _ref.equalScalar;\n  var algorithm11 = (0, _algorithm.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm14 = (0, _algorithm2.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Round a value towards plus infinity\n   * If `x` is complex, both real and imaginary part are rounded towards plus infinity.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.ceil(x)\n   *    math.ceil(x, n)\n   *\n   * Examples:\n   *\n   *    math.ceil(3.2)               // returns number 4\n   *    math.ceil(3.8)               // returns number 4\n   *    math.ceil(-4.2)              // returns number -4\n   *    math.ceil(-4.7)              // returns number -4\n   *\n   *    math.ceil(3.212, 2)          // returns number 3.22\n   *    math.ceil(3.288, 2)          // returns number 3.29\n   *    math.ceil(-4.212, 2)         // returns number -4.21\n   *    math.ceil(-4.782, 2)         // returns number -4.78\n   *\n   *    const c = math.complex(3.24, -2.71)\n   *    math.ceil(c)                 // returns Complex 4 - 2i\n   *    math.ceil(c, 1)              // returns Complex 3.3 - 2.7i\n   *\n   *    math.ceil([3.2, 3.8, -4.7])  // returns Array [4, 4, -4]\n   *    math.ceil([3.21, 3.82, -4.71], 1)  // returns Array [3.3, 3.9, -4.7]\n   *\n   * See also:\n   *\n   *    floor, fix, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                            Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value\n   */\n\n  return typed('ceil', {\n    number: function number(x) {\n      if ((0, _number.nearlyEqual)(x, round(x), config.epsilon)) {\n        return round(x);\n      } else {\n        return (0, _index.ceilNumber)(x);\n      }\n    },\n    'number, number': function numberNumber(x, n) {\n      if ((0, _number.nearlyEqual)(x, round(x, n), config.epsilon)) {\n        return round(x, n);\n      } else {\n        var _$split = \"\".concat(x, \"e\").split('e'),\n          _$split2 = (0, _slicedToArray2[\"default\"])(_$split, 2),\n          number = _$split2[0],\n          exponent = _$split2[1];\n        var result = Math.ceil(Number(\"\".concat(number, \"e\").concat(Number(exponent) + n)));\n        var _$split3 = \"\".concat(result, \"e\").split('e');\n        var _$split4 = (0, _slicedToArray2[\"default\"])(_$split3, 2);\n        number = _$split4[0];\n        exponent = _$split4[1];\n        return Number(\"\".concat(number, \"e\").concat(Number(exponent) - n));\n      }\n    },\n    Complex: function Complex(x) {\n      return x.ceil();\n    },\n    'Complex, number': function ComplexNumber(x, n) {\n      return x.ceil(n);\n    },\n    BigNumber: function BigNumber(x) {\n      if ((0, _nearlyEqual.nearlyEqual)(x, round(x), config.epsilon)) {\n        return round(x);\n      } else {\n        return x.ceil();\n      }\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, n) {\n      if ((0, _nearlyEqual.nearlyEqual)(x, round(x, n), config.epsilon)) {\n        return round(x, n);\n      } else {\n        return x.toDecimalPlaces(n.toNumber(), _decimal[\"default\"].ROUND_CEIL);\n      }\n    },\n    Fraction: function Fraction(x) {\n      return x.ceil();\n    },\n    'Fraction, number': function FractionNumber(x, n) {\n      return x.ceil(n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since ceil(0) = 0\n      return (0, _collection.deepMap)(x, this, true);\n    },\n    'Array | Matrix, number': function ArrayMatrixNumber(x, n) {\n      var _this = this;\n\n      // deep map collection, skip zeros since ceil(0) = 0\n      return (0, _collection.deepMap)(x, function (i) {\n        return _this(i, n);\n      }, true);\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nexports.createCeil = createCeil;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","createCeil","_slicedToArray2","_decimal","_factory","_collection","_number","_nearlyEqual","_index","_algorithm","_algorithm2","name","dependencies","factory","_ref","typed","config","round","matrix","equalScalar","algorithm11","createAlgorithm11","algorithm14","createAlgorithm14","number","x","nearlyEqual","epsilon","ceilNumber","numberNumber","n","_$split","concat","split","_$split2","exponent","result","Math","ceil","Number","_$split3","_$split4","Complex","ComplexNumber","BigNumber","BigNumberBigNumber","toDecimalPlaces","toNumber","ROUND_CEIL","Fraction","FractionNumber","ArrayMatrix","deepMap","ArrayMatrixNumber","_this","i","SparseMatrixNumberBigNumber","y","DenseMatrixNumberBigNumber","numberComplexBigNumberArray","valueOf"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/function/arithmetic/ceil.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCeil = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _decimal = _interopRequireDefault(require(\"decimal.js\"));\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _collection = require(\"../../utils/collection.js\");\n\nvar _number = require(\"../../utils/number.js\");\n\nvar _nearlyEqual = require(\"../../utils/bignumber/nearlyEqual.js\");\n\nvar _index = require(\"../../plain/number/index.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm11.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar name = 'ceil';\nvar dependencies = ['typed', 'config', 'round', 'matrix', 'equalScalar'];\nvar createCeil = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      config = _ref.config,\n      round = _ref.round,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar;\n  var algorithm11 = (0, _algorithm.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm14 = (0, _algorithm2.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Round a value towards plus infinity\n   * If `x` is complex, both real and imaginary part are rounded towards plus infinity.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.ceil(x)\n   *    math.ceil(x, n)\n   *\n   * Examples:\n   *\n   *    math.ceil(3.2)               // returns number 4\n   *    math.ceil(3.8)               // returns number 4\n   *    math.ceil(-4.2)              // returns number -4\n   *    math.ceil(-4.7)              // returns number -4\n   *\n   *    math.ceil(3.212, 2)          // returns number 3.22\n   *    math.ceil(3.288, 2)          // returns number 3.29\n   *    math.ceil(-4.212, 2)         // returns number -4.21\n   *    math.ceil(-4.782, 2)         // returns number -4.78\n   *\n   *    const c = math.complex(3.24, -2.71)\n   *    math.ceil(c)                 // returns Complex 4 - 2i\n   *    math.ceil(c, 1)              // returns Complex 3.3 - 2.7i\n   *\n   *    math.ceil([3.2, 3.8, -4.7])  // returns Array [4, 4, -4]\n   *    math.ceil([3.21, 3.82, -4.71], 1)  // returns Array [3.3, 3.9, -4.7]\n   *\n   * See also:\n   *\n   *    floor, fix, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                            Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value\n   */\n\n  return typed('ceil', {\n    number: function number(x) {\n      if ((0, _number.nearlyEqual)(x, round(x), config.epsilon)) {\n        return round(x);\n      } else {\n        return (0, _index.ceilNumber)(x);\n      }\n    },\n    'number, number': function numberNumber(x, n) {\n      if ((0, _number.nearlyEqual)(x, round(x, n), config.epsilon)) {\n        return round(x, n);\n      } else {\n        var _$split = \"\".concat(x, \"e\").split('e'),\n            _$split2 = (0, _slicedToArray2[\"default\"])(_$split, 2),\n            number = _$split2[0],\n            exponent = _$split2[1];\n\n        var result = Math.ceil(Number(\"\".concat(number, \"e\").concat(Number(exponent) + n)));\n\n        var _$split3 = \"\".concat(result, \"e\").split('e');\n\n        var _$split4 = (0, _slicedToArray2[\"default\"])(_$split3, 2);\n\n        number = _$split4[0];\n        exponent = _$split4[1];\n        return Number(\"\".concat(number, \"e\").concat(Number(exponent) - n));\n      }\n    },\n    Complex: function Complex(x) {\n      return x.ceil();\n    },\n    'Complex, number': function ComplexNumber(x, n) {\n      return x.ceil(n);\n    },\n    BigNumber: function BigNumber(x) {\n      if ((0, _nearlyEqual.nearlyEqual)(x, round(x), config.epsilon)) {\n        return round(x);\n      } else {\n        return x.ceil();\n      }\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, n) {\n      if ((0, _nearlyEqual.nearlyEqual)(x, round(x, n), config.epsilon)) {\n        return round(x, n);\n      } else {\n        return x.toDecimalPlaces(n.toNumber(), _decimal[\"default\"].ROUND_CEIL);\n      }\n    },\n    Fraction: function Fraction(x) {\n      return x.ceil();\n    },\n    'Fraction, number': function FractionNumber(x, n) {\n      return x.ceil(n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since ceil(0) = 0\n      return (0, _collection.deepMap)(x, this, true);\n    },\n    'Array | Matrix, number': function ArrayMatrixNumber(x, n) {\n      var _this = this;\n\n      // deep map collection, skip zeros since ceil(0) = 0\n      return (0, _collection.deepMap)(x, function (i) {\n        return _this(i, n);\n      }, true);\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nexports.createCeil = createCeil;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}