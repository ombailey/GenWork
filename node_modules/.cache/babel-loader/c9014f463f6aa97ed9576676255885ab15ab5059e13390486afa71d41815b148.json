{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PlotlyLib = void 0;\n/**\n*  @license\n* Copyright 2022 JsData. All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n* ==========================================================================\n*/\nvar index_1 = require(\"./plotly/index\");\nvar Plotly;\nif (typeof window !== \"undefined\") {\n  //check if in browser environment and require \"plotly.js-dist-min\" module\n  Plotly = require(\"plotly.js-dist-min\");\n}\nvar PlotlyLib = /** @class */function () {\n  function PlotlyLib(ndframe, divId) {\n    this.ndframe = ndframe;\n    this.divId = divId;\n  }\n  PlotlyLib.prototype.getPlotConfig = function (plotConfig) {\n    var _plotConfig = {\n      config: plotConfig && plotConfig.config ? plotConfig.config : {},\n      layout: plotConfig && plotConfig.layout ? plotConfig.layout : {}\n    };\n    return _plotConfig;\n  };\n  /**\n   * Plot Series or DataFrame as lines.\n   * Uses Plotly library as backend, so supports Plotly's configuration parameters\n   * @param plotConfig configuration options for making Plots, supports Plotly.js Config and Layout parameters.\n  */\n  PlotlyLib.prototype.line = function (plotConfig) {\n    var _plotConfig = this.getPlotConfig(plotConfig);\n    (0, index_1.linePlot)(this.ndframe, this.divId, _plotConfig, Plotly);\n  };\n  /**\n   * Plot Series or DataFrame as bars.\n   * Uses Plotly library as backend, so supports Plotly's configuration parameters\n   * @param plotConfig configuration options for making Plots, supports Plotly.js Config and Layout parameters.\n  */\n  PlotlyLib.prototype.bar = function (plotConfig) {\n    var _plotConfig = this.getPlotConfig(plotConfig);\n    (0, index_1.barPlot)(this.ndframe, this.divId, _plotConfig, Plotly);\n  };\n  /**\n   * Plot Series or DataFrame as scatter.\n   * Uses Plotly library as backend, so supports Plotly's configuration parameters\n   * @param plotConfig configuration options for making Plots, supports Plotly.js Config and Layout parameters.\n  */\n  PlotlyLib.prototype.scatter = function (plotConfig) {\n    var _plotConfig = this.getPlotConfig(plotConfig);\n    (0, index_1.scatterPlot)(this.ndframe, this.divId, _plotConfig, Plotly);\n  };\n  /**\n   * Plot Series or DataFrame as histogram.\n   * Uses Plotly library as backend, so supports Plotly's configuration parameters\n   * @param plotConfig configuration options for making Plots, supports Plotly.js Config and Layout parameters.\n  */\n  PlotlyLib.prototype.hist = function (plotConfig) {\n    var _plotConfig = this.getPlotConfig(plotConfig);\n    (0, index_1.histPlot)(this.ndframe, this.divId, _plotConfig, Plotly);\n  };\n  /**\n   * Plot Series or DataFrame as pie.\n   * Uses Plotly library as backend, so supports Plotly's configuration parameters\n   * @param plotConfig configuration options for making Plots, supports Plotly.js Config and Layout parameters.\n  */\n  PlotlyLib.prototype.pie = function (plotConfig) {\n    var _plotConfig = this.getPlotConfig(plotConfig);\n    (0, index_1.piePlot)(this.ndframe, this.divId, _plotConfig, Plotly);\n  };\n  /**\n   * Plot Series or DataFrame as boxplot.\n   * Uses Plotly library as backend, so supports Plotly's configuration parameters\n   * @param plotConfig configuration options for making Plots, supports Plotly.js Config and Layout parameters.\n  */\n  PlotlyLib.prototype.box = function (plotConfig) {\n    var _plotConfig = this.getPlotConfig(plotConfig);\n    (0, index_1.boxPlot)(this.ndframe, this.divId, _plotConfig, Plotly);\n  };\n  /**\n   * Plot Series or DataFrame as violinplot.\n   * Uses Plotly library as backend, so supports Plotly's configuration parameters\n   * @param plotConfig configuration options for making Plots, supports Plotly.js Config and Layout parameters.\n   */\n  PlotlyLib.prototype.violin = function (plotConfig) {\n    var _plotConfig = this.getPlotConfig(plotConfig);\n    (0, index_1.violinPlot)(this.ndframe, this.divId, _plotConfig, Plotly);\n  };\n  /**\n   * Plot Series or DataFrame as table.\n   * Uses Plotly library as backend, so supports Plotly's configuration parameters\n   * @param plotConfig configuration options for making Plots, supports Plotly.js Config and Layout parameters.\n   */\n  PlotlyLib.prototype.table = function (plotConfig) {\n    var _plotConfig = this.getPlotConfig(plotConfig);\n    (0, index_1.tablePlot)(this.ndframe, this.divId, _plotConfig, Plotly);\n  };\n  return PlotlyLib;\n}();\nexports.PlotlyLib = PlotlyLib;","map":{"version":3,"names":["Object","defineProperty","exports","value","PlotlyLib","index_1","require","Plotly","window","ndframe","divId","prototype","getPlotConfig","plotConfig","_plotConfig","config","layout","line","linePlot","bar","barPlot","scatter","scatterPlot","hist","histPlot","pie","piePlot","box","boxPlot","violin","violinPlot","table","tablePlot"],"sources":["/Users/omarbailey/node_modules/danfojs/dist/danfojs-base/plotting/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PlotlyLib = void 0;\n/**\n*  @license\n* Copyright 2022 JsData. All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n* ==========================================================================\n*/\nvar index_1 = require(\"./plotly/index\");\nvar Plotly;\nif (typeof window !== \"undefined\") {\n    //check if in browser environment and require \"plotly.js-dist-min\" module\n    Plotly = require(\"plotly.js-dist-min\");\n}\nvar PlotlyLib = /** @class */ (function () {\n    function PlotlyLib(ndframe, divId) {\n        this.ndframe = ndframe;\n        this.divId = divId;\n    }\n    PlotlyLib.prototype.getPlotConfig = function (plotConfig) {\n        var _plotConfig = {\n            config: plotConfig && plotConfig.config ? plotConfig.config : {},\n            layout: plotConfig && plotConfig.layout ? plotConfig.layout : {}\n        };\n        return _plotConfig;\n    };\n    /**\n     * Plot Series or DataFrame as lines.\n     * Uses Plotly library as backend, so supports Plotly's configuration parameters\n     * @param plotConfig configuration options for making Plots, supports Plotly.js Config and Layout parameters.\n    */\n    PlotlyLib.prototype.line = function (plotConfig) {\n        var _plotConfig = this.getPlotConfig(plotConfig);\n        (0, index_1.linePlot)(this.ndframe, this.divId, _plotConfig, Plotly);\n    };\n    /**\n     * Plot Series or DataFrame as bars.\n     * Uses Plotly library as backend, so supports Plotly's configuration parameters\n     * @param plotConfig configuration options for making Plots, supports Plotly.js Config and Layout parameters.\n    */\n    PlotlyLib.prototype.bar = function (plotConfig) {\n        var _plotConfig = this.getPlotConfig(plotConfig);\n        (0, index_1.barPlot)(this.ndframe, this.divId, _plotConfig, Plotly);\n    };\n    /**\n     * Plot Series or DataFrame as scatter.\n     * Uses Plotly library as backend, so supports Plotly's configuration parameters\n     * @param plotConfig configuration options for making Plots, supports Plotly.js Config and Layout parameters.\n    */\n    PlotlyLib.prototype.scatter = function (plotConfig) {\n        var _plotConfig = this.getPlotConfig(plotConfig);\n        (0, index_1.scatterPlot)(this.ndframe, this.divId, _plotConfig, Plotly);\n    };\n    /**\n     * Plot Series or DataFrame as histogram.\n     * Uses Plotly library as backend, so supports Plotly's configuration parameters\n     * @param plotConfig configuration options for making Plots, supports Plotly.js Config and Layout parameters.\n    */\n    PlotlyLib.prototype.hist = function (plotConfig) {\n        var _plotConfig = this.getPlotConfig(plotConfig);\n        (0, index_1.histPlot)(this.ndframe, this.divId, _plotConfig, Plotly);\n    };\n    /**\n     * Plot Series or DataFrame as pie.\n     * Uses Plotly library as backend, so supports Plotly's configuration parameters\n     * @param plotConfig configuration options for making Plots, supports Plotly.js Config and Layout parameters.\n    */\n    PlotlyLib.prototype.pie = function (plotConfig) {\n        var _plotConfig = this.getPlotConfig(plotConfig);\n        (0, index_1.piePlot)(this.ndframe, this.divId, _plotConfig, Plotly);\n    };\n    /**\n     * Plot Series or DataFrame as boxplot.\n     * Uses Plotly library as backend, so supports Plotly's configuration parameters\n     * @param plotConfig configuration options for making Plots, supports Plotly.js Config and Layout parameters.\n    */\n    PlotlyLib.prototype.box = function (plotConfig) {\n        var _plotConfig = this.getPlotConfig(plotConfig);\n        (0, index_1.boxPlot)(this.ndframe, this.divId, _plotConfig, Plotly);\n    };\n    /**\n     * Plot Series or DataFrame as violinplot.\n     * Uses Plotly library as backend, so supports Plotly's configuration parameters\n     * @param plotConfig configuration options for making Plots, supports Plotly.js Config and Layout parameters.\n     */\n    PlotlyLib.prototype.violin = function (plotConfig) {\n        var _plotConfig = this.getPlotConfig(plotConfig);\n        (0, index_1.violinPlot)(this.ndframe, this.divId, _plotConfig, Plotly);\n    };\n    /**\n     * Plot Series or DataFrame as table.\n     * Uses Plotly library as backend, so supports Plotly's configuration parameters\n     * @param plotConfig configuration options for making Plots, supports Plotly.js Config and Layout parameters.\n     */\n    PlotlyLib.prototype.table = function (plotConfig) {\n        var _plotConfig = this.getPlotConfig(plotConfig);\n        (0, index_1.tablePlot)(this.ndframe, this.divId, _plotConfig, Plotly);\n    };\n    return PlotlyLib;\n}());\nexports.PlotlyLib = PlotlyLib;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}