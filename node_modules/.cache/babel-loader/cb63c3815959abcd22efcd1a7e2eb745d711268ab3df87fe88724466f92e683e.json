{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createBitXor = void 0;\nvar _bitwise = require(\"../../utils/bignumber/bitwise.js\");\nvar _algorithm = require(\"../../type/matrix/utils/algorithm03.js\");\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm07.js\");\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm12.js\");\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm13.js\");\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm14.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar _index = require(\"../../plain/number/index.js\");\nvar name = 'bitXor';\nvar dependencies = ['typed', 'matrix', 'DenseMatrix'];\nvar createBitXor = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    matrix = _ref.matrix,\n    DenseMatrix = _ref.DenseMatrix;\n  var algorithm03 = (0, _algorithm.createAlgorithm03)({\n    typed: typed\n  });\n  var algorithm07 = (0, _algorithm2.createAlgorithm07)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm12 = (0, _algorithm3.createAlgorithm12)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm13 = (0, _algorithm4.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm5.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Bitwise XOR two values, `x ^ y`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.bitXor(x, y)\n   *\n   * Examples:\n   *\n   *    math.bitXor(1, 2)               // returns number 3\n   *\n   *    math.bitXor([2, 3, 4], 4)       // returns Array [6, 7, 0]\n   *\n   * See also:\n   *\n   *    bitAnd, bitNot, bitOr, leftShift, rightArithShift, rightLogShift\n   *\n   * @param  {number | BigNumber | Array | Matrix} x First value to xor\n   * @param  {number | BigNumber | Array | Matrix} y Second value to xor\n   * @return {number | BigNumber | Array | Matrix} XOR of `x` and `y`\n   */\n\n  return typed(name, {\n    'number, number': _index.bitXorNumber,\n    'BigNumber, BigNumber': _bitwise.bitXor,\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nexports.createBitXor = createBitXor;","map":{"version":3,"names":["Object","defineProperty","exports","value","createBitXor","_bitwise","require","_algorithm","_algorithm2","_algorithm3","_algorithm4","_algorithm5","_factory","_index","name","dependencies","factory","_ref","typed","matrix","DenseMatrix","algorithm03","createAlgorithm03","algorithm07","createAlgorithm07","algorithm12","createAlgorithm12","algorithm13","createAlgorithm13","algorithm14","createAlgorithm14","bitXorNumber","bitXor","SparseMatrixSparseMatrix","x","y","SparseMatrixDenseMatrix","DenseMatrixSparseMatrix","DenseMatrixDenseMatrix","ArrayArray","valueOf","ArrayMatrix","MatrixArray","SparseMatrixAny","DenseMatrixAny","anySparseMatrix","anyDenseMatrix","ArrayAny","anyArray"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/function/bitwise/bitXor.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createBitXor = void 0;\n\nvar _bitwise = require(\"../../utils/bignumber/bitwise.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm03.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm07.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm12.js\");\n\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _index = require(\"../../plain/number/index.js\");\n\nvar name = 'bitXor';\nvar dependencies = ['typed', 'matrix', 'DenseMatrix'];\nvar createBitXor = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      DenseMatrix = _ref.DenseMatrix;\n  var algorithm03 = (0, _algorithm.createAlgorithm03)({\n    typed: typed\n  });\n  var algorithm07 = (0, _algorithm2.createAlgorithm07)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm12 = (0, _algorithm3.createAlgorithm12)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm13 = (0, _algorithm4.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm5.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Bitwise XOR two values, `x ^ y`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.bitXor(x, y)\n   *\n   * Examples:\n   *\n   *    math.bitXor(1, 2)               // returns number 3\n   *\n   *    math.bitXor([2, 3, 4], 4)       // returns Array [6, 7, 0]\n   *\n   * See also:\n   *\n   *    bitAnd, bitNot, bitOr, leftShift, rightArithShift, rightLogShift\n   *\n   * @param  {number | BigNumber | Array | Matrix} x First value to xor\n   * @param  {number | BigNumber | Array | Matrix} y Second value to xor\n   * @return {number | BigNumber | Array | Matrix} XOR of `x` and `y`\n   */\n\n  return typed(name, {\n    'number, number': _index.bitXorNumber,\n    'BigNumber, BigNumber': _bitwise.bitXor,\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nexports.createBitXor = createBitXor;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}