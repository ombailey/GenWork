{"ast":null,"code":"var _jsxFileName = \"/Users/omarbailey/Documents/Coding/React/workout-generator/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport workouts from \"./workouts.json\";\nimport sets from \"./workoutsets.json\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDumbbell, faPersonRays, faListOl } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"GenWork\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Generator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nfunction Generator() {\n  _s();\n  const [workoutList, changeWorkoutList] = useState();\n  const randomize = () => {\n    // // Error Message\n    // if (\n    //   document.querySelector(\".num-exercises\").value === \"\" ||\n    //   document.querySelectorAll(\".body-part\").forEach((item) => item.checked)\n    //     .length == 0\n    // ) {\n    //   document.querySelector(\".error\").style.visibility = \"visible\";\n    // }\n    // Get body parts to workout and num of exercises for each body part\n    let bodyParts = [];\n    let num = document.querySelector(\".num-exercises\").value;\n    let count = 0;\n    let exercises = [];\n    let workout = \"\";\n    document.querySelectorAll(\".body-part\").forEach(part => {\n      if (part.checked) bodyParts.push(part.value);\n    });\n\n    // Generate random workout\n    for (let part of bodyParts) {\n      while (count < num) {\n        var exercise = workouts[part][Math.floor(Math.random() * workouts[part].length)];\n        var inside = true;\n        while (inside) {\n          if (exercises.includes(exercise)) {\n            exercise = workouts[part][Math.floor(Math.random() * workouts[part].length)];\n          } else {\n            exercises.push(exercise);\n            inside = false;\n          }\n        }\n        count++;\n      }\n      let workoutSet = sets.sets[Math.floor(Math.random() * sets.sets.length)];\n      workout += exercises.join(\"\\n\") + \"\\n\\n\" + `${workoutSet}` + \"\\n\\n\";\n      count = 0;\n      exercises = [];\n      workoutSet = \"\";\n    }\n    changeWorkoutList(workout);\n\n    // Reset input values back to empty\n    document.querySelectorAll(\".body-part\").forEach(item => item.checked = false);\n    document.querySelector(\".num-exercises\").value = \"\";\n    if (document.querySelector(\".error\").style.visibility = \"visible\") document.querySelector(\".error\").style.visibility = \"hidden\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"generator-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-exercises\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-titles\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPersonRays,\n          className: \"form-imgs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), \" Body Part(s) to Workout\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: \"abs\",\n          className: \"body-part\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), \"Abs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: \"back\",\n          className: \"body-part\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), \"Back\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: \"biceps\",\n          className: \"body-part\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), \"Biceps\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: \"chest\",\n          className: \"body-part\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), \"Chest\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: \"legs\",\n          className: \"body-part\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), \"Legs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: \"shoulders\",\n          className: \"body-part\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), \"Shoulders\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: \"triceps\",\n          className: \"body-part\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), \"Triceps\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-count\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-titles\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faListOl,\n          className: \"form-imgs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), \" Number Of Exercises\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"1\",\n        size: 1,\n        min: 1,\n        max: 8,\n        className: \"num-exercises\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: randomize,\n      children: [\"Generate \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faDumbbell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: \"Error: Invalid Values\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: workoutList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Generator, \"x1uwwGV/ix7XHk7JL3h/RBPyreM=\");\n_c2 = Generator;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Generator\");","map":{"version":3,"names":["workouts","sets","useState","FontAwesomeIcon","faDumbbell","faPersonRays","faListOl","App","Generator","workoutList","changeWorkoutList","randomize","bodyParts","num","document","querySelector","value","count","exercises","workout","querySelectorAll","forEach","part","checked","push","exercise","Math","floor","random","length","inside","includes","workoutSet","join","item","style","visibility"],"sources":["/Users/omarbailey/Documents/Coding/React/workout-generator/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport workouts from \"./workouts.json\";\nimport sets from \"./workoutsets.json\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faDumbbell,\n  faPersonRays,\n  faListOl,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction App() {\n  return (\n    <div>\n      <h1 className=\"title\">GenWork</h1>\n      <Generator />\n    </div>\n  );\n}\n\nfunction Generator() {\n  const [workoutList, changeWorkoutList] = useState();\n\n  const randomize = () => {\n    // // Error Message\n    // if (\n    //   document.querySelector(\".num-exercises\").value === \"\" ||\n    //   document.querySelectorAll(\".body-part\").forEach((item) => item.checked)\n    //     .length == 0\n    // ) {\n    //   document.querySelector(\".error\").style.visibility = \"visible\";\n    // }\n    // Get body parts to workout and num of exercises for each body part\n    let bodyParts = [];\n    let num = document.querySelector(\".num-exercises\").value;\n    let count = 0;\n    let exercises = [];\n    let workout = \"\";\n    document.querySelectorAll(\".body-part\").forEach((part) => {\n      if (part.checked) bodyParts.push(part.value);\n    });\n\n    // Generate random workout\n    for (let part of bodyParts) {\n      while (count < num) {\n        var exercise =\n          workouts[part][Math.floor(Math.random() * workouts[part].length)];\n        var inside = true;\n\n        while (inside) {\n          if (exercises.includes(exercise)) {\n            exercise =\n              workouts[part][Math.floor(Math.random() * workouts[part].length)];\n          } else {\n            exercises.push(exercise);\n            inside = false;\n          }\n        }\n        count++;\n      }\n      let workoutSet = sets.sets[Math.floor(Math.random() * sets.sets.length)];\n      workout += exercises.join(\"\\n\") + \"\\n\\n\" + `${workoutSet}` + \"\\n\\n\";\n      count = 0;\n      exercises = [];\n      workoutSet = \"\";\n    }\n    changeWorkoutList(workout);\n\n    // Reset input values back to empty\n    document\n      .querySelectorAll(\".body-part\")\n      .forEach((item) => (item.checked = false));\n    document.querySelector(\".num-exercises\").value = \"\";\n    if ((document.querySelector(\".error\").style.visibility = \"visible\"))\n      document.querySelector(\".error\").style.visibility = \"hidden\";\n  };\n\n  return (\n    <div id=\"generator-div\">\n      <div className=\"body-exercises\">\n        <h2 className=\"form-titles\">\n          <FontAwesomeIcon icon={faPersonRays} className=\"form-imgs\" /> Body\n          Part(s) to Workout\n        </h2>\n\n        <label>\n          <input type=\"checkbox\" value=\"abs\" className=\"body-part\" />\n          Abs\n        </label>\n        <label>\n          <input type=\"checkbox\" value=\"back\" className=\"body-part\" />\n          Back\n        </label>\n        <label>\n          <input type=\"checkbox\" value=\"biceps\" className=\"body-part\" />\n          Biceps\n        </label>\n        <label>\n          <input type=\"checkbox\" value=\"chest\" className=\"body-part\" />\n          Chest\n        </label>\n        <label>\n          <input type=\"checkbox\" value=\"legs\" className=\"body-part\" />\n          Legs\n        </label>\n        <label>\n          <input type=\"checkbox\" value=\"shoulders\" className=\"body-part\" />\n          Shoulders\n        </label>\n        <label>\n          <input type=\"checkbox\" value=\"triceps\" className=\"body-part\" />\n          Triceps\n        </label>\n      </div>\n      <div className=\"exercise-count\">\n        <h2 className=\"form-titles\">\n          <FontAwesomeIcon icon={faListOl} className=\"form-imgs\" /> Number Of\n          Exercises\n        </h2>\n        <input\n          type=\"number\"\n          placeholder=\"1\"\n          size={1}\n          min={1}\n          max={8}\n          className=\"num-exercises\"\n          required\n        ></input>\n      </div>\n      <button onClick={randomize}>\n        Generate <FontAwesomeIcon icon={faDumbbell} />\n      </button>\n      <p className=\"error\">Error: Invalid Values</p>\n      <pre>{workoutList}</pre>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SACEC,UAAU,EACVC,YAAY,EACZC,QAAQ,QACH,mCAAmC;AAAC;AAE3C,SAASC,GAAG,GAAG;EACb,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,OAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eAClC,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEV;AAAC,KAPQA,GAAG;AASZ,SAASC,SAAS,GAAG;EAAA;EACnB,MAAM,CAACC,WAAW,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,EAAE;EAEnD,MAAMS,SAAS,GAAG,MAAM;IACtB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAIC,SAAS,GAAG,EAAE;IAClB,IAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC,CAACC,KAAK;IACxD,IAAIC,KAAK,GAAG,CAAC;IACb,IAAIC,SAAS,GAAG,EAAE;IAClB,IAAIC,OAAO,GAAG,EAAE;IAChBL,QAAQ,CAACM,gBAAgB,CAAC,YAAY,CAAC,CAACC,OAAO,CAAEC,IAAI,IAAK;MACxD,IAAIA,IAAI,CAACC,OAAO,EAAEX,SAAS,CAACY,IAAI,CAACF,IAAI,CAACN,KAAK,CAAC;IAC9C,CAAC,CAAC;;IAEF;IACA,KAAK,IAAIM,IAAI,IAAIV,SAAS,EAAE;MAC1B,OAAOK,KAAK,GAAGJ,GAAG,EAAE;QAClB,IAAIY,QAAQ,GACVzB,QAAQ,CAACsB,IAAI,CAAC,CAACI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG5B,QAAQ,CAACsB,IAAI,CAAC,CAACO,MAAM,CAAC,CAAC;QACnE,IAAIC,MAAM,GAAG,IAAI;QAEjB,OAAOA,MAAM,EAAE;UACb,IAAIZ,SAAS,CAACa,QAAQ,CAACN,QAAQ,CAAC,EAAE;YAChCA,QAAQ,GACNzB,QAAQ,CAACsB,IAAI,CAAC,CAACI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG5B,QAAQ,CAACsB,IAAI,CAAC,CAACO,MAAM,CAAC,CAAC;UACrE,CAAC,MAAM;YACLX,SAAS,CAACM,IAAI,CAACC,QAAQ,CAAC;YACxBK,MAAM,GAAG,KAAK;UAChB;QACF;QACAb,KAAK,EAAE;MACT;MACA,IAAIe,UAAU,GAAG/B,IAAI,CAACA,IAAI,CAACyB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG3B,IAAI,CAACA,IAAI,CAAC4B,MAAM,CAAC,CAAC;MACxEV,OAAO,IAAID,SAAS,CAACe,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM,GAAI,GAAED,UAAW,EAAC,GAAG,MAAM;MACnEf,KAAK,GAAG,CAAC;MACTC,SAAS,GAAG,EAAE;MACdc,UAAU,GAAG,EAAE;IACjB;IACAtB,iBAAiB,CAACS,OAAO,CAAC;;IAE1B;IACAL,QAAQ,CACLM,gBAAgB,CAAC,YAAY,CAAC,CAC9BC,OAAO,CAAEa,IAAI,IAAMA,IAAI,CAACX,OAAO,GAAG,KAAM,CAAC;IAC5CT,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC,CAACC,KAAK,GAAG,EAAE;IACnD,IAAKF,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAACoB,KAAK,CAACC,UAAU,GAAG,SAAS,EAChEtB,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAACoB,KAAK,CAACC,UAAU,GAAG,QAAQ;EAChE,CAAC;EAED,oBACE;IAAK,EAAE,EAAC,eAAe;IAAA,wBACrB;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC7B;QAAI,SAAS,EAAC,aAAa;QAAA,wBACzB,QAAC,eAAe;UAAC,IAAI,EAAE/B,YAAa;UAAC,SAAS,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAE1D,eAEL;QAAA,wBACE;UAAO,IAAI,EAAC,UAAU;UAAC,KAAK,EAAC,KAAK;UAAC,SAAS,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAErD,eACR;QAAA,wBACE;UAAO,IAAI,EAAC,UAAU;UAAC,KAAK,EAAC,MAAM;UAAC,SAAS,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAEtD,eACR;QAAA,wBACE;UAAO,IAAI,EAAC,UAAU;UAAC,KAAK,EAAC,QAAQ;UAAC,SAAS,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAExD,eACR;QAAA,wBACE;UAAO,IAAI,EAAC,UAAU;UAAC,KAAK,EAAC,OAAO;UAAC,SAAS,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAEvD,eACR;QAAA,wBACE;UAAO,IAAI,EAAC,UAAU;UAAC,KAAK,EAAC,MAAM;UAAC,SAAS,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAEtD,eACR;QAAA,wBACE;UAAO,IAAI,EAAC,UAAU;UAAC,KAAK,EAAC,WAAW;UAAC,SAAS,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAE3D,eACR;QAAA,wBACE;UAAO,IAAI,EAAC,UAAU;UAAC,KAAK,EAAC,SAAS;UAAC,SAAS,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAEzD;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC7B;QAAI,SAAS,EAAC,aAAa;QAAA,wBACzB,QAAC,eAAe;UAAC,IAAI,EAAEC,QAAS;UAAC,SAAS,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAEtD,eACL;QACE,IAAI,EAAC,QAAQ;QACb,WAAW,EAAC,GAAG;QACf,IAAI,EAAE,CAAE;QACR,GAAG,EAAE,CAAE;QACP,GAAG,EAAE,CAAE;QACP,SAAS,EAAC,eAAe;QACzB,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA,QACL,eACN;MAAQ,OAAO,EAAEK,SAAU;MAAA,qCAChB,QAAC,eAAe;QAAC,IAAI,EAAEP;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACvC,eACT;MAAG,SAAS,EAAC,OAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA0B,eAC9C;MAAA,UAAMK;IAAW;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACpB;AAEV;AAAC,GApHQD,SAAS;AAAA,MAATA,SAAS;AAsHlB,eAAeD,GAAG;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}