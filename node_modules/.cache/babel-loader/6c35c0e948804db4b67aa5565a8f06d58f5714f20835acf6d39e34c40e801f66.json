{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateTableData = void 0;\nconst utils_1 = require(\"./utils\");\nconst validateTableData = rows => {\n  if (!Array.isArray(rows)) {\n    throw new TypeError('Table data must be an array.');\n  }\n  if (rows.length === 0) {\n    throw new Error('Table must define at least one row.');\n  }\n  if (rows[0].length === 0) {\n    throw new Error('Table must define at least one column.');\n  }\n  const columnNumber = rows[0].length;\n  for (const row of rows) {\n    if (!Array.isArray(row)) {\n      throw new TypeError('Table row data must be an array.');\n    }\n    if (row.length !== columnNumber) {\n      throw new Error('Table must have a consistent number of cells.');\n    }\n    for (const cell of row) {\n      // eslint-disable-next-line no-control-regex\n      if (/[\\u0001-\\u0006\\u0008\\u0009\\u000B-\\u001A]/.test(utils_1.normalizeString(String(cell)))) {\n        throw new Error('Table data must not contain control characters.');\n      }\n    }\n  }\n};\nexports.validateTableData = validateTableData;","map":{"version":3,"names":["Object","defineProperty","exports","value","validateTableData","utils_1","require","rows","Array","isArray","TypeError","length","Error","columnNumber","row","cell","test","normalizeString","String"],"sources":["/Users/omarbailey/node_modules/table/dist/validateTableData.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateTableData = void 0;\nconst utils_1 = require(\"./utils\");\nconst validateTableData = (rows) => {\n    if (!Array.isArray(rows)) {\n        throw new TypeError('Table data must be an array.');\n    }\n    if (rows.length === 0) {\n        throw new Error('Table must define at least one row.');\n    }\n    if (rows[0].length === 0) {\n        throw new Error('Table must define at least one column.');\n    }\n    const columnNumber = rows[0].length;\n    for (const row of rows) {\n        if (!Array.isArray(row)) {\n            throw new TypeError('Table row data must be an array.');\n        }\n        if (row.length !== columnNumber) {\n            throw new Error('Table must have a consistent number of cells.');\n        }\n        for (const cell of row) {\n            // eslint-disable-next-line no-control-regex\n            if (/[\\u0001-\\u0006\\u0008\\u0009\\u000B-\\u001A]/.test(utils_1.normalizeString(String(cell)))) {\n                throw new Error('Table data must not contain control characters.');\n            }\n        }\n    }\n};\nexports.validateTableData = validateTableData;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,iBAAiB,GAAG,KAAK,CAAC;AAClC,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMF,iBAAiB,GAAIG,IAAI,IAAK;EAChC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;IACtB,MAAM,IAAIG,SAAS,CAAC,8BAA8B,CAAC;EACvD;EACA,IAAIH,IAAI,CAACI,MAAM,KAAK,CAAC,EAAE;IACnB,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;EAC1D;EACA,IAAIL,IAAI,CAAC,CAAC,CAAC,CAACI,MAAM,KAAK,CAAC,EAAE;IACtB,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;EAC7D;EACA,MAAMC,YAAY,GAAGN,IAAI,CAAC,CAAC,CAAC,CAACI,MAAM;EACnC,KAAK,MAAMG,GAAG,IAAIP,IAAI,EAAE;IACpB,IAAI,CAACC,KAAK,CAACC,OAAO,CAACK,GAAG,CAAC,EAAE;MACrB,MAAM,IAAIJ,SAAS,CAAC,kCAAkC,CAAC;IAC3D;IACA,IAAII,GAAG,CAACH,MAAM,KAAKE,YAAY,EAAE;MAC7B,MAAM,IAAID,KAAK,CAAC,+CAA+C,CAAC;IACpE;IACA,KAAK,MAAMG,IAAI,IAAID,GAAG,EAAE;MACpB;MACA,IAAI,0CAA0C,CAACE,IAAI,CAACX,OAAO,CAACY,eAAe,CAACC,MAAM,CAACH,IAAI,CAAC,CAAC,CAAC,EAAE;QACxF,MAAM,IAAIH,KAAK,CAAC,iDAAiD,CAAC;MACtE;IACJ;EACJ;AACJ,CAAC;AACDV,OAAO,CAACE,iBAAiB,GAAGA,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}