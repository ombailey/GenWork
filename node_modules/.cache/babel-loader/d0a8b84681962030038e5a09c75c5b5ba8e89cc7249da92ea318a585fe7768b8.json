{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateCellHeight = void 0;\nconst wrapCell_1 = require(\"./wrapCell\");\n/**\n * Calculates height of cell content in regard to its width and word wrapping.\n */\nconst calculateCellHeight = function (value, columnWidth) {\n  let useWrapWord = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return wrapCell_1.wrapCell(value, columnWidth, useWrapWord).length;\n};\nexports.calculateCellHeight = calculateCellHeight;","map":{"version":3,"names":["Object","defineProperty","exports","value","calculateCellHeight","wrapCell_1","require","columnWidth","useWrapWord","wrapCell","length"],"sources":["/Users/omarbailey/node_modules/table/dist/calculateCellHeight.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateCellHeight = void 0;\nconst wrapCell_1 = require(\"./wrapCell\");\n/**\n * Calculates height of cell content in regard to its width and word wrapping.\n */\nconst calculateCellHeight = (value, columnWidth, useWrapWord = false) => {\n    return wrapCell_1.wrapCell(value, columnWidth, useWrapWord).length;\n};\nexports.calculateCellHeight = calculateCellHeight;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,mBAAmB,GAAG,KAAK,CAAC;AACpC,MAAMC,UAAU,GAAGC,OAAO,CAAC,YAAY,CAAC;AACxC;AACA;AACA;AACA,MAAMF,mBAAmB,GAAG,UAACD,KAAK,EAAEI,WAAW,EAA0B;EAAA,IAAxBC,WAAW,uEAAG,KAAK;EAChE,OAAOH,UAAU,CAACI,QAAQ,CAACN,KAAK,EAAEI,WAAW,EAAEC,WAAW,CAAC,CAACE,MAAM;AACtE,CAAC;AACDR,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}