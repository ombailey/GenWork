{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.drawBorderTop = exports.drawBorderJoin = exports.drawBorderBottom = exports.drawBorder = exports.createTableBorderGetter = void 0;\nconst drawContent_1 = require(\"./drawContent\");\nconst drawBorder = (columnWidths, config) => {\n  const {\n    separator,\n    drawVerticalLine\n  } = config;\n  const columns = columnWidths.map(size => {\n    return config.separator.body.repeat(size);\n  });\n  return drawContent_1.drawContent(columns, {\n    drawSeparator: drawVerticalLine,\n    separatorGetter: (index, columnCount) => {\n      if (index === 0) {\n        return separator.left;\n      }\n      if (index === columnCount) {\n        return separator.right;\n      }\n      return separator.join;\n    }\n  }) + '\\n';\n};\nexports.drawBorder = drawBorder;\nconst drawBorderTop = (columnWidths, config) => {\n  const result = drawBorder(columnWidths, {\n    ...config,\n    separator: {\n      body: config.border.topBody,\n      join: config.border.topJoin,\n      left: config.border.topLeft,\n      right: config.border.topRight\n    }\n  });\n  if (result === '\\n') {\n    return '';\n  }\n  return result;\n};\nexports.drawBorderTop = drawBorderTop;\nconst drawBorderJoin = (columnWidths, config) => {\n  return drawBorder(columnWidths, {\n    ...config,\n    separator: {\n      body: config.border.joinBody,\n      join: config.border.joinJoin,\n      left: config.border.joinLeft,\n      right: config.border.joinRight\n    }\n  });\n};\nexports.drawBorderJoin = drawBorderJoin;\nconst drawBorderBottom = (columnWidths, config) => {\n  return drawBorder(columnWidths, {\n    ...config,\n    separator: {\n      body: config.border.bottomBody,\n      join: config.border.bottomJoin,\n      left: config.border.bottomLeft,\n      right: config.border.bottomRight\n    }\n  });\n};\nexports.drawBorderBottom = drawBorderBottom;\nconst createTableBorderGetter = (columnWidths, config) => {\n  return (index, size) => {\n    if (!config.header) {\n      if (index === 0) {\n        return drawBorderTop(columnWidths, config);\n      }\n      if (index === size) {\n        return drawBorderBottom(columnWidths, config);\n      }\n      return drawBorderJoin(columnWidths, config);\n    }\n    // Deal with the header\n    if (index === 0) {\n      return drawBorderTop(columnWidths, {\n        ...config,\n        border: {\n          ...config.border,\n          topJoin: config.border.topBody\n        }\n      });\n    }\n    if (index === 1) {\n      return drawBorderJoin(columnWidths, {\n        ...config,\n        border: {\n          ...config.border,\n          joinJoin: config.border.headerJoin\n        }\n      });\n    }\n    if (index === size) {\n      return drawBorderBottom(columnWidths, config);\n    }\n    return drawBorderJoin(columnWidths, config);\n  };\n};\nexports.createTableBorderGetter = createTableBorderGetter;","map":{"version":3,"names":["Object","defineProperty","exports","value","drawBorderTop","drawBorderJoin","drawBorderBottom","drawBorder","createTableBorderGetter","drawContent_1","require","columnWidths","config","separator","drawVerticalLine","columns","map","size","body","repeat","drawContent","drawSeparator","separatorGetter","index","columnCount","left","right","join","result","border","topBody","topJoin","topLeft","topRight","joinBody","joinJoin","joinLeft","joinRight","bottomBody","bottomJoin","bottomLeft","bottomRight","header","headerJoin"],"sources":["/Users/omarbailey/node_modules/table/dist/drawBorder.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.drawBorderTop = exports.drawBorderJoin = exports.drawBorderBottom = exports.drawBorder = exports.createTableBorderGetter = void 0;\nconst drawContent_1 = require(\"./drawContent\");\nconst drawBorder = (columnWidths, config) => {\n    const { separator, drawVerticalLine } = config;\n    const columns = columnWidths.map((size) => {\n        return config.separator.body.repeat(size);\n    });\n    return drawContent_1.drawContent(columns, {\n        drawSeparator: drawVerticalLine,\n        separatorGetter: (index, columnCount) => {\n            if (index === 0) {\n                return separator.left;\n            }\n            if (index === columnCount) {\n                return separator.right;\n            }\n            return separator.join;\n        },\n    }) + '\\n';\n};\nexports.drawBorder = drawBorder;\nconst drawBorderTop = (columnWidths, config) => {\n    const result = drawBorder(columnWidths, {\n        ...config,\n        separator: {\n            body: config.border.topBody,\n            join: config.border.topJoin,\n            left: config.border.topLeft,\n            right: config.border.topRight,\n        },\n    });\n    if (result === '\\n') {\n        return '';\n    }\n    return result;\n};\nexports.drawBorderTop = drawBorderTop;\nconst drawBorderJoin = (columnWidths, config) => {\n    return drawBorder(columnWidths, {\n        ...config,\n        separator: {\n            body: config.border.joinBody,\n            join: config.border.joinJoin,\n            left: config.border.joinLeft,\n            right: config.border.joinRight,\n        },\n    });\n};\nexports.drawBorderJoin = drawBorderJoin;\nconst drawBorderBottom = (columnWidths, config) => {\n    return drawBorder(columnWidths, {\n        ...config,\n        separator: {\n            body: config.border.bottomBody,\n            join: config.border.bottomJoin,\n            left: config.border.bottomLeft,\n            right: config.border.bottomRight,\n        },\n    });\n};\nexports.drawBorderBottom = drawBorderBottom;\nconst createTableBorderGetter = (columnWidths, config) => {\n    return (index, size) => {\n        if (!config.header) {\n            if (index === 0) {\n                return drawBorderTop(columnWidths, config);\n            }\n            if (index === size) {\n                return drawBorderBottom(columnWidths, config);\n            }\n            return drawBorderJoin(columnWidths, config);\n        }\n        // Deal with the header\n        if (index === 0) {\n            return drawBorderTop(columnWidths, {\n                ...config,\n                border: {\n                    ...config.border,\n                    topJoin: config.border.topBody,\n                },\n            });\n        }\n        if (index === 1) {\n            return drawBorderJoin(columnWidths, {\n                ...config,\n                border: {\n                    ...config.border,\n                    joinJoin: config.border.headerJoin,\n                },\n            });\n        }\n        if (index === size) {\n            return drawBorderBottom(columnWidths, config);\n        }\n        return drawBorderJoin(columnWidths, config);\n    };\n};\nexports.createTableBorderGetter = createTableBorderGetter;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}