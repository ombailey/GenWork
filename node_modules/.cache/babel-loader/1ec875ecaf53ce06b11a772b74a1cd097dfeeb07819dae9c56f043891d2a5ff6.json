{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRealSymmetric = createRealSymmetric;\nvar _object = require(\"../../../utils/object.js\");\nfunction createRealSymmetric(_ref) {\n  var config = _ref.config,\n    addScalar = _ref.addScalar,\n    subtract = _ref.subtract,\n    abs = _ref.abs,\n    atan = _ref.atan,\n    cos = _ref.cos,\n    sin = _ref.sin,\n    multiplyScalar = _ref.multiplyScalar,\n    inv = _ref.inv,\n    bignumber = _ref.bignumber,\n    multiply = _ref.multiply,\n    add = _ref.add;\n\n  /**\n   * @param {number[] | BigNumber[]} arr\n   * @param {number} N\n   * @param {number} prec\n   * @param {'number' | 'BigNumber'} type\n   */\n  function main(arr, N) {\n    var prec = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : config.epsilon;\n    var type = arguments.length > 3 ? arguments[3] : undefined;\n    if (type === 'number') {\n      return diag(arr, prec);\n    }\n    if (type === 'BigNumber') {\n      return diagBig(arr, prec);\n    }\n    throw TypeError('Unsupported data type: ' + type);\n  } // diagonalization implementation for number (efficient)\n\n  function diag(x, precision) {\n    var N = x.length;\n    var e0 = Math.abs(precision / N);\n    var psi;\n    var Sij = new Array(N); // Sij is Identity Matrix\n\n    for (var i = 0; i < N; i++) {\n      Sij[i] = createArray(N, 0);\n      Sij[i][i] = 1.0;\n    } // initial error\n\n    var Vab = getAij(x);\n    while (Math.abs(Vab[1]) >= Math.abs(e0)) {\n      var _i = Vab[0][0];\n      var j = Vab[0][1];\n      psi = getTheta(x[_i][_i], x[j][j], x[_i][j]);\n      x = x1(x, psi, _i, j);\n      Sij = Sij1(Sij, psi, _i, j);\n      Vab = getAij(x);\n    }\n    var Ei = createArray(N, 0); // eigenvalues\n\n    for (var _i2 = 0; _i2 < N; _i2++) {\n      Ei[_i2] = x[_i2][_i2];\n    }\n    return sorting((0, _object.clone)(Ei), (0, _object.clone)(Sij));\n  } // diagonalization implementation for bigNumber\n\n  function diagBig(x, precision) {\n    var N = x.length;\n    var e0 = abs(precision / N);\n    var psi;\n    var Sij = new Array(N); // Sij is Identity Matrix\n\n    for (var i = 0; i < N; i++) {\n      Sij[i] = createArray(N, 0);\n      Sij[i][i] = 1.0;\n    } // initial error\n\n    var Vab = getAijBig(x);\n    while (abs(Vab[1]) >= abs(e0)) {\n      var _i3 = Vab[0][0];\n      var j = Vab[0][1];\n      psi = getThetaBig(x[_i3][_i3], x[j][j], x[_i3][j]);\n      x = x1Big(x, psi, _i3, j);\n      Sij = Sij1Big(Sij, psi, _i3, j);\n      Vab = getAijBig(x);\n    }\n    var Ei = createArray(N, 0); // eigenvalues\n\n    for (var _i4 = 0; _i4 < N; _i4++) {\n      Ei[_i4] = x[_i4][_i4];\n    } // return [clone(Ei), clone(Sij)]\n\n    return sorting((0, _object.clone)(Ei), (0, _object.clone)(Sij));\n  } // get angle\n\n  function getTheta(aii, ajj, aij) {\n    var denom = ajj - aii;\n    if (Math.abs(denom) <= config.epsilon) {\n      return Math.PI / 4.0;\n    } else {\n      return 0.5 * Math.atan(2.0 * aij / (ajj - aii));\n    }\n  } // get angle\n\n  function getThetaBig(aii, ajj, aij) {\n    var denom = subtract(ajj, aii);\n    if (abs(denom) <= config.epsilon) {\n      return bignumber(-1).acos().div(4);\n    } else {\n      return multiplyScalar(0.5, atan(multiply(2.0, aij, inv(denom))));\n    }\n  } // update eigvec\n\n  function Sij1(Sij, theta, i, j) {\n    var N = Sij.length;\n    var c = Math.cos(theta);\n    var s = Math.sin(theta);\n    var Ski = createArray(N, 0);\n    var Skj = createArray(N, 0);\n    for (var k = 0; k < N; k++) {\n      Ski[k] = c * Sij[k][i] - s * Sij[k][j];\n      Skj[k] = s * Sij[k][i] + c * Sij[k][j];\n    }\n    for (var _k = 0; _k < N; _k++) {\n      Sij[_k][i] = Ski[_k];\n      Sij[_k][j] = Skj[_k];\n    }\n    return Sij;\n  } // update eigvec for overlap\n\n  function Sij1Big(Sij, theta, i, j) {\n    var N = Sij.length;\n    var c = cos(theta);\n    var s = sin(theta);\n    var Ski = createArray(N, bignumber(0));\n    var Skj = createArray(N, bignumber(0));\n    for (var k = 0; k < N; k++) {\n      Ski[k] = subtract(multiplyScalar(c, Sij[k][i]), multiplyScalar(s, Sij[k][j]));\n      Skj[k] = addScalar(multiplyScalar(s, Sij[k][i]), multiplyScalar(c, Sij[k][j]));\n    }\n    for (var _k2 = 0; _k2 < N; _k2++) {\n      Sij[_k2][i] = Ski[_k2];\n      Sij[_k2][j] = Skj[_k2];\n    }\n    return Sij;\n  } // update matrix\n\n  function x1Big(Hij, theta, i, j) {\n    var N = Hij.length;\n    var c = bignumber(cos(theta));\n    var s = bignumber(sin(theta));\n    var c2 = multiplyScalar(c, c);\n    var s2 = multiplyScalar(s, s);\n    var Aki = createArray(N, bignumber(0));\n    var Akj = createArray(N, bignumber(0)); // 2cs Hij\n\n    var csHij = multiply(bignumber(2), c, s, Hij[i][j]); //  Aii\n\n    var Aii = addScalar(subtract(multiplyScalar(c2, Hij[i][i]), csHij), multiplyScalar(s2, Hij[j][j]));\n    var Ajj = add(multiplyScalar(s2, Hij[i][i]), csHij, multiplyScalar(c2, Hij[j][j])); // 0  to i\n\n    for (var k = 0; k < N; k++) {\n      Aki[k] = subtract(multiplyScalar(c, Hij[i][k]), multiplyScalar(s, Hij[j][k]));\n      Akj[k] = addScalar(multiplyScalar(s, Hij[i][k]), multiplyScalar(c, Hij[j][k]));\n    } // Modify Hij\n\n    Hij[i][i] = Aii;\n    Hij[j][j] = Ajj;\n    Hij[i][j] = bignumber(0);\n    Hij[j][i] = bignumber(0); // 0  to i\n\n    for (var _k3 = 0; _k3 < N; _k3++) {\n      if (_k3 !== i && _k3 !== j) {\n        Hij[i][_k3] = Aki[_k3];\n        Hij[_k3][i] = Aki[_k3];\n        Hij[j][_k3] = Akj[_k3];\n        Hij[_k3][j] = Akj[_k3];\n      }\n    }\n    return Hij;\n  } // update matrix\n\n  function x1(Hij, theta, i, j) {\n    var N = Hij.length;\n    var c = Math.cos(theta);\n    var s = Math.sin(theta);\n    var c2 = c * c;\n    var s2 = s * s;\n    var Aki = createArray(N, 0);\n    var Akj = createArray(N, 0); //  Aii\n\n    var Aii = c2 * Hij[i][i] - 2 * c * s * Hij[i][j] + s2 * Hij[j][j];\n    var Ajj = s2 * Hij[i][i] + 2 * c * s * Hij[i][j] + c2 * Hij[j][j]; // 0  to i\n\n    for (var k = 0; k < N; k++) {\n      Aki[k] = c * Hij[i][k] - s * Hij[j][k];\n      Akj[k] = s * Hij[i][k] + c * Hij[j][k];\n    } // Modify Hij\n\n    Hij[i][i] = Aii;\n    Hij[j][j] = Ajj;\n    Hij[i][j] = 0;\n    Hij[j][i] = 0; // 0  to i\n\n    for (var _k4 = 0; _k4 < N; _k4++) {\n      if (_k4 !== i && _k4 !== j) {\n        Hij[i][_k4] = Aki[_k4];\n        Hij[_k4][i] = Aki[_k4];\n        Hij[j][_k4] = Akj[_k4];\n        Hij[_k4][j] = Akj[_k4];\n      }\n    }\n    return Hij;\n  } // get max off-diagonal value from Upper Diagonal\n\n  function getAij(Mij) {\n    var N = Mij.length;\n    var maxMij = 0;\n    var maxIJ = [0, 1];\n    for (var i = 0; i < N; i++) {\n      for (var j = i + 1; j < N; j++) {\n        if (Math.abs(maxMij) < Math.abs(Mij[i][j])) {\n          maxMij = Math.abs(Mij[i][j]);\n          maxIJ = [i, j];\n        }\n      }\n    }\n    return [maxIJ, maxMij];\n  } // get max off-diagonal value from Upper Diagonal\n\n  function getAijBig(Mij) {\n    var N = Mij.length;\n    var maxMij = 0;\n    var maxIJ = [0, 1];\n    for (var i = 0; i < N; i++) {\n      for (var j = i + 1; j < N; j++) {\n        if (abs(maxMij) < abs(Mij[i][j])) {\n          maxMij = abs(Mij[i][j]);\n          maxIJ = [i, j];\n        }\n      }\n    }\n    return [maxIJ, maxMij];\n  } // sort results\n\n  function sorting(E, S) {\n    var N = E.length;\n    var values = Array(N);\n    var vectors = Array(N);\n    for (var k = 0; k < N; k++) {\n      vectors[k] = Array(N);\n    }\n    for (var i = 0; i < N; i++) {\n      var minID = 0;\n      var minE = E[0];\n      for (var j = 0; j < E.length; j++) {\n        if (abs(E[j]) < abs(minE)) {\n          minID = j;\n          minE = E[minID];\n        }\n      }\n      values[i] = E.splice(minID, 1)[0];\n      for (var _k5 = 0; _k5 < N; _k5++) {\n        vectors[_k5][i] = S[_k5][minID];\n        S[_k5].splice(minID, 1);\n      }\n    }\n    return {\n      values: values,\n      vectors: vectors\n    };\n  }\n  /**\n   * Create an array of a certain size and fill all items with an initial value\n   * @param {number} size\n   * @param {number} value\n   * @return {number[]}\n   */\n\n  function createArray(size, value) {\n    // TODO: as soon as all browsers support Array.fill, use that instead (IE doesn't support it)\n    var array = new Array(size);\n    for (var i = 0; i < size; i++) {\n      array[i] = value;\n    }\n    return array;\n  }\n  return main;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","createRealSymmetric","_object","require","_ref","config","addScalar","subtract","abs","atan","cos","sin","multiplyScalar","inv","bignumber","multiply","add","main","arr","N","prec","arguments","length","undefined","epsilon","type","diag","diagBig","TypeError","x","precision","e0","Math","psi","Sij","Array","i","createArray","Vab","getAij","_i","j","getTheta","x1","Sij1","Ei","_i2","sorting","clone","getAijBig","_i3","getThetaBig","x1Big","Sij1Big","_i4","aii","ajj","aij","denom","PI","acos","div","theta","c","s","Ski","Skj","k","_k","_k2","Hij","c2","s2","Aki","Akj","csHij","Aii","Ajj","_k3","_k4","Mij","maxMij","maxIJ","E","S","values","vectors","minID","minE","splice","_k5","size","array"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/function/matrix/eigs/realSymetric.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRealSymmetric = createRealSymmetric;\n\nvar _object = require(\"../../../utils/object.js\");\n\nfunction createRealSymmetric(_ref) {\n  var config = _ref.config,\n      addScalar = _ref.addScalar,\n      subtract = _ref.subtract,\n      abs = _ref.abs,\n      atan = _ref.atan,\n      cos = _ref.cos,\n      sin = _ref.sin,\n      multiplyScalar = _ref.multiplyScalar,\n      inv = _ref.inv,\n      bignumber = _ref.bignumber,\n      multiply = _ref.multiply,\n      add = _ref.add;\n\n  /**\n   * @param {number[] | BigNumber[]} arr\n   * @param {number} N\n   * @param {number} prec\n   * @param {'number' | 'BigNumber'} type\n   */\n  function main(arr, N) {\n    var prec = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : config.epsilon;\n    var type = arguments.length > 3 ? arguments[3] : undefined;\n\n    if (type === 'number') {\n      return diag(arr, prec);\n    }\n\n    if (type === 'BigNumber') {\n      return diagBig(arr, prec);\n    }\n\n    throw TypeError('Unsupported data type: ' + type);\n  } // diagonalization implementation for number (efficient)\n\n\n  function diag(x, precision) {\n    var N = x.length;\n    var e0 = Math.abs(precision / N);\n    var psi;\n    var Sij = new Array(N); // Sij is Identity Matrix\n\n    for (var i = 0; i < N; i++) {\n      Sij[i] = createArray(N, 0);\n      Sij[i][i] = 1.0;\n    } // initial error\n\n\n    var Vab = getAij(x);\n\n    while (Math.abs(Vab[1]) >= Math.abs(e0)) {\n      var _i = Vab[0][0];\n      var j = Vab[0][1];\n      psi = getTheta(x[_i][_i], x[j][j], x[_i][j]);\n      x = x1(x, psi, _i, j);\n      Sij = Sij1(Sij, psi, _i, j);\n      Vab = getAij(x);\n    }\n\n    var Ei = createArray(N, 0); // eigenvalues\n\n    for (var _i2 = 0; _i2 < N; _i2++) {\n      Ei[_i2] = x[_i2][_i2];\n    }\n\n    return sorting((0, _object.clone)(Ei), (0, _object.clone)(Sij));\n  } // diagonalization implementation for bigNumber\n\n\n  function diagBig(x, precision) {\n    var N = x.length;\n    var e0 = abs(precision / N);\n    var psi;\n    var Sij = new Array(N); // Sij is Identity Matrix\n\n    for (var i = 0; i < N; i++) {\n      Sij[i] = createArray(N, 0);\n      Sij[i][i] = 1.0;\n    } // initial error\n\n\n    var Vab = getAijBig(x);\n\n    while (abs(Vab[1]) >= abs(e0)) {\n      var _i3 = Vab[0][0];\n      var j = Vab[0][1];\n      psi = getThetaBig(x[_i3][_i3], x[j][j], x[_i3][j]);\n      x = x1Big(x, psi, _i3, j);\n      Sij = Sij1Big(Sij, psi, _i3, j);\n      Vab = getAijBig(x);\n    }\n\n    var Ei = createArray(N, 0); // eigenvalues\n\n    for (var _i4 = 0; _i4 < N; _i4++) {\n      Ei[_i4] = x[_i4][_i4];\n    } // return [clone(Ei), clone(Sij)]\n\n\n    return sorting((0, _object.clone)(Ei), (0, _object.clone)(Sij));\n  } // get angle\n\n\n  function getTheta(aii, ajj, aij) {\n    var denom = ajj - aii;\n\n    if (Math.abs(denom) <= config.epsilon) {\n      return Math.PI / 4.0;\n    } else {\n      return 0.5 * Math.atan(2.0 * aij / (ajj - aii));\n    }\n  } // get angle\n\n\n  function getThetaBig(aii, ajj, aij) {\n    var denom = subtract(ajj, aii);\n\n    if (abs(denom) <= config.epsilon) {\n      return bignumber(-1).acos().div(4);\n    } else {\n      return multiplyScalar(0.5, atan(multiply(2.0, aij, inv(denom))));\n    }\n  } // update eigvec\n\n\n  function Sij1(Sij, theta, i, j) {\n    var N = Sij.length;\n    var c = Math.cos(theta);\n    var s = Math.sin(theta);\n    var Ski = createArray(N, 0);\n    var Skj = createArray(N, 0);\n\n    for (var k = 0; k < N; k++) {\n      Ski[k] = c * Sij[k][i] - s * Sij[k][j];\n      Skj[k] = s * Sij[k][i] + c * Sij[k][j];\n    }\n\n    for (var _k = 0; _k < N; _k++) {\n      Sij[_k][i] = Ski[_k];\n      Sij[_k][j] = Skj[_k];\n    }\n\n    return Sij;\n  } // update eigvec for overlap\n\n\n  function Sij1Big(Sij, theta, i, j) {\n    var N = Sij.length;\n    var c = cos(theta);\n    var s = sin(theta);\n    var Ski = createArray(N, bignumber(0));\n    var Skj = createArray(N, bignumber(0));\n\n    for (var k = 0; k < N; k++) {\n      Ski[k] = subtract(multiplyScalar(c, Sij[k][i]), multiplyScalar(s, Sij[k][j]));\n      Skj[k] = addScalar(multiplyScalar(s, Sij[k][i]), multiplyScalar(c, Sij[k][j]));\n    }\n\n    for (var _k2 = 0; _k2 < N; _k2++) {\n      Sij[_k2][i] = Ski[_k2];\n      Sij[_k2][j] = Skj[_k2];\n    }\n\n    return Sij;\n  } // update matrix\n\n\n  function x1Big(Hij, theta, i, j) {\n    var N = Hij.length;\n    var c = bignumber(cos(theta));\n    var s = bignumber(sin(theta));\n    var c2 = multiplyScalar(c, c);\n    var s2 = multiplyScalar(s, s);\n    var Aki = createArray(N, bignumber(0));\n    var Akj = createArray(N, bignumber(0)); // 2cs Hij\n\n    var csHij = multiply(bignumber(2), c, s, Hij[i][j]); //  Aii\n\n    var Aii = addScalar(subtract(multiplyScalar(c2, Hij[i][i]), csHij), multiplyScalar(s2, Hij[j][j]));\n    var Ajj = add(multiplyScalar(s2, Hij[i][i]), csHij, multiplyScalar(c2, Hij[j][j])); // 0  to i\n\n    for (var k = 0; k < N; k++) {\n      Aki[k] = subtract(multiplyScalar(c, Hij[i][k]), multiplyScalar(s, Hij[j][k]));\n      Akj[k] = addScalar(multiplyScalar(s, Hij[i][k]), multiplyScalar(c, Hij[j][k]));\n    } // Modify Hij\n\n\n    Hij[i][i] = Aii;\n    Hij[j][j] = Ajj;\n    Hij[i][j] = bignumber(0);\n    Hij[j][i] = bignumber(0); // 0  to i\n\n    for (var _k3 = 0; _k3 < N; _k3++) {\n      if (_k3 !== i && _k3 !== j) {\n        Hij[i][_k3] = Aki[_k3];\n        Hij[_k3][i] = Aki[_k3];\n        Hij[j][_k3] = Akj[_k3];\n        Hij[_k3][j] = Akj[_k3];\n      }\n    }\n\n    return Hij;\n  } // update matrix\n\n\n  function x1(Hij, theta, i, j) {\n    var N = Hij.length;\n    var c = Math.cos(theta);\n    var s = Math.sin(theta);\n    var c2 = c * c;\n    var s2 = s * s;\n    var Aki = createArray(N, 0);\n    var Akj = createArray(N, 0); //  Aii\n\n    var Aii = c2 * Hij[i][i] - 2 * c * s * Hij[i][j] + s2 * Hij[j][j];\n    var Ajj = s2 * Hij[i][i] + 2 * c * s * Hij[i][j] + c2 * Hij[j][j]; // 0  to i\n\n    for (var k = 0; k < N; k++) {\n      Aki[k] = c * Hij[i][k] - s * Hij[j][k];\n      Akj[k] = s * Hij[i][k] + c * Hij[j][k];\n    } // Modify Hij\n\n\n    Hij[i][i] = Aii;\n    Hij[j][j] = Ajj;\n    Hij[i][j] = 0;\n    Hij[j][i] = 0; // 0  to i\n\n    for (var _k4 = 0; _k4 < N; _k4++) {\n      if (_k4 !== i && _k4 !== j) {\n        Hij[i][_k4] = Aki[_k4];\n        Hij[_k4][i] = Aki[_k4];\n        Hij[j][_k4] = Akj[_k4];\n        Hij[_k4][j] = Akj[_k4];\n      }\n    }\n\n    return Hij;\n  } // get max off-diagonal value from Upper Diagonal\n\n\n  function getAij(Mij) {\n    var N = Mij.length;\n    var maxMij = 0;\n    var maxIJ = [0, 1];\n\n    for (var i = 0; i < N; i++) {\n      for (var j = i + 1; j < N; j++) {\n        if (Math.abs(maxMij) < Math.abs(Mij[i][j])) {\n          maxMij = Math.abs(Mij[i][j]);\n          maxIJ = [i, j];\n        }\n      }\n    }\n\n    return [maxIJ, maxMij];\n  } // get max off-diagonal value from Upper Diagonal\n\n\n  function getAijBig(Mij) {\n    var N = Mij.length;\n    var maxMij = 0;\n    var maxIJ = [0, 1];\n\n    for (var i = 0; i < N; i++) {\n      for (var j = i + 1; j < N; j++) {\n        if (abs(maxMij) < abs(Mij[i][j])) {\n          maxMij = abs(Mij[i][j]);\n          maxIJ = [i, j];\n        }\n      }\n    }\n\n    return [maxIJ, maxMij];\n  } // sort results\n\n\n  function sorting(E, S) {\n    var N = E.length;\n    var values = Array(N);\n    var vectors = Array(N);\n\n    for (var k = 0; k < N; k++) {\n      vectors[k] = Array(N);\n    }\n\n    for (var i = 0; i < N; i++) {\n      var minID = 0;\n      var minE = E[0];\n\n      for (var j = 0; j < E.length; j++) {\n        if (abs(E[j]) < abs(minE)) {\n          minID = j;\n          minE = E[minID];\n        }\n      }\n\n      values[i] = E.splice(minID, 1)[0];\n\n      for (var _k5 = 0; _k5 < N; _k5++) {\n        vectors[_k5][i] = S[_k5][minID];\n\n        S[_k5].splice(minID, 1);\n      }\n    }\n\n    return {\n      values: values,\n      vectors: vectors\n    };\n  }\n  /**\n   * Create an array of a certain size and fill all items with an initial value\n   * @param {number} size\n   * @param {number} value\n   * @return {number[]}\n   */\n\n\n  function createArray(size, value) {\n    // TODO: as soon as all browsers support Array.fill, use that instead (IE doesn't support it)\n    var array = new Array(size);\n\n    for (var i = 0; i < size; i++) {\n      array[i] = value;\n    }\n\n    return array;\n  }\n\n  return main;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}