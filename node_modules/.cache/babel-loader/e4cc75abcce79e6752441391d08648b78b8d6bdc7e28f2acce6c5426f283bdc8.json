{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createMad = void 0;\nvar _array = require(\"../../utils/array.js\");\nvar _factory = require(\"../../utils/factory.js\");\nvar _improveErrorMessage = require(\"./utils/improveErrorMessage.js\");\nvar name = 'mad';\nvar dependencies = ['typed', 'abs', 'map', 'median', 'subtract'];\nvar createMad = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    abs = _ref.abs,\n    map = _ref.map,\n    median = _ref.median,\n    subtract = _ref.subtract;\n\n  /**\n   * Compute the median absolute deviation of a matrix or a list with values.\n   * The median absolute deviation is defined as the median of the absolute\n   * deviations from the median.\n   *\n   * Syntax:\n   *\n   *     math.mad(a, b, c, ...)\n   *     math.mad(A)\n   *\n   * Examples:\n   *\n   *     math.mad(10, 20, 30)             // returns 10\n   *     math.mad([1, 2, 3])              // returns 1\n   *     math.mad([[1, 2, 3], [4, 5, 6]]) // returns 1.5\n   *\n   * See also:\n   *\n   *     median, mean, std, abs\n   *\n   * @param {Array | Matrix} array\n   *                        A single matrix or multiple scalar values.\n   * @return {*} The median absolute deviation.\n   */\n  return typed(name, {\n    // mad([a, b, c, d, ...])\n    'Array | Matrix': _mad,\n    // mad(a, b, c, d, ...)\n    '...': function _(args) {\n      return _mad(args);\n    }\n  });\n  function _mad(array) {\n    array = (0, _array.flatten)(array.valueOf());\n    if (array.length === 0) {\n      throw new Error('Cannot calculate median absolute deviation (mad) of an empty array');\n    }\n    try {\n      var med = median(array);\n      return median(map(array, function (value) {\n        return abs(subtract(value, med));\n      }));\n    } catch (err) {\n      if (err instanceof TypeError && err.message.indexOf('median') !== -1) {\n        throw new TypeError(err.message.replace('median', 'mad'));\n      } else {\n        throw (0, _improveErrorMessage.improveErrorMessage)(err, 'mad');\n      }\n    }\n  }\n});\nexports.createMad = createMad;","map":{"version":3,"names":["Object","defineProperty","exports","value","createMad","_array","require","_factory","_improveErrorMessage","name","dependencies","factory","_ref","typed","abs","map","median","subtract","_mad","_","args","array","flatten","valueOf","length","Error","med","err","TypeError","message","indexOf","replace","improveErrorMessage"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/function/statistics/mad.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createMad = void 0;\n\nvar _array = require(\"../../utils/array.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _improveErrorMessage = require(\"./utils/improveErrorMessage.js\");\n\nvar name = 'mad';\nvar dependencies = ['typed', 'abs', 'map', 'median', 'subtract'];\nvar createMad = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      abs = _ref.abs,\n      map = _ref.map,\n      median = _ref.median,\n      subtract = _ref.subtract;\n\n  /**\n   * Compute the median absolute deviation of a matrix or a list with values.\n   * The median absolute deviation is defined as the median of the absolute\n   * deviations from the median.\n   *\n   * Syntax:\n   *\n   *     math.mad(a, b, c, ...)\n   *     math.mad(A)\n   *\n   * Examples:\n   *\n   *     math.mad(10, 20, 30)             // returns 10\n   *     math.mad([1, 2, 3])              // returns 1\n   *     math.mad([[1, 2, 3], [4, 5, 6]]) // returns 1.5\n   *\n   * See also:\n   *\n   *     median, mean, std, abs\n   *\n   * @param {Array | Matrix} array\n   *                        A single matrix or multiple scalar values.\n   * @return {*} The median absolute deviation.\n   */\n  return typed(name, {\n    // mad([a, b, c, d, ...])\n    'Array | Matrix': _mad,\n    // mad(a, b, c, d, ...)\n    '...': function _(args) {\n      return _mad(args);\n    }\n  });\n\n  function _mad(array) {\n    array = (0, _array.flatten)(array.valueOf());\n\n    if (array.length === 0) {\n      throw new Error('Cannot calculate median absolute deviation (mad) of an empty array');\n    }\n\n    try {\n      var med = median(array);\n      return median(map(array, function (value) {\n        return abs(subtract(value, med));\n      }));\n    } catch (err) {\n      if (err instanceof TypeError && err.message.indexOf('median') !== -1) {\n        throw new TypeError(err.message.replace('median', 'mad'));\n      } else {\n        throw (0, _improveErrorMessage.improveErrorMessage)(err, 'mad');\n      }\n    }\n  }\n});\nexports.createMad = createMad;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,SAAS,GAAG,KAAK,CAAC;AAE1B,IAAIC,MAAM,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAE5C,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AAEhD,IAAIE,oBAAoB,GAAGF,OAAO,CAAC,gCAAgC,CAAC;AAEpE,IAAIG,IAAI,GAAG,KAAK;AAChB,IAAIC,YAAY,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAC;AAChE,IAAIN,SAAS,GAAG,eAAe,CAAC,CAAC,EAAEG,QAAQ,CAACI,OAAO,EAAEF,IAAI,EAAEC,YAAY,EAAE,UAAUE,IAAI,EAAE;EACvF,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;IAClBC,GAAG,GAAGF,IAAI,CAACE,GAAG;IACdC,GAAG,GAAGH,IAAI,CAACG,GAAG;IACdC,MAAM,GAAGJ,IAAI,CAACI,MAAM;IACpBC,QAAQ,GAAGL,IAAI,CAACK,QAAQ;;EAE5B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOJ,KAAK,CAACJ,IAAI,EAAE;IACjB;IACA,gBAAgB,EAAES,IAAI;IACtB;IACA,KAAK,EAAE,SAASC,CAAC,CAACC,IAAI,EAAE;MACtB,OAAOF,IAAI,CAACE,IAAI,CAAC;IACnB;EACF,CAAC,CAAC;EAEF,SAASF,IAAI,CAACG,KAAK,EAAE;IACnBA,KAAK,GAAG,CAAC,CAAC,EAAEhB,MAAM,CAACiB,OAAO,EAAED,KAAK,CAACE,OAAO,EAAE,CAAC;IAE5C,IAAIF,KAAK,CAACG,MAAM,KAAK,CAAC,EAAE;MACtB,MAAM,IAAIC,KAAK,CAAC,oEAAoE,CAAC;IACvF;IAEA,IAAI;MACF,IAAIC,GAAG,GAAGV,MAAM,CAACK,KAAK,CAAC;MACvB,OAAOL,MAAM,CAACD,GAAG,CAACM,KAAK,EAAE,UAAUlB,KAAK,EAAE;QACxC,OAAOW,GAAG,CAACG,QAAQ,CAACd,KAAK,EAAEuB,GAAG,CAAC,CAAC;MAClC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,IAAIA,GAAG,YAAYC,SAAS,IAAID,GAAG,CAACE,OAAO,CAACC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;QACpE,MAAM,IAAIF,SAAS,CAACD,GAAG,CAACE,OAAO,CAACE,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;MAC3D,CAAC,MAAM;QACL,MAAM,CAAC,CAAC,EAAEvB,oBAAoB,CAACwB,mBAAmB,EAAEL,GAAG,EAAE,KAAK,CAAC;MACjE;IACF;EACF;AACF,CAAC,CAAC;AACFzB,OAAO,CAACE,SAAS,GAAGA,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}