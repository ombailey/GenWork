{"ast":null,"code":"\"use strict\";\n\nexports[\"config.json\"] = validate43;\nconst schema13 = {\n  \"$id\": \"config.json\",\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"border\": {\n      \"$ref\": \"shared.json#/definitions/borders\"\n    },\n    \"header\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"content\": {\n          \"type\": \"string\"\n        },\n        \"alignment\": {\n          \"$ref\": \"shared.json#/definitions/alignment\"\n        },\n        \"wrapWord\": {\n          \"type\": \"boolean\"\n        },\n        \"truncate\": {\n          \"type\": \"integer\"\n        },\n        \"paddingLeft\": {\n          \"type\": \"integer\"\n        },\n        \"paddingRight\": {\n          \"type\": \"integer\"\n        }\n      },\n      \"required\": [\"content\"],\n      \"additionalProperties\": false\n    },\n    \"columns\": {\n      \"$ref\": \"shared.json#/definitions/columns\"\n    },\n    \"columnDefault\": {\n      \"$ref\": \"shared.json#/definitions/column\"\n    },\n    \"drawVerticalLine\": {\n      \"typeof\": \"function\"\n    },\n    \"drawHorizontalLine\": {\n      \"typeof\": \"function\"\n    },\n    \"singleLine\": {\n      \"typeof\": \"boolean\"\n    }\n  },\n  \"additionalProperties\": false\n};\nconst schema15 = {\n  \"type\": \"object\",\n  \"properties\": {\n    \"topBody\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"topJoin\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"topLeft\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"topRight\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"bottomBody\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"bottomJoin\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"bottomLeft\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"bottomRight\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"bodyLeft\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"bodyRight\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"bodyJoin\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"headerJoin\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"joinBody\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"joinLeft\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"joinRight\": {\n      \"$ref\": \"#/definitions/border\"\n    },\n    \"joinJoin\": {\n      \"$ref\": \"#/definitions/border\"\n    }\n  },\n  \"additionalProperties\": false\n};\nconst func8 = Object.prototype.hasOwnProperty;\nconst schema16 = {\n  \"type\": \"string\"\n};\nfunction validate46(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let vErrors = null;\n  let errors = 0;\n  if (typeof data !== \"string\") {\n    const err0 = {\n      instancePath,\n      schemaPath: \"#/type\",\n      keyword: \"type\",\n      params: {\n        type: \"string\"\n      },\n      message: \"must be string\"\n    };\n    if (vErrors === null) {\n      vErrors = [err0];\n    } else {\n      vErrors.push(err0);\n    }\n    errors++;\n  }\n  validate46.errors = vErrors;\n  return errors === 0;\n}\nfunction validate45(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let vErrors = null;\n  let errors = 0;\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!func8.call(schema15.properties, key0)) {\n        const err0 = {\n          instancePath,\n          schemaPath: \"#/additionalProperties\",\n          keyword: \"additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"must NOT have additional properties\"\n        };\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n        errors++;\n      }\n    }\n    if (data.topBody !== undefined) {\n      if (!validate46(data.topBody, {\n        instancePath: instancePath + \"/topBody\",\n        parentData: data,\n        parentDataProperty: \"topBody\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.topJoin !== undefined) {\n      if (!validate46(data.topJoin, {\n        instancePath: instancePath + \"/topJoin\",\n        parentData: data,\n        parentDataProperty: \"topJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.topLeft !== undefined) {\n      if (!validate46(data.topLeft, {\n        instancePath: instancePath + \"/topLeft\",\n        parentData: data,\n        parentDataProperty: \"topLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.topRight !== undefined) {\n      if (!validate46(data.topRight, {\n        instancePath: instancePath + \"/topRight\",\n        parentData: data,\n        parentDataProperty: \"topRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.bottomBody !== undefined) {\n      if (!validate46(data.bottomBody, {\n        instancePath: instancePath + \"/bottomBody\",\n        parentData: data,\n        parentDataProperty: \"bottomBody\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.bottomJoin !== undefined) {\n      if (!validate46(data.bottomJoin, {\n        instancePath: instancePath + \"/bottomJoin\",\n        parentData: data,\n        parentDataProperty: \"bottomJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.bottomLeft !== undefined) {\n      if (!validate46(data.bottomLeft, {\n        instancePath: instancePath + \"/bottomLeft\",\n        parentData: data,\n        parentDataProperty: \"bottomLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.bottomRight !== undefined) {\n      if (!validate46(data.bottomRight, {\n        instancePath: instancePath + \"/bottomRight\",\n        parentData: data,\n        parentDataProperty: \"bottomRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.bodyLeft !== undefined) {\n      if (!validate46(data.bodyLeft, {\n        instancePath: instancePath + \"/bodyLeft\",\n        parentData: data,\n        parentDataProperty: \"bodyLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.bodyRight !== undefined) {\n      if (!validate46(data.bodyRight, {\n        instancePath: instancePath + \"/bodyRight\",\n        parentData: data,\n        parentDataProperty: \"bodyRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.bodyJoin !== undefined) {\n      if (!validate46(data.bodyJoin, {\n        instancePath: instancePath + \"/bodyJoin\",\n        parentData: data,\n        parentDataProperty: \"bodyJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.headerJoin !== undefined) {\n      if (!validate46(data.headerJoin, {\n        instancePath: instancePath + \"/headerJoin\",\n        parentData: data,\n        parentDataProperty: \"headerJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.joinBody !== undefined) {\n      if (!validate46(data.joinBody, {\n        instancePath: instancePath + \"/joinBody\",\n        parentData: data,\n        parentDataProperty: \"joinBody\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.joinLeft !== undefined) {\n      if (!validate46(data.joinLeft, {\n        instancePath: instancePath + \"/joinLeft\",\n        parentData: data,\n        parentDataProperty: \"joinLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.joinRight !== undefined) {\n      if (!validate46(data.joinRight, {\n        instancePath: instancePath + \"/joinRight\",\n        parentData: data,\n        parentDataProperty: \"joinRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.joinJoin !== undefined) {\n      if (!validate46(data.joinJoin, {\n        instancePath: instancePath + \"/joinJoin\",\n        parentData: data,\n        parentDataProperty: \"joinJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n  } else {\n    const err1 = {\n      instancePath,\n      schemaPath: \"#/type\",\n      keyword: \"type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"must be object\"\n    };\n    if (vErrors === null) {\n      vErrors = [err1];\n    } else {\n      vErrors.push(err1);\n    }\n    errors++;\n  }\n  validate45.errors = vErrors;\n  return errors === 0;\n}\nconst schema17 = {\n  \"type\": \"string\",\n  \"enum\": [\"left\", \"right\", \"center\", \"justify\"]\n};\nconst func0 = require(\"ajv/dist/runtime/equal\").default;\nfunction validate64(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let vErrors = null;\n  let errors = 0;\n  if (typeof data !== \"string\") {\n    const err0 = {\n      instancePath,\n      schemaPath: \"#/type\",\n      keyword: \"type\",\n      params: {\n        type: \"string\"\n      },\n      message: \"must be string\"\n    };\n    if (vErrors === null) {\n      vErrors = [err0];\n    } else {\n      vErrors.push(err0);\n    }\n    errors++;\n  }\n  if (!(data === \"left\" || data === \"right\" || data === \"center\" || data === \"justify\")) {\n    const err1 = {\n      instancePath,\n      schemaPath: \"#/enum\",\n      keyword: \"enum\",\n      params: {\n        allowedValues: schema17.enum\n      },\n      message: \"must be equal to one of the allowed values\"\n    };\n    if (vErrors === null) {\n      vErrors = [err1];\n    } else {\n      vErrors.push(err1);\n    }\n    errors++;\n  }\n  validate64.errors = vErrors;\n  return errors === 0;\n}\nconst schema18 = {\n  \"oneOf\": [{\n    \"type\": \"object\",\n    \"patternProperties\": {\n      \"^[0-9]+$\": {\n        \"$ref\": \"#/definitions/column\"\n      }\n    },\n    \"additionalProperties\": false\n  }, {\n    \"type\": \"array\",\n    \"items\": {\n      \"$ref\": \"#/definitions/column\"\n    }\n  }]\n};\nconst pattern0 = new RegExp(\"^[0-9]+$\", \"u\");\nconst schema19 = {\n  \"type\": \"object\",\n  \"properties\": {\n    \"alignment\": {\n      \"$ref\": \"#/definitions/alignment\"\n    },\n    \"verticalAlignment\": {\n      \"type\": \"string\",\n      \"enum\": [\"top\", \"middle\", \"bottom\"]\n    },\n    \"width\": {\n      \"type\": \"integer\",\n      \"minimum\": 1\n    },\n    \"wrapWord\": {\n      \"type\": \"boolean\"\n    },\n    \"truncate\": {\n      \"type\": \"integer\"\n    },\n    \"paddingLeft\": {\n      \"type\": \"integer\"\n    },\n    \"paddingRight\": {\n      \"type\": \"integer\"\n    }\n  },\n  \"additionalProperties\": false\n};\nfunction validate68(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let vErrors = null;\n  let errors = 0;\n  if (typeof data !== \"string\") {\n    const err0 = {\n      instancePath,\n      schemaPath: \"#/type\",\n      keyword: \"type\",\n      params: {\n        type: \"string\"\n      },\n      message: \"must be string\"\n    };\n    if (vErrors === null) {\n      vErrors = [err0];\n    } else {\n      vErrors.push(err0);\n    }\n    errors++;\n  }\n  if (!(data === \"left\" || data === \"right\" || data === \"center\" || data === \"justify\")) {\n    const err1 = {\n      instancePath,\n      schemaPath: \"#/enum\",\n      keyword: \"enum\",\n      params: {\n        allowedValues: schema17.enum\n      },\n      message: \"must be equal to one of the allowed values\"\n    };\n    if (vErrors === null) {\n      vErrors = [err1];\n    } else {\n      vErrors.push(err1);\n    }\n    errors++;\n  }\n  validate68.errors = vErrors;\n  return errors === 0;\n}\nfunction validate67(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let vErrors = null;\n  let errors = 0;\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!(key0 === \"alignment\" || key0 === \"verticalAlignment\" || key0 === \"width\" || key0 === \"wrapWord\" || key0 === \"truncate\" || key0 === \"paddingLeft\" || key0 === \"paddingRight\")) {\n        const err0 = {\n          instancePath,\n          schemaPath: \"#/additionalProperties\",\n          keyword: \"additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"must NOT have additional properties\"\n        };\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n        errors++;\n      }\n    }\n    if (data.alignment !== undefined) {\n      if (!validate68(data.alignment, {\n        instancePath: instancePath + \"/alignment\",\n        parentData: data,\n        parentDataProperty: \"alignment\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate68.errors : vErrors.concat(validate68.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.verticalAlignment !== undefined) {\n      let data1 = data.verticalAlignment;\n      if (typeof data1 !== \"string\") {\n        const err1 = {\n          instancePath: instancePath + \"/verticalAlignment\",\n          schemaPath: \"#/properties/verticalAlignment/type\",\n          keyword: \"type\",\n          params: {\n            type: \"string\"\n          },\n          message: \"must be string\"\n        };\n        if (vErrors === null) {\n          vErrors = [err1];\n        } else {\n          vErrors.push(err1);\n        }\n        errors++;\n      }\n      if (!(data1 === \"top\" || data1 === \"middle\" || data1 === \"bottom\")) {\n        const err2 = {\n          instancePath: instancePath + \"/verticalAlignment\",\n          schemaPath: \"#/properties/verticalAlignment/enum\",\n          keyword: \"enum\",\n          params: {\n            allowedValues: schema19.properties.verticalAlignment.enum\n          },\n          message: \"must be equal to one of the allowed values\"\n        };\n        if (vErrors === null) {\n          vErrors = [err2];\n        } else {\n          vErrors.push(err2);\n        }\n        errors++;\n      }\n    }\n    if (data.width !== undefined) {\n      let data2 = data.width;\n      if (!(typeof data2 == \"number\" && !(data2 % 1) && !isNaN(data2) && isFinite(data2))) {\n        const err3 = {\n          instancePath: instancePath + \"/width\",\n          schemaPath: \"#/properties/width/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n        if (vErrors === null) {\n          vErrors = [err3];\n        } else {\n          vErrors.push(err3);\n        }\n        errors++;\n      }\n      if (typeof data2 == \"number\" && isFinite(data2)) {\n        if (data2 < 1 || isNaN(data2)) {\n          const err4 = {\n            instancePath: instancePath + \"/width\",\n            schemaPath: \"#/properties/width/minimum\",\n            keyword: \"minimum\",\n            params: {\n              comparison: \">=\",\n              limit: 1\n            },\n            message: \"must be >= 1\"\n          };\n          if (vErrors === null) {\n            vErrors = [err4];\n          } else {\n            vErrors.push(err4);\n          }\n          errors++;\n        }\n      }\n    }\n    if (data.wrapWord !== undefined) {\n      if (typeof data.wrapWord !== \"boolean\") {\n        const err5 = {\n          instancePath: instancePath + \"/wrapWord\",\n          schemaPath: \"#/properties/wrapWord/type\",\n          keyword: \"type\",\n          params: {\n            type: \"boolean\"\n          },\n          message: \"must be boolean\"\n        };\n        if (vErrors === null) {\n          vErrors = [err5];\n        } else {\n          vErrors.push(err5);\n        }\n        errors++;\n      }\n    }\n    if (data.truncate !== undefined) {\n      let data4 = data.truncate;\n      if (!(typeof data4 == \"number\" && !(data4 % 1) && !isNaN(data4) && isFinite(data4))) {\n        const err6 = {\n          instancePath: instancePath + \"/truncate\",\n          schemaPath: \"#/properties/truncate/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n        if (vErrors === null) {\n          vErrors = [err6];\n        } else {\n          vErrors.push(err6);\n        }\n        errors++;\n      }\n    }\n    if (data.paddingLeft !== undefined) {\n      let data5 = data.paddingLeft;\n      if (!(typeof data5 == \"number\" && !(data5 % 1) && !isNaN(data5) && isFinite(data5))) {\n        const err7 = {\n          instancePath: instancePath + \"/paddingLeft\",\n          schemaPath: \"#/properties/paddingLeft/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n        if (vErrors === null) {\n          vErrors = [err7];\n        } else {\n          vErrors.push(err7);\n        }\n        errors++;\n      }\n    }\n    if (data.paddingRight !== undefined) {\n      let data6 = data.paddingRight;\n      if (!(typeof data6 == \"number\" && !(data6 % 1) && !isNaN(data6) && isFinite(data6))) {\n        const err8 = {\n          instancePath: instancePath + \"/paddingRight\",\n          schemaPath: \"#/properties/paddingRight/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n        if (vErrors === null) {\n          vErrors = [err8];\n        } else {\n          vErrors.push(err8);\n        }\n        errors++;\n      }\n    }\n  } else {\n    const err9 = {\n      instancePath,\n      schemaPath: \"#/type\",\n      keyword: \"type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"must be object\"\n    };\n    if (vErrors === null) {\n      vErrors = [err9];\n    } else {\n      vErrors.push(err9);\n    }\n    errors++;\n  }\n  validate67.errors = vErrors;\n  return errors === 0;\n}\nfunction validate66(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let vErrors = null;\n  let errors = 0;\n  const _errs0 = errors;\n  let valid0 = false;\n  let passing0 = null;\n  const _errs1 = errors;\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!pattern0.test(key0)) {\n        const err0 = {\n          instancePath,\n          schemaPath: \"#/oneOf/0/additionalProperties\",\n          keyword: \"additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"must NOT have additional properties\"\n        };\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n        errors++;\n      }\n    }\n    for (const key1 in data) {\n      if (pattern0.test(key1)) {\n        if (!validate67(data[key1], {\n          instancePath: instancePath + \"/\" + key1.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n          parentData: data,\n          parentDataProperty: key1,\n          rootData\n        })) {\n          vErrors = vErrors === null ? validate67.errors : vErrors.concat(validate67.errors);\n          errors = vErrors.length;\n        }\n      }\n    }\n  } else {\n    const err1 = {\n      instancePath,\n      schemaPath: \"#/oneOf/0/type\",\n      keyword: \"type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"must be object\"\n    };\n    if (vErrors === null) {\n      vErrors = [err1];\n    } else {\n      vErrors.push(err1);\n    }\n    errors++;\n  }\n  var _valid0 = _errs1 === errors;\n  if (_valid0) {\n    valid0 = true;\n    passing0 = 0;\n  }\n  const _errs5 = errors;\n  if (Array.isArray(data)) {\n    const len0 = data.length;\n    for (let i0 = 0; i0 < len0; i0++) {\n      if (!validate67(data[i0], {\n        instancePath: instancePath + \"/\" + i0,\n        parentData: data,\n        parentDataProperty: i0,\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate67.errors : vErrors.concat(validate67.errors);\n        errors = vErrors.length;\n      }\n    }\n  } else {\n    const err2 = {\n      instancePath,\n      schemaPath: \"#/oneOf/1/type\",\n      keyword: \"type\",\n      params: {\n        type: \"array\"\n      },\n      message: \"must be array\"\n    };\n    if (vErrors === null) {\n      vErrors = [err2];\n    } else {\n      vErrors.push(err2);\n    }\n    errors++;\n  }\n  var _valid0 = _errs5 === errors;\n  if (_valid0 && valid0) {\n    valid0 = false;\n    passing0 = [passing0, 1];\n  } else {\n    if (_valid0) {\n      valid0 = true;\n      passing0 = 1;\n    }\n  }\n  if (!valid0) {\n    const err3 = {\n      instancePath,\n      schemaPath: \"#/oneOf\",\n      keyword: \"oneOf\",\n      params: {\n        passingSchemas: passing0\n      },\n      message: \"must match exactly one schema in oneOf\"\n    };\n    if (vErrors === null) {\n      vErrors = [err3];\n    } else {\n      vErrors.push(err3);\n    }\n    errors++;\n  } else {\n    errors = _errs0;\n    if (vErrors !== null) {\n      if (_errs0) {\n        vErrors.length = _errs0;\n      } else {\n        vErrors = null;\n      }\n    }\n  }\n  validate66.errors = vErrors;\n  return errors === 0;\n}\nfunction validate73(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let vErrors = null;\n  let errors = 0;\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!(key0 === \"alignment\" || key0 === \"verticalAlignment\" || key0 === \"width\" || key0 === \"wrapWord\" || key0 === \"truncate\" || key0 === \"paddingLeft\" || key0 === \"paddingRight\")) {\n        const err0 = {\n          instancePath,\n          schemaPath: \"#/additionalProperties\",\n          keyword: \"additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"must NOT have additional properties\"\n        };\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n        errors++;\n      }\n    }\n    if (data.alignment !== undefined) {\n      if (!validate68(data.alignment, {\n        instancePath: instancePath + \"/alignment\",\n        parentData: data,\n        parentDataProperty: \"alignment\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate68.errors : vErrors.concat(validate68.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.verticalAlignment !== undefined) {\n      let data1 = data.verticalAlignment;\n      if (typeof data1 !== \"string\") {\n        const err1 = {\n          instancePath: instancePath + \"/verticalAlignment\",\n          schemaPath: \"#/properties/verticalAlignment/type\",\n          keyword: \"type\",\n          params: {\n            type: \"string\"\n          },\n          message: \"must be string\"\n        };\n        if (vErrors === null) {\n          vErrors = [err1];\n        } else {\n          vErrors.push(err1);\n        }\n        errors++;\n      }\n      if (!(data1 === \"top\" || data1 === \"middle\" || data1 === \"bottom\")) {\n        const err2 = {\n          instancePath: instancePath + \"/verticalAlignment\",\n          schemaPath: \"#/properties/verticalAlignment/enum\",\n          keyword: \"enum\",\n          params: {\n            allowedValues: schema19.properties.verticalAlignment.enum\n          },\n          message: \"must be equal to one of the allowed values\"\n        };\n        if (vErrors === null) {\n          vErrors = [err2];\n        } else {\n          vErrors.push(err2);\n        }\n        errors++;\n      }\n    }\n    if (data.width !== undefined) {\n      let data2 = data.width;\n      if (!(typeof data2 == \"number\" && !(data2 % 1) && !isNaN(data2) && isFinite(data2))) {\n        const err3 = {\n          instancePath: instancePath + \"/width\",\n          schemaPath: \"#/properties/width/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n        if (vErrors === null) {\n          vErrors = [err3];\n        } else {\n          vErrors.push(err3);\n        }\n        errors++;\n      }\n      if (typeof data2 == \"number\" && isFinite(data2)) {\n        if (data2 < 1 || isNaN(data2)) {\n          const err4 = {\n            instancePath: instancePath + \"/width\",\n            schemaPath: \"#/properties/width/minimum\",\n            keyword: \"minimum\",\n            params: {\n              comparison: \">=\",\n              limit: 1\n            },\n            message: \"must be >= 1\"\n          };\n          if (vErrors === null) {\n            vErrors = [err4];\n          } else {\n            vErrors.push(err4);\n          }\n          errors++;\n        }\n      }\n    }\n    if (data.wrapWord !== undefined) {\n      if (typeof data.wrapWord !== \"boolean\") {\n        const err5 = {\n          instancePath: instancePath + \"/wrapWord\",\n          schemaPath: \"#/properties/wrapWord/type\",\n          keyword: \"type\",\n          params: {\n            type: \"boolean\"\n          },\n          message: \"must be boolean\"\n        };\n        if (vErrors === null) {\n          vErrors = [err5];\n        } else {\n          vErrors.push(err5);\n        }\n        errors++;\n      }\n    }\n    if (data.truncate !== undefined) {\n      let data4 = data.truncate;\n      if (!(typeof data4 == \"number\" && !(data4 % 1) && !isNaN(data4) && isFinite(data4))) {\n        const err6 = {\n          instancePath: instancePath + \"/truncate\",\n          schemaPath: \"#/properties/truncate/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n        if (vErrors === null) {\n          vErrors = [err6];\n        } else {\n          vErrors.push(err6);\n        }\n        errors++;\n      }\n    }\n    if (data.paddingLeft !== undefined) {\n      let data5 = data.paddingLeft;\n      if (!(typeof data5 == \"number\" && !(data5 % 1) && !isNaN(data5) && isFinite(data5))) {\n        const err7 = {\n          instancePath: instancePath + \"/paddingLeft\",\n          schemaPath: \"#/properties/paddingLeft/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n        if (vErrors === null) {\n          vErrors = [err7];\n        } else {\n          vErrors.push(err7);\n        }\n        errors++;\n      }\n    }\n    if (data.paddingRight !== undefined) {\n      let data6 = data.paddingRight;\n      if (!(typeof data6 == \"number\" && !(data6 % 1) && !isNaN(data6) && isFinite(data6))) {\n        const err8 = {\n          instancePath: instancePath + \"/paddingRight\",\n          schemaPath: \"#/properties/paddingRight/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n        if (vErrors === null) {\n          vErrors = [err8];\n        } else {\n          vErrors.push(err8);\n        }\n        errors++;\n      }\n    }\n  } else {\n    const err9 = {\n      instancePath,\n      schemaPath: \"#/type\",\n      keyword: \"type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"must be object\"\n    };\n    if (vErrors === null) {\n      vErrors = [err9];\n    } else {\n      vErrors.push(err9);\n    }\n    errors++;\n  }\n  validate73.errors = vErrors;\n  return errors === 0;\n}\nfunction validate43(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  /*# sourceURL=\"config.json\" */;\n  let vErrors = null;\n  let errors = 0;\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!(key0 === \"border\" || key0 === \"header\" || key0 === \"columns\" || key0 === \"columnDefault\" || key0 === \"drawVerticalLine\" || key0 === \"drawHorizontalLine\" || key0 === \"singleLine\")) {\n        const err0 = {\n          instancePath,\n          schemaPath: \"#/additionalProperties\",\n          keyword: \"additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"must NOT have additional properties\"\n        };\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n        errors++;\n      }\n    }\n    if (data.border !== undefined) {\n      if (!validate45(data.border, {\n        instancePath: instancePath + \"/border\",\n        parentData: data,\n        parentDataProperty: \"border\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate45.errors : vErrors.concat(validate45.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.header !== undefined) {\n      let data1 = data.header;\n      if (data1 && typeof data1 == \"object\" && !Array.isArray(data1)) {\n        if (data1.content === undefined) {\n          const err1 = {\n            instancePath: instancePath + \"/header\",\n            schemaPath: \"#/properties/header/required\",\n            keyword: \"required\",\n            params: {\n              missingProperty: \"content\"\n            },\n            message: \"must have required property '\" + \"content\" + \"'\"\n          };\n          if (vErrors === null) {\n            vErrors = [err1];\n          } else {\n            vErrors.push(err1);\n          }\n          errors++;\n        }\n        for (const key1 in data1) {\n          if (!(key1 === \"content\" || key1 === \"alignment\" || key1 === \"wrapWord\" || key1 === \"truncate\" || key1 === \"paddingLeft\" || key1 === \"paddingRight\")) {\n            const err2 = {\n              instancePath: instancePath + \"/header\",\n              schemaPath: \"#/properties/header/additionalProperties\",\n              keyword: \"additionalProperties\",\n              params: {\n                additionalProperty: key1\n              },\n              message: \"must NOT have additional properties\"\n            };\n            if (vErrors === null) {\n              vErrors = [err2];\n            } else {\n              vErrors.push(err2);\n            }\n            errors++;\n          }\n        }\n        if (data1.content !== undefined) {\n          if (typeof data1.content !== \"string\") {\n            const err3 = {\n              instancePath: instancePath + \"/header/content\",\n              schemaPath: \"#/properties/header/properties/content/type\",\n              keyword: \"type\",\n              params: {\n                type: \"string\"\n              },\n              message: \"must be string\"\n            };\n            if (vErrors === null) {\n              vErrors = [err3];\n            } else {\n              vErrors.push(err3);\n            }\n            errors++;\n          }\n        }\n        if (data1.alignment !== undefined) {\n          if (!validate64(data1.alignment, {\n            instancePath: instancePath + \"/header/alignment\",\n            parentData: data1,\n            parentDataProperty: \"alignment\",\n            rootData\n          })) {\n            vErrors = vErrors === null ? validate64.errors : vErrors.concat(validate64.errors);\n            errors = vErrors.length;\n          }\n        }\n        if (data1.wrapWord !== undefined) {\n          if (typeof data1.wrapWord !== \"boolean\") {\n            const err4 = {\n              instancePath: instancePath + \"/header/wrapWord\",\n              schemaPath: \"#/properties/header/properties/wrapWord/type\",\n              keyword: \"type\",\n              params: {\n                type: \"boolean\"\n              },\n              message: \"must be boolean\"\n            };\n            if (vErrors === null) {\n              vErrors = [err4];\n            } else {\n              vErrors.push(err4);\n            }\n            errors++;\n          }\n        }\n        if (data1.truncate !== undefined) {\n          let data5 = data1.truncate;\n          if (!(typeof data5 == \"number\" && !(data5 % 1) && !isNaN(data5) && isFinite(data5))) {\n            const err5 = {\n              instancePath: instancePath + \"/header/truncate\",\n              schemaPath: \"#/properties/header/properties/truncate/type\",\n              keyword: \"type\",\n              params: {\n                type: \"integer\"\n              },\n              message: \"must be integer\"\n            };\n            if (vErrors === null) {\n              vErrors = [err5];\n            } else {\n              vErrors.push(err5);\n            }\n            errors++;\n          }\n        }\n        if (data1.paddingLeft !== undefined) {\n          let data6 = data1.paddingLeft;\n          if (!(typeof data6 == \"number\" && !(data6 % 1) && !isNaN(data6) && isFinite(data6))) {\n            const err6 = {\n              instancePath: instancePath + \"/header/paddingLeft\",\n              schemaPath: \"#/properties/header/properties/paddingLeft/type\",\n              keyword: \"type\",\n              params: {\n                type: \"integer\"\n              },\n              message: \"must be integer\"\n            };\n            if (vErrors === null) {\n              vErrors = [err6];\n            } else {\n              vErrors.push(err6);\n            }\n            errors++;\n          }\n        }\n        if (data1.paddingRight !== undefined) {\n          let data7 = data1.paddingRight;\n          if (!(typeof data7 == \"number\" && !(data7 % 1) && !isNaN(data7) && isFinite(data7))) {\n            const err7 = {\n              instancePath: instancePath + \"/header/paddingRight\",\n              schemaPath: \"#/properties/header/properties/paddingRight/type\",\n              keyword: \"type\",\n              params: {\n                type: \"integer\"\n              },\n              message: \"must be integer\"\n            };\n            if (vErrors === null) {\n              vErrors = [err7];\n            } else {\n              vErrors.push(err7);\n            }\n            errors++;\n          }\n        }\n      } else {\n        const err8 = {\n          instancePath: instancePath + \"/header\",\n          schemaPath: \"#/properties/header/type\",\n          keyword: \"type\",\n          params: {\n            type: \"object\"\n          },\n          message: \"must be object\"\n        };\n        if (vErrors === null) {\n          vErrors = [err8];\n        } else {\n          vErrors.push(err8);\n        }\n        errors++;\n      }\n    }\n    if (data.columns !== undefined) {\n      if (!validate66(data.columns, {\n        instancePath: instancePath + \"/columns\",\n        parentData: data,\n        parentDataProperty: \"columns\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate66.errors : vErrors.concat(validate66.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.columnDefault !== undefined) {\n      if (!validate73(data.columnDefault, {\n        instancePath: instancePath + \"/columnDefault\",\n        parentData: data,\n        parentDataProperty: \"columnDefault\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate73.errors : vErrors.concat(validate73.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.drawVerticalLine !== undefined) {\n      if (typeof data.drawVerticalLine != \"function\") {\n        const err9 = {\n          instancePath: instancePath + \"/drawVerticalLine\",\n          schemaPath: \"#/properties/drawVerticalLine/typeof\",\n          keyword: \"typeof\",\n          params: {},\n          message: \"should pass \\\"typeof\\\" keyword validation\"\n        };\n        if (vErrors === null) {\n          vErrors = [err9];\n        } else {\n          vErrors.push(err9);\n        }\n        errors++;\n      }\n    }\n    if (data.drawHorizontalLine !== undefined) {\n      if (typeof data.drawHorizontalLine != \"function\") {\n        const err10 = {\n          instancePath: instancePath + \"/drawHorizontalLine\",\n          schemaPath: \"#/properties/drawHorizontalLine/typeof\",\n          keyword: \"typeof\",\n          params: {},\n          message: \"should pass \\\"typeof\\\" keyword validation\"\n        };\n        if (vErrors === null) {\n          vErrors = [err10];\n        } else {\n          vErrors.push(err10);\n        }\n        errors++;\n      }\n    }\n    if (data.singleLine !== undefined) {\n      if (typeof data.singleLine != \"boolean\") {\n        const err11 = {\n          instancePath: instancePath + \"/singleLine\",\n          schemaPath: \"#/properties/singleLine/typeof\",\n          keyword: \"typeof\",\n          params: {},\n          message: \"should pass \\\"typeof\\\" keyword validation\"\n        };\n        if (vErrors === null) {\n          vErrors = [err11];\n        } else {\n          vErrors.push(err11);\n        }\n        errors++;\n      }\n    }\n  } else {\n    const err12 = {\n      instancePath,\n      schemaPath: \"#/type\",\n      keyword: \"type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"must be object\"\n    };\n    if (vErrors === null) {\n      vErrors = [err12];\n    } else {\n      vErrors.push(err12);\n    }\n    errors++;\n  }\n  validate43.errors = vErrors;\n  return errors === 0;\n}\nexports[\"streamConfig.json\"] = validate76;\nconst schema22 = {\n  \"$id\": \"streamConfig.json\",\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"border\": {\n      \"$ref\": \"shared.json#/definitions/borders\"\n    },\n    \"columns\": {\n      \"$ref\": \"shared.json#/definitions/columns\"\n    },\n    \"columnDefault\": {\n      \"$ref\": \"shared.json#/definitions/column\"\n    },\n    \"columnCount\": {\n      \"type\": \"integer\",\n      \"minimum\": 1\n    },\n    \"drawVerticalLine\": {\n      \"typeof\": \"function\"\n    }\n  },\n  \"required\": [\"columnDefault\", \"columnCount\"],\n  \"additionalProperties\": false\n};\nfunction validate77(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let vErrors = null;\n  let errors = 0;\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!func8.call(schema15.properties, key0)) {\n        const err0 = {\n          instancePath,\n          schemaPath: \"#/additionalProperties\",\n          keyword: \"additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"must NOT have additional properties\"\n        };\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n        errors++;\n      }\n    }\n    if (data.topBody !== undefined) {\n      if (!validate46(data.topBody, {\n        instancePath: instancePath + \"/topBody\",\n        parentData: data,\n        parentDataProperty: \"topBody\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.topJoin !== undefined) {\n      if (!validate46(data.topJoin, {\n        instancePath: instancePath + \"/topJoin\",\n        parentData: data,\n        parentDataProperty: \"topJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.topLeft !== undefined) {\n      if (!validate46(data.topLeft, {\n        instancePath: instancePath + \"/topLeft\",\n        parentData: data,\n        parentDataProperty: \"topLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.topRight !== undefined) {\n      if (!validate46(data.topRight, {\n        instancePath: instancePath + \"/topRight\",\n        parentData: data,\n        parentDataProperty: \"topRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.bottomBody !== undefined) {\n      if (!validate46(data.bottomBody, {\n        instancePath: instancePath + \"/bottomBody\",\n        parentData: data,\n        parentDataProperty: \"bottomBody\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.bottomJoin !== undefined) {\n      if (!validate46(data.bottomJoin, {\n        instancePath: instancePath + \"/bottomJoin\",\n        parentData: data,\n        parentDataProperty: \"bottomJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.bottomLeft !== undefined) {\n      if (!validate46(data.bottomLeft, {\n        instancePath: instancePath + \"/bottomLeft\",\n        parentData: data,\n        parentDataProperty: \"bottomLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.bottomRight !== undefined) {\n      if (!validate46(data.bottomRight, {\n        instancePath: instancePath + \"/bottomRight\",\n        parentData: data,\n        parentDataProperty: \"bottomRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.bodyLeft !== undefined) {\n      if (!validate46(data.bodyLeft, {\n        instancePath: instancePath + \"/bodyLeft\",\n        parentData: data,\n        parentDataProperty: \"bodyLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.bodyRight !== undefined) {\n      if (!validate46(data.bodyRight, {\n        instancePath: instancePath + \"/bodyRight\",\n        parentData: data,\n        parentDataProperty: \"bodyRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.bodyJoin !== undefined) {\n      if (!validate46(data.bodyJoin, {\n        instancePath: instancePath + \"/bodyJoin\",\n        parentData: data,\n        parentDataProperty: \"bodyJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.headerJoin !== undefined) {\n      if (!validate46(data.headerJoin, {\n        instancePath: instancePath + \"/headerJoin\",\n        parentData: data,\n        parentDataProperty: \"headerJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.joinBody !== undefined) {\n      if (!validate46(data.joinBody, {\n        instancePath: instancePath + \"/joinBody\",\n        parentData: data,\n        parentDataProperty: \"joinBody\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.joinLeft !== undefined) {\n      if (!validate46(data.joinLeft, {\n        instancePath: instancePath + \"/joinLeft\",\n        parentData: data,\n        parentDataProperty: \"joinLeft\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.joinRight !== undefined) {\n      if (!validate46(data.joinRight, {\n        instancePath: instancePath + \"/joinRight\",\n        parentData: data,\n        parentDataProperty: \"joinRight\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.joinJoin !== undefined) {\n      if (!validate46(data.joinJoin, {\n        instancePath: instancePath + \"/joinJoin\",\n        parentData: data,\n        parentDataProperty: \"joinJoin\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n        errors = vErrors.length;\n      }\n    }\n  } else {\n    const err1 = {\n      instancePath,\n      schemaPath: \"#/type\",\n      keyword: \"type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"must be object\"\n    };\n    if (vErrors === null) {\n      vErrors = [err1];\n    } else {\n      vErrors.push(err1);\n    }\n    errors++;\n  }\n  validate77.errors = vErrors;\n  return errors === 0;\n}\nfunction validate95(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let vErrors = null;\n  let errors = 0;\n  const _errs0 = errors;\n  let valid0 = false;\n  let passing0 = null;\n  const _errs1 = errors;\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!pattern0.test(key0)) {\n        const err0 = {\n          instancePath,\n          schemaPath: \"#/oneOf/0/additionalProperties\",\n          keyword: \"additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"must NOT have additional properties\"\n        };\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n        errors++;\n      }\n    }\n    for (const key1 in data) {\n      if (pattern0.test(key1)) {\n        if (!validate67(data[key1], {\n          instancePath: instancePath + \"/\" + key1.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n          parentData: data,\n          parentDataProperty: key1,\n          rootData\n        })) {\n          vErrors = vErrors === null ? validate67.errors : vErrors.concat(validate67.errors);\n          errors = vErrors.length;\n        }\n      }\n    }\n  } else {\n    const err1 = {\n      instancePath,\n      schemaPath: \"#/oneOf/0/type\",\n      keyword: \"type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"must be object\"\n    };\n    if (vErrors === null) {\n      vErrors = [err1];\n    } else {\n      vErrors.push(err1);\n    }\n    errors++;\n  }\n  var _valid0 = _errs1 === errors;\n  if (_valid0) {\n    valid0 = true;\n    passing0 = 0;\n  }\n  const _errs5 = errors;\n  if (Array.isArray(data)) {\n    const len0 = data.length;\n    for (let i0 = 0; i0 < len0; i0++) {\n      if (!validate67(data[i0], {\n        instancePath: instancePath + \"/\" + i0,\n        parentData: data,\n        parentDataProperty: i0,\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate67.errors : vErrors.concat(validate67.errors);\n        errors = vErrors.length;\n      }\n    }\n  } else {\n    const err2 = {\n      instancePath,\n      schemaPath: \"#/oneOf/1/type\",\n      keyword: \"type\",\n      params: {\n        type: \"array\"\n      },\n      message: \"must be array\"\n    };\n    if (vErrors === null) {\n      vErrors = [err2];\n    } else {\n      vErrors.push(err2);\n    }\n    errors++;\n  }\n  var _valid0 = _errs5 === errors;\n  if (_valid0 && valid0) {\n    valid0 = false;\n    passing0 = [passing0, 1];\n  } else {\n    if (_valid0) {\n      valid0 = true;\n      passing0 = 1;\n    }\n  }\n  if (!valid0) {\n    const err3 = {\n      instancePath,\n      schemaPath: \"#/oneOf\",\n      keyword: \"oneOf\",\n      params: {\n        passingSchemas: passing0\n      },\n      message: \"must match exactly one schema in oneOf\"\n    };\n    if (vErrors === null) {\n      vErrors = [err3];\n    } else {\n      vErrors.push(err3);\n    }\n    errors++;\n  } else {\n    errors = _errs0;\n    if (vErrors !== null) {\n      if (_errs0) {\n        vErrors.length = _errs0;\n      } else {\n        vErrors = null;\n      }\n    }\n  }\n  validate95.errors = vErrors;\n  return errors === 0;\n}\nfunction validate99(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let vErrors = null;\n  let errors = 0;\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    for (const key0 in data) {\n      if (!(key0 === \"alignment\" || key0 === \"verticalAlignment\" || key0 === \"width\" || key0 === \"wrapWord\" || key0 === \"truncate\" || key0 === \"paddingLeft\" || key0 === \"paddingRight\")) {\n        const err0 = {\n          instancePath,\n          schemaPath: \"#/additionalProperties\",\n          keyword: \"additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"must NOT have additional properties\"\n        };\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n        errors++;\n      }\n    }\n    if (data.alignment !== undefined) {\n      if (!validate68(data.alignment, {\n        instancePath: instancePath + \"/alignment\",\n        parentData: data,\n        parentDataProperty: \"alignment\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate68.errors : vErrors.concat(validate68.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.verticalAlignment !== undefined) {\n      let data1 = data.verticalAlignment;\n      if (typeof data1 !== \"string\") {\n        const err1 = {\n          instancePath: instancePath + \"/verticalAlignment\",\n          schemaPath: \"#/properties/verticalAlignment/type\",\n          keyword: \"type\",\n          params: {\n            type: \"string\"\n          },\n          message: \"must be string\"\n        };\n        if (vErrors === null) {\n          vErrors = [err1];\n        } else {\n          vErrors.push(err1);\n        }\n        errors++;\n      }\n      if (!(data1 === \"top\" || data1 === \"middle\" || data1 === \"bottom\")) {\n        const err2 = {\n          instancePath: instancePath + \"/verticalAlignment\",\n          schemaPath: \"#/properties/verticalAlignment/enum\",\n          keyword: \"enum\",\n          params: {\n            allowedValues: schema19.properties.verticalAlignment.enum\n          },\n          message: \"must be equal to one of the allowed values\"\n        };\n        if (vErrors === null) {\n          vErrors = [err2];\n        } else {\n          vErrors.push(err2);\n        }\n        errors++;\n      }\n    }\n    if (data.width !== undefined) {\n      let data2 = data.width;\n      if (!(typeof data2 == \"number\" && !(data2 % 1) && !isNaN(data2) && isFinite(data2))) {\n        const err3 = {\n          instancePath: instancePath + \"/width\",\n          schemaPath: \"#/properties/width/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n        if (vErrors === null) {\n          vErrors = [err3];\n        } else {\n          vErrors.push(err3);\n        }\n        errors++;\n      }\n      if (typeof data2 == \"number\" && isFinite(data2)) {\n        if (data2 < 1 || isNaN(data2)) {\n          const err4 = {\n            instancePath: instancePath + \"/width\",\n            schemaPath: \"#/properties/width/minimum\",\n            keyword: \"minimum\",\n            params: {\n              comparison: \">=\",\n              limit: 1\n            },\n            message: \"must be >= 1\"\n          };\n          if (vErrors === null) {\n            vErrors = [err4];\n          } else {\n            vErrors.push(err4);\n          }\n          errors++;\n        }\n      }\n    }\n    if (data.wrapWord !== undefined) {\n      if (typeof data.wrapWord !== \"boolean\") {\n        const err5 = {\n          instancePath: instancePath + \"/wrapWord\",\n          schemaPath: \"#/properties/wrapWord/type\",\n          keyword: \"type\",\n          params: {\n            type: \"boolean\"\n          },\n          message: \"must be boolean\"\n        };\n        if (vErrors === null) {\n          vErrors = [err5];\n        } else {\n          vErrors.push(err5);\n        }\n        errors++;\n      }\n    }\n    if (data.truncate !== undefined) {\n      let data4 = data.truncate;\n      if (!(typeof data4 == \"number\" && !(data4 % 1) && !isNaN(data4) && isFinite(data4))) {\n        const err6 = {\n          instancePath: instancePath + \"/truncate\",\n          schemaPath: \"#/properties/truncate/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n        if (vErrors === null) {\n          vErrors = [err6];\n        } else {\n          vErrors.push(err6);\n        }\n        errors++;\n      }\n    }\n    if (data.paddingLeft !== undefined) {\n      let data5 = data.paddingLeft;\n      if (!(typeof data5 == \"number\" && !(data5 % 1) && !isNaN(data5) && isFinite(data5))) {\n        const err7 = {\n          instancePath: instancePath + \"/paddingLeft\",\n          schemaPath: \"#/properties/paddingLeft/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n        if (vErrors === null) {\n          vErrors = [err7];\n        } else {\n          vErrors.push(err7);\n        }\n        errors++;\n      }\n    }\n    if (data.paddingRight !== undefined) {\n      let data6 = data.paddingRight;\n      if (!(typeof data6 == \"number\" && !(data6 % 1) && !isNaN(data6) && isFinite(data6))) {\n        const err8 = {\n          instancePath: instancePath + \"/paddingRight\",\n          schemaPath: \"#/properties/paddingRight/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n        if (vErrors === null) {\n          vErrors = [err8];\n        } else {\n          vErrors.push(err8);\n        }\n        errors++;\n      }\n    }\n  } else {\n    const err9 = {\n      instancePath,\n      schemaPath: \"#/type\",\n      keyword: \"type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"must be object\"\n    };\n    if (vErrors === null) {\n      vErrors = [err9];\n    } else {\n      vErrors.push(err9);\n    }\n    errors++;\n  }\n  validate99.errors = vErrors;\n  return errors === 0;\n}\nfunction validate76(data) {\n  let {\n    instancePath = \"\",\n    parentData,\n    parentDataProperty,\n    rootData = data\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  /*# sourceURL=\"streamConfig.json\" */;\n  let vErrors = null;\n  let errors = 0;\n  if (data && typeof data == \"object\" && !Array.isArray(data)) {\n    if (data.columnDefault === undefined) {\n      const err0 = {\n        instancePath,\n        schemaPath: \"#/required\",\n        keyword: \"required\",\n        params: {\n          missingProperty: \"columnDefault\"\n        },\n        message: \"must have required property '\" + \"columnDefault\" + \"'\"\n      };\n      if (vErrors === null) {\n        vErrors = [err0];\n      } else {\n        vErrors.push(err0);\n      }\n      errors++;\n    }\n    if (data.columnCount === undefined) {\n      const err1 = {\n        instancePath,\n        schemaPath: \"#/required\",\n        keyword: \"required\",\n        params: {\n          missingProperty: \"columnCount\"\n        },\n        message: \"must have required property '\" + \"columnCount\" + \"'\"\n      };\n      if (vErrors === null) {\n        vErrors = [err1];\n      } else {\n        vErrors.push(err1);\n      }\n      errors++;\n    }\n    for (const key0 in data) {\n      if (!(key0 === \"border\" || key0 === \"columns\" || key0 === \"columnDefault\" || key0 === \"columnCount\" || key0 === \"drawVerticalLine\")) {\n        const err2 = {\n          instancePath,\n          schemaPath: \"#/additionalProperties\",\n          keyword: \"additionalProperties\",\n          params: {\n            additionalProperty: key0\n          },\n          message: \"must NOT have additional properties\"\n        };\n        if (vErrors === null) {\n          vErrors = [err2];\n        } else {\n          vErrors.push(err2);\n        }\n        errors++;\n      }\n    }\n    if (data.border !== undefined) {\n      if (!validate77(data.border, {\n        instancePath: instancePath + \"/border\",\n        parentData: data,\n        parentDataProperty: \"border\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate77.errors : vErrors.concat(validate77.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.columns !== undefined) {\n      if (!validate95(data.columns, {\n        instancePath: instancePath + \"/columns\",\n        parentData: data,\n        parentDataProperty: \"columns\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate95.errors : vErrors.concat(validate95.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.columnDefault !== undefined) {\n      if (!validate99(data.columnDefault, {\n        instancePath: instancePath + \"/columnDefault\",\n        parentData: data,\n        parentDataProperty: \"columnDefault\",\n        rootData\n      })) {\n        vErrors = vErrors === null ? validate99.errors : vErrors.concat(validate99.errors);\n        errors = vErrors.length;\n      }\n    }\n    if (data.columnCount !== undefined) {\n      let data3 = data.columnCount;\n      if (!(typeof data3 == \"number\" && !(data3 % 1) && !isNaN(data3) && isFinite(data3))) {\n        const err3 = {\n          instancePath: instancePath + \"/columnCount\",\n          schemaPath: \"#/properties/columnCount/type\",\n          keyword: \"type\",\n          params: {\n            type: \"integer\"\n          },\n          message: \"must be integer\"\n        };\n        if (vErrors === null) {\n          vErrors = [err3];\n        } else {\n          vErrors.push(err3);\n        }\n        errors++;\n      }\n      if (typeof data3 == \"number\" && isFinite(data3)) {\n        if (data3 < 1 || isNaN(data3)) {\n          const err4 = {\n            instancePath: instancePath + \"/columnCount\",\n            schemaPath: \"#/properties/columnCount/minimum\",\n            keyword: \"minimum\",\n            params: {\n              comparison: \">=\",\n              limit: 1\n            },\n            message: \"must be >= 1\"\n          };\n          if (vErrors === null) {\n            vErrors = [err4];\n          } else {\n            vErrors.push(err4);\n          }\n          errors++;\n        }\n      }\n    }\n    if (data.drawVerticalLine !== undefined) {\n      if (typeof data.drawVerticalLine != \"function\") {\n        const err5 = {\n          instancePath: instancePath + \"/drawVerticalLine\",\n          schemaPath: \"#/properties/drawVerticalLine/typeof\",\n          keyword: \"typeof\",\n          params: {},\n          message: \"should pass \\\"typeof\\\" keyword validation\"\n        };\n        if (vErrors === null) {\n          vErrors = [err5];\n        } else {\n          vErrors.push(err5);\n        }\n        errors++;\n      }\n    }\n  } else {\n    const err6 = {\n      instancePath,\n      schemaPath: \"#/type\",\n      keyword: \"type\",\n      params: {\n        type: \"object\"\n      },\n      message: \"must be object\"\n    };\n    if (vErrors === null) {\n      vErrors = [err6];\n    } else {\n      vErrors.push(err6);\n    }\n    errors++;\n  }\n  validate76.errors = vErrors;\n  return errors === 0;\n}","map":{"version":3,"names":["exports","validate43","schema13","schema15","func8","Object","prototype","hasOwnProperty","schema16","validate46","data","instancePath","parentData","parentDataProperty","rootData","vErrors","errors","err0","schemaPath","keyword","params","type","message","push","validate45","Array","isArray","key0","call","properties","additionalProperty","topBody","undefined","concat","length","topJoin","topLeft","topRight","bottomBody","bottomJoin","bottomLeft","bottomRight","bodyLeft","bodyRight","bodyJoin","headerJoin","joinBody","joinLeft","joinRight","joinJoin","err1","schema17","func0","require","default","validate64","allowedValues","enum","schema18","pattern0","RegExp","schema19","validate68","validate67","alignment","verticalAlignment","data1","err2","width","data2","isNaN","isFinite","err3","err4","comparison","limit","wrapWord","err5","truncate","data4","err6","paddingLeft","data5","err7","paddingRight","data6","err8","err9","validate66","_errs0","valid0","passing0","_errs1","test","key1","replace","_valid0","_errs5","len0","i0","passingSchemas","validate73","border","header","content","missingProperty","data7","columns","columnDefault","drawVerticalLine","drawHorizontalLine","err10","singleLine","err11","err12","validate76","schema22","validate77","validate95","validate99","columnCount","data3"],"sources":["/Users/omarbailey/node_modules/table/dist/generated/validators.js"],"sourcesContent":["\"use strict\";\nexports[\"config.json\"] = validate43;\nconst schema13 = {\n    \"$id\": \"config.json\",\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"border\": {\n            \"$ref\": \"shared.json#/definitions/borders\"\n        },\n        \"header\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"type\": \"string\"\n                },\n                \"alignment\": {\n                    \"$ref\": \"shared.json#/definitions/alignment\"\n                },\n                \"wrapWord\": {\n                    \"type\": \"boolean\"\n                },\n                \"truncate\": {\n                    \"type\": \"integer\"\n                },\n                \"paddingLeft\": {\n                    \"type\": \"integer\"\n                },\n                \"paddingRight\": {\n                    \"type\": \"integer\"\n                }\n            },\n            \"required\": [\"content\"],\n            \"additionalProperties\": false\n        },\n        \"columns\": {\n            \"$ref\": \"shared.json#/definitions/columns\"\n        },\n        \"columnDefault\": {\n            \"$ref\": \"shared.json#/definitions/column\"\n        },\n        \"drawVerticalLine\": {\n            \"typeof\": \"function\"\n        },\n        \"drawHorizontalLine\": {\n            \"typeof\": \"function\"\n        },\n        \"singleLine\": {\n            \"typeof\": \"boolean\"\n        }\n    },\n    \"additionalProperties\": false\n};\nconst schema15 = {\n    \"type\": \"object\",\n    \"properties\": {\n        \"topBody\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"topJoin\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"topLeft\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"topRight\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomBody\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomJoin\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomLeft\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomRight\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bodyLeft\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bodyRight\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bodyJoin\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"headerJoin\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"joinBody\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"joinLeft\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"joinRight\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"joinJoin\": {\n            \"$ref\": \"#/definitions/border\"\n        }\n    },\n    \"additionalProperties\": false\n};\nconst func8 = Object.prototype.hasOwnProperty;\nconst schema16 = {\n    \"type\": \"string\"\n};\nfunction validate46(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (typeof data !== \"string\") {\n        const err0 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"string\"\n            },\n            message: \"must be string\"\n        };\n        if (vErrors === null) {\n            vErrors = [err0];\n        }\n        else {\n            vErrors.push(err0);\n        }\n        errors++;\n    }\n    validate46.errors = vErrors;\n    return errors === 0;\n}\nfunction validate45(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(func8.call(schema15.properties, key0))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.topBody !== undefined) {\n            if (!(validate46(data.topBody, {\n                instancePath: instancePath + \"/topBody\",\n                parentData: data,\n                parentDataProperty: \"topBody\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topJoin !== undefined) {\n            if (!(validate46(data.topJoin, {\n                instancePath: instancePath + \"/topJoin\",\n                parentData: data,\n                parentDataProperty: \"topJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topLeft !== undefined) {\n            if (!(validate46(data.topLeft, {\n                instancePath: instancePath + \"/topLeft\",\n                parentData: data,\n                parentDataProperty: \"topLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topRight !== undefined) {\n            if (!(validate46(data.topRight, {\n                instancePath: instancePath + \"/topRight\",\n                parentData: data,\n                parentDataProperty: \"topRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomBody !== undefined) {\n            if (!(validate46(data.bottomBody, {\n                instancePath: instancePath + \"/bottomBody\",\n                parentData: data,\n                parentDataProperty: \"bottomBody\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomJoin !== undefined) {\n            if (!(validate46(data.bottomJoin, {\n                instancePath: instancePath + \"/bottomJoin\",\n                parentData: data,\n                parentDataProperty: \"bottomJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomLeft !== undefined) {\n            if (!(validate46(data.bottomLeft, {\n                instancePath: instancePath + \"/bottomLeft\",\n                parentData: data,\n                parentDataProperty: \"bottomLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomRight !== undefined) {\n            if (!(validate46(data.bottomRight, {\n                instancePath: instancePath + \"/bottomRight\",\n                parentData: data,\n                parentDataProperty: \"bottomRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyLeft !== undefined) {\n            if (!(validate46(data.bodyLeft, {\n                instancePath: instancePath + \"/bodyLeft\",\n                parentData: data,\n                parentDataProperty: \"bodyLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyRight !== undefined) {\n            if (!(validate46(data.bodyRight, {\n                instancePath: instancePath + \"/bodyRight\",\n                parentData: data,\n                parentDataProperty: \"bodyRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyJoin !== undefined) {\n            if (!(validate46(data.bodyJoin, {\n                instancePath: instancePath + \"/bodyJoin\",\n                parentData: data,\n                parentDataProperty: \"bodyJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.headerJoin !== undefined) {\n            if (!(validate46(data.headerJoin, {\n                instancePath: instancePath + \"/headerJoin\",\n                parentData: data,\n                parentDataProperty: \"headerJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinBody !== undefined) {\n            if (!(validate46(data.joinBody, {\n                instancePath: instancePath + \"/joinBody\",\n                parentData: data,\n                parentDataProperty: \"joinBody\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinLeft !== undefined) {\n            if (!(validate46(data.joinLeft, {\n                instancePath: instancePath + \"/joinLeft\",\n                parentData: data,\n                parentDataProperty: \"joinLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinRight !== undefined) {\n            if (!(validate46(data.joinRight, {\n                instancePath: instancePath + \"/joinRight\",\n                parentData: data,\n                parentDataProperty: \"joinRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinJoin !== undefined) {\n            if (!(validate46(data.joinJoin, {\n                instancePath: instancePath + \"/joinJoin\",\n                parentData: data,\n                parentDataProperty: \"joinJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n    }\n    else {\n        const err1 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        }\n        else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    validate45.errors = vErrors;\n    return errors === 0;\n}\nconst schema17 = {\n    \"type\": \"string\",\n    \"enum\": [\"left\", \"right\", \"center\", \"justify\"]\n};\nconst func0 = require(\"ajv/dist/runtime/equal\").default;\nfunction validate64(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (typeof data !== \"string\") {\n        const err0 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"string\"\n            },\n            message: \"must be string\"\n        };\n        if (vErrors === null) {\n            vErrors = [err0];\n        }\n        else {\n            vErrors.push(err0);\n        }\n        errors++;\n    }\n    if (!((((data === \"left\") || (data === \"right\")) || (data === \"center\")) || (data === \"justify\"))) {\n        const err1 = {\n            instancePath,\n            schemaPath: \"#/enum\",\n            keyword: \"enum\",\n            params: {\n                allowedValues: schema17.enum\n            },\n            message: \"must be equal to one of the allowed values\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        }\n        else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    validate64.errors = vErrors;\n    return errors === 0;\n}\nconst schema18 = {\n    \"oneOf\": [{\n            \"type\": \"object\",\n            \"patternProperties\": {\n                \"^[0-9]+$\": {\n                    \"$ref\": \"#/definitions/column\"\n                }\n            },\n            \"additionalProperties\": false\n        }, {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"#/definitions/column\"\n            }\n        }]\n};\nconst pattern0 = new RegExp(\"^[0-9]+$\", \"u\");\nconst schema19 = {\n    \"type\": \"object\",\n    \"properties\": {\n        \"alignment\": {\n            \"$ref\": \"#/definitions/alignment\"\n        },\n        \"verticalAlignment\": {\n            \"type\": \"string\",\n            \"enum\": [\"top\", \"middle\", \"bottom\"]\n        },\n        \"width\": {\n            \"type\": \"integer\",\n            \"minimum\": 1\n        },\n        \"wrapWord\": {\n            \"type\": \"boolean\"\n        },\n        \"truncate\": {\n            \"type\": \"integer\"\n        },\n        \"paddingLeft\": {\n            \"type\": \"integer\"\n        },\n        \"paddingRight\": {\n            \"type\": \"integer\"\n        }\n    },\n    \"additionalProperties\": false\n};\nfunction validate68(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (typeof data !== \"string\") {\n        const err0 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"string\"\n            },\n            message: \"must be string\"\n        };\n        if (vErrors === null) {\n            vErrors = [err0];\n        }\n        else {\n            vErrors.push(err0);\n        }\n        errors++;\n    }\n    if (!((((data === \"left\") || (data === \"right\")) || (data === \"center\")) || (data === \"justify\"))) {\n        const err1 = {\n            instancePath,\n            schemaPath: \"#/enum\",\n            keyword: \"enum\",\n            params: {\n                allowedValues: schema17.enum\n            },\n            message: \"must be equal to one of the allowed values\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        }\n        else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    validate68.errors = vErrors;\n    return errors === 0;\n}\nfunction validate67(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(((((((key0 === \"alignment\") || (key0 === \"verticalAlignment\")) || (key0 === \"width\")) || (key0 === \"wrapWord\")) || (key0 === \"truncate\")) || (key0 === \"paddingLeft\")) || (key0 === \"paddingRight\"))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.alignment !== undefined) {\n            if (!(validate68(data.alignment, {\n                instancePath: instancePath + \"/alignment\",\n                parentData: data,\n                parentDataProperty: \"alignment\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate68.errors : vErrors.concat(validate68.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.verticalAlignment !== undefined) {\n            let data1 = data.verticalAlignment;\n            if (typeof data1 !== \"string\") {\n                const err1 = {\n                    instancePath: instancePath + \"/verticalAlignment\",\n                    schemaPath: \"#/properties/verticalAlignment/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"string\"\n                    },\n                    message: \"must be string\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err1];\n                }\n                else {\n                    vErrors.push(err1);\n                }\n                errors++;\n            }\n            if (!(((data1 === \"top\") || (data1 === \"middle\")) || (data1 === \"bottom\"))) {\n                const err2 = {\n                    instancePath: instancePath + \"/verticalAlignment\",\n                    schemaPath: \"#/properties/verticalAlignment/enum\",\n                    keyword: \"enum\",\n                    params: {\n                        allowedValues: schema19.properties.verticalAlignment.enum\n                    },\n                    message: \"must be equal to one of the allowed values\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err2];\n                }\n                else {\n                    vErrors.push(err2);\n                }\n                errors++;\n            }\n        }\n        if (data.width !== undefined) {\n            let data2 = data.width;\n            if (!(((typeof data2 == \"number\") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))) {\n                const err3 = {\n                    instancePath: instancePath + \"/width\",\n                    schemaPath: \"#/properties/width/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err3];\n                }\n                else {\n                    vErrors.push(err3);\n                }\n                errors++;\n            }\n            if ((typeof data2 == \"number\") && (isFinite(data2))) {\n                if (data2 < 1 || isNaN(data2)) {\n                    const err4 = {\n                        instancePath: instancePath + \"/width\",\n                        schemaPath: \"#/properties/width/minimum\",\n                        keyword: \"minimum\",\n                        params: {\n                            comparison: \">=\",\n                            limit: 1\n                        },\n                        message: \"must be >= 1\"\n                    };\n                    if (vErrors === null) {\n                        vErrors = [err4];\n                    }\n                    else {\n                        vErrors.push(err4);\n                    }\n                    errors++;\n                }\n            }\n        }\n        if (data.wrapWord !== undefined) {\n            if (typeof data.wrapWord !== \"boolean\") {\n                const err5 = {\n                    instancePath: instancePath + \"/wrapWord\",\n                    schemaPath: \"#/properties/wrapWord/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"boolean\"\n                    },\n                    message: \"must be boolean\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err5];\n                }\n                else {\n                    vErrors.push(err5);\n                }\n                errors++;\n            }\n        }\n        if (data.truncate !== undefined) {\n            let data4 = data.truncate;\n            if (!(((typeof data4 == \"number\") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))) {\n                const err6 = {\n                    instancePath: instancePath + \"/truncate\",\n                    schemaPath: \"#/properties/truncate/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err6];\n                }\n                else {\n                    vErrors.push(err6);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingLeft !== undefined) {\n            let data5 = data.paddingLeft;\n            if (!(((typeof data5 == \"number\") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))) {\n                const err7 = {\n                    instancePath: instancePath + \"/paddingLeft\",\n                    schemaPath: \"#/properties/paddingLeft/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err7];\n                }\n                else {\n                    vErrors.push(err7);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingRight !== undefined) {\n            let data6 = data.paddingRight;\n            if (!(((typeof data6 == \"number\") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))) {\n                const err8 = {\n                    instancePath: instancePath + \"/paddingRight\",\n                    schemaPath: \"#/properties/paddingRight/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err8];\n                }\n                else {\n                    vErrors.push(err8);\n                }\n                errors++;\n            }\n        }\n    }\n    else {\n        const err9 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err9];\n        }\n        else {\n            vErrors.push(err9);\n        }\n        errors++;\n    }\n    validate67.errors = vErrors;\n    return errors === 0;\n}\nfunction validate66(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    const _errs0 = errors;\n    let valid0 = false;\n    let passing0 = null;\n    const _errs1 = errors;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(pattern0.test(key0))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/oneOf/0/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        for (const key1 in data) {\n            if (pattern0.test(key1)) {\n                if (!(validate67(data[key1], {\n                    instancePath: instancePath + \"/\" + key1.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n                    parentData: data,\n                    parentDataProperty: key1,\n                    rootData\n                }))) {\n                    vErrors = vErrors === null ? validate67.errors : vErrors.concat(validate67.errors);\n                    errors = vErrors.length;\n                }\n            }\n        }\n    }\n    else {\n        const err1 = {\n            instancePath,\n            schemaPath: \"#/oneOf/0/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        }\n        else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    var _valid0 = _errs1 === errors;\n    if (_valid0) {\n        valid0 = true;\n        passing0 = 0;\n    }\n    const _errs5 = errors;\n    if (Array.isArray(data)) {\n        const len0 = data.length;\n        for (let i0 = 0; i0 < len0; i0++) {\n            if (!(validate67(data[i0], {\n                instancePath: instancePath + \"/\" + i0,\n                parentData: data,\n                parentDataProperty: i0,\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate67.errors : vErrors.concat(validate67.errors);\n                errors = vErrors.length;\n            }\n        }\n    }\n    else {\n        const err2 = {\n            instancePath,\n            schemaPath: \"#/oneOf/1/type\",\n            keyword: \"type\",\n            params: {\n                type: \"array\"\n            },\n            message: \"must be array\"\n        };\n        if (vErrors === null) {\n            vErrors = [err2];\n        }\n        else {\n            vErrors.push(err2);\n        }\n        errors++;\n    }\n    var _valid0 = _errs5 === errors;\n    if (_valid0 && valid0) {\n        valid0 = false;\n        passing0 = [passing0, 1];\n    }\n    else {\n        if (_valid0) {\n            valid0 = true;\n            passing0 = 1;\n        }\n    }\n    if (!valid0) {\n        const err3 = {\n            instancePath,\n            schemaPath: \"#/oneOf\",\n            keyword: \"oneOf\",\n            params: {\n                passingSchemas: passing0\n            },\n            message: \"must match exactly one schema in oneOf\"\n        };\n        if (vErrors === null) {\n            vErrors = [err3];\n        }\n        else {\n            vErrors.push(err3);\n        }\n        errors++;\n    }\n    else {\n        errors = _errs0;\n        if (vErrors !== null) {\n            if (_errs0) {\n                vErrors.length = _errs0;\n            }\n            else {\n                vErrors = null;\n            }\n        }\n    }\n    validate66.errors = vErrors;\n    return errors === 0;\n}\nfunction validate73(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(((((((key0 === \"alignment\") || (key0 === \"verticalAlignment\")) || (key0 === \"width\")) || (key0 === \"wrapWord\")) || (key0 === \"truncate\")) || (key0 === \"paddingLeft\")) || (key0 === \"paddingRight\"))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.alignment !== undefined) {\n            if (!(validate68(data.alignment, {\n                instancePath: instancePath + \"/alignment\",\n                parentData: data,\n                parentDataProperty: \"alignment\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate68.errors : vErrors.concat(validate68.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.verticalAlignment !== undefined) {\n            let data1 = data.verticalAlignment;\n            if (typeof data1 !== \"string\") {\n                const err1 = {\n                    instancePath: instancePath + \"/verticalAlignment\",\n                    schemaPath: \"#/properties/verticalAlignment/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"string\"\n                    },\n                    message: \"must be string\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err1];\n                }\n                else {\n                    vErrors.push(err1);\n                }\n                errors++;\n            }\n            if (!(((data1 === \"top\") || (data1 === \"middle\")) || (data1 === \"bottom\"))) {\n                const err2 = {\n                    instancePath: instancePath + \"/verticalAlignment\",\n                    schemaPath: \"#/properties/verticalAlignment/enum\",\n                    keyword: \"enum\",\n                    params: {\n                        allowedValues: schema19.properties.verticalAlignment.enum\n                    },\n                    message: \"must be equal to one of the allowed values\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err2];\n                }\n                else {\n                    vErrors.push(err2);\n                }\n                errors++;\n            }\n        }\n        if (data.width !== undefined) {\n            let data2 = data.width;\n            if (!(((typeof data2 == \"number\") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))) {\n                const err3 = {\n                    instancePath: instancePath + \"/width\",\n                    schemaPath: \"#/properties/width/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err3];\n                }\n                else {\n                    vErrors.push(err3);\n                }\n                errors++;\n            }\n            if ((typeof data2 == \"number\") && (isFinite(data2))) {\n                if (data2 < 1 || isNaN(data2)) {\n                    const err4 = {\n                        instancePath: instancePath + \"/width\",\n                        schemaPath: \"#/properties/width/minimum\",\n                        keyword: \"minimum\",\n                        params: {\n                            comparison: \">=\",\n                            limit: 1\n                        },\n                        message: \"must be >= 1\"\n                    };\n                    if (vErrors === null) {\n                        vErrors = [err4];\n                    }\n                    else {\n                        vErrors.push(err4);\n                    }\n                    errors++;\n                }\n            }\n        }\n        if (data.wrapWord !== undefined) {\n            if (typeof data.wrapWord !== \"boolean\") {\n                const err5 = {\n                    instancePath: instancePath + \"/wrapWord\",\n                    schemaPath: \"#/properties/wrapWord/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"boolean\"\n                    },\n                    message: \"must be boolean\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err5];\n                }\n                else {\n                    vErrors.push(err5);\n                }\n                errors++;\n            }\n        }\n        if (data.truncate !== undefined) {\n            let data4 = data.truncate;\n            if (!(((typeof data4 == \"number\") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))) {\n                const err6 = {\n                    instancePath: instancePath + \"/truncate\",\n                    schemaPath: \"#/properties/truncate/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err6];\n                }\n                else {\n                    vErrors.push(err6);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingLeft !== undefined) {\n            let data5 = data.paddingLeft;\n            if (!(((typeof data5 == \"number\") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))) {\n                const err7 = {\n                    instancePath: instancePath + \"/paddingLeft\",\n                    schemaPath: \"#/properties/paddingLeft/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err7];\n                }\n                else {\n                    vErrors.push(err7);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingRight !== undefined) {\n            let data6 = data.paddingRight;\n            if (!(((typeof data6 == \"number\") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))) {\n                const err8 = {\n                    instancePath: instancePath + \"/paddingRight\",\n                    schemaPath: \"#/properties/paddingRight/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err8];\n                }\n                else {\n                    vErrors.push(err8);\n                }\n                errors++;\n            }\n        }\n    }\n    else {\n        const err9 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err9];\n        }\n        else {\n            vErrors.push(err9);\n        }\n        errors++;\n    }\n    validate73.errors = vErrors;\n    return errors === 0;\n}\nfunction validate43(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    /*# sourceURL=\"config.json\" */ ;\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(((((((key0 === \"border\") || (key0 === \"header\")) || (key0 === \"columns\")) || (key0 === \"columnDefault\")) || (key0 === \"drawVerticalLine\")) || (key0 === \"drawHorizontalLine\")) || (key0 === \"singleLine\"))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.border !== undefined) {\n            if (!(validate45(data.border, {\n                instancePath: instancePath + \"/border\",\n                parentData: data,\n                parentDataProperty: \"border\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate45.errors : vErrors.concat(validate45.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.header !== undefined) {\n            let data1 = data.header;\n            if (data1 && typeof data1 == \"object\" && !Array.isArray(data1)) {\n                if (data1.content === undefined) {\n                    const err1 = {\n                        instancePath: instancePath + \"/header\",\n                        schemaPath: \"#/properties/header/required\",\n                        keyword: \"required\",\n                        params: {\n                            missingProperty: \"content\"\n                        },\n                        message: \"must have required property '\" + \"content\" + \"'\"\n                    };\n                    if (vErrors === null) {\n                        vErrors = [err1];\n                    }\n                    else {\n                        vErrors.push(err1);\n                    }\n                    errors++;\n                }\n                for (const key1 in data1) {\n                    if (!((((((key1 === \"content\") || (key1 === \"alignment\")) || (key1 === \"wrapWord\")) || (key1 === \"truncate\")) || (key1 === \"paddingLeft\")) || (key1 === \"paddingRight\"))) {\n                        const err2 = {\n                            instancePath: instancePath + \"/header\",\n                            schemaPath: \"#/properties/header/additionalProperties\",\n                            keyword: \"additionalProperties\",\n                            params: {\n                                additionalProperty: key1\n                            },\n                            message: \"must NOT have additional properties\"\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err2];\n                        }\n                        else {\n                            vErrors.push(err2);\n                        }\n                        errors++;\n                    }\n                }\n                if (data1.content !== undefined) {\n                    if (typeof data1.content !== \"string\") {\n                        const err3 = {\n                            instancePath: instancePath + \"/header/content\",\n                            schemaPath: \"#/properties/header/properties/content/type\",\n                            keyword: \"type\",\n                            params: {\n                                type: \"string\"\n                            },\n                            message: \"must be string\"\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err3];\n                        }\n                        else {\n                            vErrors.push(err3);\n                        }\n                        errors++;\n                    }\n                }\n                if (data1.alignment !== undefined) {\n                    if (!(validate64(data1.alignment, {\n                        instancePath: instancePath + \"/header/alignment\",\n                        parentData: data1,\n                        parentDataProperty: \"alignment\",\n                        rootData\n                    }))) {\n                        vErrors = vErrors === null ? validate64.errors : vErrors.concat(validate64.errors);\n                        errors = vErrors.length;\n                    }\n                }\n                if (data1.wrapWord !== undefined) {\n                    if (typeof data1.wrapWord !== \"boolean\") {\n                        const err4 = {\n                            instancePath: instancePath + \"/header/wrapWord\",\n                            schemaPath: \"#/properties/header/properties/wrapWord/type\",\n                            keyword: \"type\",\n                            params: {\n                                type: \"boolean\"\n                            },\n                            message: \"must be boolean\"\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err4];\n                        }\n                        else {\n                            vErrors.push(err4);\n                        }\n                        errors++;\n                    }\n                }\n                if (data1.truncate !== undefined) {\n                    let data5 = data1.truncate;\n                    if (!(((typeof data5 == \"number\") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))) {\n                        const err5 = {\n                            instancePath: instancePath + \"/header/truncate\",\n                            schemaPath: \"#/properties/header/properties/truncate/type\",\n                            keyword: \"type\",\n                            params: {\n                                type: \"integer\"\n                            },\n                            message: \"must be integer\"\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err5];\n                        }\n                        else {\n                            vErrors.push(err5);\n                        }\n                        errors++;\n                    }\n                }\n                if (data1.paddingLeft !== undefined) {\n                    let data6 = data1.paddingLeft;\n                    if (!(((typeof data6 == \"number\") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))) {\n                        const err6 = {\n                            instancePath: instancePath + \"/header/paddingLeft\",\n                            schemaPath: \"#/properties/header/properties/paddingLeft/type\",\n                            keyword: \"type\",\n                            params: {\n                                type: \"integer\"\n                            },\n                            message: \"must be integer\"\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err6];\n                        }\n                        else {\n                            vErrors.push(err6);\n                        }\n                        errors++;\n                    }\n                }\n                if (data1.paddingRight !== undefined) {\n                    let data7 = data1.paddingRight;\n                    if (!(((typeof data7 == \"number\") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7)))) {\n                        const err7 = {\n                            instancePath: instancePath + \"/header/paddingRight\",\n                            schemaPath: \"#/properties/header/properties/paddingRight/type\",\n                            keyword: \"type\",\n                            params: {\n                                type: \"integer\"\n                            },\n                            message: \"must be integer\"\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err7];\n                        }\n                        else {\n                            vErrors.push(err7);\n                        }\n                        errors++;\n                    }\n                }\n            }\n            else {\n                const err8 = {\n                    instancePath: instancePath + \"/header\",\n                    schemaPath: \"#/properties/header/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"object\"\n                    },\n                    message: \"must be object\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err8];\n                }\n                else {\n                    vErrors.push(err8);\n                }\n                errors++;\n            }\n        }\n        if (data.columns !== undefined) {\n            if (!(validate66(data.columns, {\n                instancePath: instancePath + \"/columns\",\n                parentData: data,\n                parentDataProperty: \"columns\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate66.errors : vErrors.concat(validate66.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.columnDefault !== undefined) {\n            if (!(validate73(data.columnDefault, {\n                instancePath: instancePath + \"/columnDefault\",\n                parentData: data,\n                parentDataProperty: \"columnDefault\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate73.errors : vErrors.concat(validate73.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.drawVerticalLine !== undefined) {\n            if (typeof data.drawVerticalLine != \"function\") {\n                const err9 = {\n                    instancePath: instancePath + \"/drawVerticalLine\",\n                    schemaPath: \"#/properties/drawVerticalLine/typeof\",\n                    keyword: \"typeof\",\n                    params: {},\n                    message: \"should pass \\\"typeof\\\" keyword validation\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err9];\n                }\n                else {\n                    vErrors.push(err9);\n                }\n                errors++;\n            }\n        }\n        if (data.drawHorizontalLine !== undefined) {\n            if (typeof data.drawHorizontalLine != \"function\") {\n                const err10 = {\n                    instancePath: instancePath + \"/drawHorizontalLine\",\n                    schemaPath: \"#/properties/drawHorizontalLine/typeof\",\n                    keyword: \"typeof\",\n                    params: {},\n                    message: \"should pass \\\"typeof\\\" keyword validation\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err10];\n                }\n                else {\n                    vErrors.push(err10);\n                }\n                errors++;\n            }\n        }\n        if (data.singleLine !== undefined) {\n            if (typeof data.singleLine != \"boolean\") {\n                const err11 = {\n                    instancePath: instancePath + \"/singleLine\",\n                    schemaPath: \"#/properties/singleLine/typeof\",\n                    keyword: \"typeof\",\n                    params: {},\n                    message: \"should pass \\\"typeof\\\" keyword validation\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err11];\n                }\n                else {\n                    vErrors.push(err11);\n                }\n                errors++;\n            }\n        }\n    }\n    else {\n        const err12 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err12];\n        }\n        else {\n            vErrors.push(err12);\n        }\n        errors++;\n    }\n    validate43.errors = vErrors;\n    return errors === 0;\n}\nexports[\"streamConfig.json\"] = validate76;\nconst schema22 = {\n    \"$id\": \"streamConfig.json\",\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"border\": {\n            \"$ref\": \"shared.json#/definitions/borders\"\n        },\n        \"columns\": {\n            \"$ref\": \"shared.json#/definitions/columns\"\n        },\n        \"columnDefault\": {\n            \"$ref\": \"shared.json#/definitions/column\"\n        },\n        \"columnCount\": {\n            \"type\": \"integer\",\n            \"minimum\": 1\n        },\n        \"drawVerticalLine\": {\n            \"typeof\": \"function\"\n        }\n    },\n    \"required\": [\"columnDefault\", \"columnCount\"],\n    \"additionalProperties\": false\n};\nfunction validate77(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(func8.call(schema15.properties, key0))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.topBody !== undefined) {\n            if (!(validate46(data.topBody, {\n                instancePath: instancePath + \"/topBody\",\n                parentData: data,\n                parentDataProperty: \"topBody\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topJoin !== undefined) {\n            if (!(validate46(data.topJoin, {\n                instancePath: instancePath + \"/topJoin\",\n                parentData: data,\n                parentDataProperty: \"topJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topLeft !== undefined) {\n            if (!(validate46(data.topLeft, {\n                instancePath: instancePath + \"/topLeft\",\n                parentData: data,\n                parentDataProperty: \"topLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topRight !== undefined) {\n            if (!(validate46(data.topRight, {\n                instancePath: instancePath + \"/topRight\",\n                parentData: data,\n                parentDataProperty: \"topRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomBody !== undefined) {\n            if (!(validate46(data.bottomBody, {\n                instancePath: instancePath + \"/bottomBody\",\n                parentData: data,\n                parentDataProperty: \"bottomBody\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomJoin !== undefined) {\n            if (!(validate46(data.bottomJoin, {\n                instancePath: instancePath + \"/bottomJoin\",\n                parentData: data,\n                parentDataProperty: \"bottomJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomLeft !== undefined) {\n            if (!(validate46(data.bottomLeft, {\n                instancePath: instancePath + \"/bottomLeft\",\n                parentData: data,\n                parentDataProperty: \"bottomLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomRight !== undefined) {\n            if (!(validate46(data.bottomRight, {\n                instancePath: instancePath + \"/bottomRight\",\n                parentData: data,\n                parentDataProperty: \"bottomRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyLeft !== undefined) {\n            if (!(validate46(data.bodyLeft, {\n                instancePath: instancePath + \"/bodyLeft\",\n                parentData: data,\n                parentDataProperty: \"bodyLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyRight !== undefined) {\n            if (!(validate46(data.bodyRight, {\n                instancePath: instancePath + \"/bodyRight\",\n                parentData: data,\n                parentDataProperty: \"bodyRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyJoin !== undefined) {\n            if (!(validate46(data.bodyJoin, {\n                instancePath: instancePath + \"/bodyJoin\",\n                parentData: data,\n                parentDataProperty: \"bodyJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.headerJoin !== undefined) {\n            if (!(validate46(data.headerJoin, {\n                instancePath: instancePath + \"/headerJoin\",\n                parentData: data,\n                parentDataProperty: \"headerJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinBody !== undefined) {\n            if (!(validate46(data.joinBody, {\n                instancePath: instancePath + \"/joinBody\",\n                parentData: data,\n                parentDataProperty: \"joinBody\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinLeft !== undefined) {\n            if (!(validate46(data.joinLeft, {\n                instancePath: instancePath + \"/joinLeft\",\n                parentData: data,\n                parentDataProperty: \"joinLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinRight !== undefined) {\n            if (!(validate46(data.joinRight, {\n                instancePath: instancePath + \"/joinRight\",\n                parentData: data,\n                parentDataProperty: \"joinRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinJoin !== undefined) {\n            if (!(validate46(data.joinJoin, {\n                instancePath: instancePath + \"/joinJoin\",\n                parentData: data,\n                parentDataProperty: \"joinJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n    }\n    else {\n        const err1 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        }\n        else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    validate77.errors = vErrors;\n    return errors === 0;\n}\nfunction validate95(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    const _errs0 = errors;\n    let valid0 = false;\n    let passing0 = null;\n    const _errs1 = errors;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(pattern0.test(key0))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/oneOf/0/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        for (const key1 in data) {\n            if (pattern0.test(key1)) {\n                if (!(validate67(data[key1], {\n                    instancePath: instancePath + \"/\" + key1.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n                    parentData: data,\n                    parentDataProperty: key1,\n                    rootData\n                }))) {\n                    vErrors = vErrors === null ? validate67.errors : vErrors.concat(validate67.errors);\n                    errors = vErrors.length;\n                }\n            }\n        }\n    }\n    else {\n        const err1 = {\n            instancePath,\n            schemaPath: \"#/oneOf/0/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        }\n        else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    var _valid0 = _errs1 === errors;\n    if (_valid0) {\n        valid0 = true;\n        passing0 = 0;\n    }\n    const _errs5 = errors;\n    if (Array.isArray(data)) {\n        const len0 = data.length;\n        for (let i0 = 0; i0 < len0; i0++) {\n            if (!(validate67(data[i0], {\n                instancePath: instancePath + \"/\" + i0,\n                parentData: data,\n                parentDataProperty: i0,\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate67.errors : vErrors.concat(validate67.errors);\n                errors = vErrors.length;\n            }\n        }\n    }\n    else {\n        const err2 = {\n            instancePath,\n            schemaPath: \"#/oneOf/1/type\",\n            keyword: \"type\",\n            params: {\n                type: \"array\"\n            },\n            message: \"must be array\"\n        };\n        if (vErrors === null) {\n            vErrors = [err2];\n        }\n        else {\n            vErrors.push(err2);\n        }\n        errors++;\n    }\n    var _valid0 = _errs5 === errors;\n    if (_valid0 && valid0) {\n        valid0 = false;\n        passing0 = [passing0, 1];\n    }\n    else {\n        if (_valid0) {\n            valid0 = true;\n            passing0 = 1;\n        }\n    }\n    if (!valid0) {\n        const err3 = {\n            instancePath,\n            schemaPath: \"#/oneOf\",\n            keyword: \"oneOf\",\n            params: {\n                passingSchemas: passing0\n            },\n            message: \"must match exactly one schema in oneOf\"\n        };\n        if (vErrors === null) {\n            vErrors = [err3];\n        }\n        else {\n            vErrors.push(err3);\n        }\n        errors++;\n    }\n    else {\n        errors = _errs0;\n        if (vErrors !== null) {\n            if (_errs0) {\n                vErrors.length = _errs0;\n            }\n            else {\n                vErrors = null;\n            }\n        }\n    }\n    validate95.errors = vErrors;\n    return errors === 0;\n}\nfunction validate99(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(((((((key0 === \"alignment\") || (key0 === \"verticalAlignment\")) || (key0 === \"width\")) || (key0 === \"wrapWord\")) || (key0 === \"truncate\")) || (key0 === \"paddingLeft\")) || (key0 === \"paddingRight\"))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.alignment !== undefined) {\n            if (!(validate68(data.alignment, {\n                instancePath: instancePath + \"/alignment\",\n                parentData: data,\n                parentDataProperty: \"alignment\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate68.errors : vErrors.concat(validate68.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.verticalAlignment !== undefined) {\n            let data1 = data.verticalAlignment;\n            if (typeof data1 !== \"string\") {\n                const err1 = {\n                    instancePath: instancePath + \"/verticalAlignment\",\n                    schemaPath: \"#/properties/verticalAlignment/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"string\"\n                    },\n                    message: \"must be string\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err1];\n                }\n                else {\n                    vErrors.push(err1);\n                }\n                errors++;\n            }\n            if (!(((data1 === \"top\") || (data1 === \"middle\")) || (data1 === \"bottom\"))) {\n                const err2 = {\n                    instancePath: instancePath + \"/verticalAlignment\",\n                    schemaPath: \"#/properties/verticalAlignment/enum\",\n                    keyword: \"enum\",\n                    params: {\n                        allowedValues: schema19.properties.verticalAlignment.enum\n                    },\n                    message: \"must be equal to one of the allowed values\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err2];\n                }\n                else {\n                    vErrors.push(err2);\n                }\n                errors++;\n            }\n        }\n        if (data.width !== undefined) {\n            let data2 = data.width;\n            if (!(((typeof data2 == \"number\") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))) {\n                const err3 = {\n                    instancePath: instancePath + \"/width\",\n                    schemaPath: \"#/properties/width/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err3];\n                }\n                else {\n                    vErrors.push(err3);\n                }\n                errors++;\n            }\n            if ((typeof data2 == \"number\") && (isFinite(data2))) {\n                if (data2 < 1 || isNaN(data2)) {\n                    const err4 = {\n                        instancePath: instancePath + \"/width\",\n                        schemaPath: \"#/properties/width/minimum\",\n                        keyword: \"minimum\",\n                        params: {\n                            comparison: \">=\",\n                            limit: 1\n                        },\n                        message: \"must be >= 1\"\n                    };\n                    if (vErrors === null) {\n                        vErrors = [err4];\n                    }\n                    else {\n                        vErrors.push(err4);\n                    }\n                    errors++;\n                }\n            }\n        }\n        if (data.wrapWord !== undefined) {\n            if (typeof data.wrapWord !== \"boolean\") {\n                const err5 = {\n                    instancePath: instancePath + \"/wrapWord\",\n                    schemaPath: \"#/properties/wrapWord/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"boolean\"\n                    },\n                    message: \"must be boolean\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err5];\n                }\n                else {\n                    vErrors.push(err5);\n                }\n                errors++;\n            }\n        }\n        if (data.truncate !== undefined) {\n            let data4 = data.truncate;\n            if (!(((typeof data4 == \"number\") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))) {\n                const err6 = {\n                    instancePath: instancePath + \"/truncate\",\n                    schemaPath: \"#/properties/truncate/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err6];\n                }\n                else {\n                    vErrors.push(err6);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingLeft !== undefined) {\n            let data5 = data.paddingLeft;\n            if (!(((typeof data5 == \"number\") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))) {\n                const err7 = {\n                    instancePath: instancePath + \"/paddingLeft\",\n                    schemaPath: \"#/properties/paddingLeft/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err7];\n                }\n                else {\n                    vErrors.push(err7);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingRight !== undefined) {\n            let data6 = data.paddingRight;\n            if (!(((typeof data6 == \"number\") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))) {\n                const err8 = {\n                    instancePath: instancePath + \"/paddingRight\",\n                    schemaPath: \"#/properties/paddingRight/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err8];\n                }\n                else {\n                    vErrors.push(err8);\n                }\n                errors++;\n            }\n        }\n    }\n    else {\n        const err9 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err9];\n        }\n        else {\n            vErrors.push(err9);\n        }\n        errors++;\n    }\n    validate99.errors = vErrors;\n    return errors === 0;\n}\nfunction validate76(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    /*# sourceURL=\"streamConfig.json\" */ ;\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        if (data.columnDefault === undefined) {\n            const err0 = {\n                instancePath,\n                schemaPath: \"#/required\",\n                keyword: \"required\",\n                params: {\n                    missingProperty: \"columnDefault\"\n                },\n                message: \"must have required property '\" + \"columnDefault\" + \"'\"\n            };\n            if (vErrors === null) {\n                vErrors = [err0];\n            }\n            else {\n                vErrors.push(err0);\n            }\n            errors++;\n        }\n        if (data.columnCount === undefined) {\n            const err1 = {\n                instancePath,\n                schemaPath: \"#/required\",\n                keyword: \"required\",\n                params: {\n                    missingProperty: \"columnCount\"\n                },\n                message: \"must have required property '\" + \"columnCount\" + \"'\"\n            };\n            if (vErrors === null) {\n                vErrors = [err1];\n            }\n            else {\n                vErrors.push(err1);\n            }\n            errors++;\n        }\n        for (const key0 in data) {\n            if (!(((((key0 === \"border\") || (key0 === \"columns\")) || (key0 === \"columnDefault\")) || (key0 === \"columnCount\")) || (key0 === \"drawVerticalLine\"))) {\n                const err2 = {\n                    instancePath,\n                    schemaPath: \"#/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err2];\n                }\n                else {\n                    vErrors.push(err2);\n                }\n                errors++;\n            }\n        }\n        if (data.border !== undefined) {\n            if (!(validate77(data.border, {\n                instancePath: instancePath + \"/border\",\n                parentData: data,\n                parentDataProperty: \"border\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate77.errors : vErrors.concat(validate77.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.columns !== undefined) {\n            if (!(validate95(data.columns, {\n                instancePath: instancePath + \"/columns\",\n                parentData: data,\n                parentDataProperty: \"columns\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate95.errors : vErrors.concat(validate95.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.columnDefault !== undefined) {\n            if (!(validate99(data.columnDefault, {\n                instancePath: instancePath + \"/columnDefault\",\n                parentData: data,\n                parentDataProperty: \"columnDefault\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate99.errors : vErrors.concat(validate99.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.columnCount !== undefined) {\n            let data3 = data.columnCount;\n            if (!(((typeof data3 == \"number\") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))) {\n                const err3 = {\n                    instancePath: instancePath + \"/columnCount\",\n                    schemaPath: \"#/properties/columnCount/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err3];\n                }\n                else {\n                    vErrors.push(err3);\n                }\n                errors++;\n            }\n            if ((typeof data3 == \"number\") && (isFinite(data3))) {\n                if (data3 < 1 || isNaN(data3)) {\n                    const err4 = {\n                        instancePath: instancePath + \"/columnCount\",\n                        schemaPath: \"#/properties/columnCount/minimum\",\n                        keyword: \"minimum\",\n                        params: {\n                            comparison: \">=\",\n                            limit: 1\n                        },\n                        message: \"must be >= 1\"\n                    };\n                    if (vErrors === null) {\n                        vErrors = [err4];\n                    }\n                    else {\n                        vErrors.push(err4);\n                    }\n                    errors++;\n                }\n            }\n        }\n        if (data.drawVerticalLine !== undefined) {\n            if (typeof data.drawVerticalLine != \"function\") {\n                const err5 = {\n                    instancePath: instancePath + \"/drawVerticalLine\",\n                    schemaPath: \"#/properties/drawVerticalLine/typeof\",\n                    keyword: \"typeof\",\n                    params: {},\n                    message: \"should pass \\\"typeof\\\" keyword validation\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err5];\n                }\n                else {\n                    vErrors.push(err5);\n                }\n                errors++;\n            }\n        }\n    }\n    else {\n        const err6 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err6];\n        }\n        else {\n            vErrors.push(err6);\n        }\n        errors++;\n    }\n    validate76.errors = vErrors;\n    return errors === 0;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}