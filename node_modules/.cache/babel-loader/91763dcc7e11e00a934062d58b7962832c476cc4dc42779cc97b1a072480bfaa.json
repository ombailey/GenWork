{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Package wide configuration class\n */\nvar Configs = /** @class */function () {\n  function Configs(options) {\n    var _a = __assign({\n        tableDisplayConfig: {},\n        tableMaxRow: 10,\n        tableMaxColInConsole: 10,\n        dtypeTestLim: 500,\n        lowMemoryMode: false\n      }, options),\n      tableDisplayConfig = _a.tableDisplayConfig,\n      tableMaxRow = _a.tableMaxRow,\n      tableMaxColInConsole = _a.tableMaxColInConsole,\n      dtypeTestLim = _a.dtypeTestLim,\n      lowMemoryMode = _a.lowMemoryMode;\n    this.tableDisplayConfig = tableDisplayConfig;\n    this.tableMaxRow = tableMaxRow; // The maximum number of rows to display in console\n    this.tableMaxColInConsole = tableMaxColInConsole; // The maximum number of columns to display in console\n    this.dtypeTestLim = dtypeTestLim; // The number of rows to use when inferring data type\n    this.lowMemoryMode = lowMemoryMode; // Whether to use minimal memory or not.\n  }\n\n  Configs.prototype.setTableDisplayConfig = function (config) {\n    this.tableDisplayConfig = config;\n  };\n  Object.defineProperty(Configs.prototype, \"getTableDisplayConfig\", {\n    get: function () {\n      return this.tableDisplayConfig;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Configs.prototype.setTableMaxColInConsole = function (val) {\n    this.tableMaxColInConsole = val;\n  };\n  Object.defineProperty(Configs.prototype, \"getTableMaxColInConsole\", {\n    get: function () {\n      return this.tableMaxColInConsole;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Configs.prototype.setMaxRow = function (val) {\n    this.tableMaxRow = val;\n  };\n  Object.defineProperty(Configs.prototype, \"getMaxRow\", {\n    get: function () {\n      return this.tableMaxRow;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Configs.prototype, \"getDtypeTestLim\", {\n    get: function () {\n      return this.dtypeTestLim;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Configs.prototype.setDtypeTestLim = function (val) {\n    this.dtypeTestLim = val;\n  };\n  Object.defineProperty(Configs.prototype, \"isLowMemoryMode\", {\n    get: function () {\n      return this.lowMemoryMode;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Configs.prototype.setIsLowMemoryMode = function (val) {\n    this.lowMemoryMode = val;\n  };\n  return Configs;\n}();\nexports.default = Configs;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","exports","value","Configs","options","_a","tableDisplayConfig","tableMaxRow","tableMaxColInConsole","dtypeTestLim","lowMemoryMode","setTableDisplayConfig","config","get","enumerable","configurable","setTableMaxColInConsole","val","setMaxRow","setDtypeTestLim","setIsLowMemoryMode","default"],"sources":["/Users/omarbailey/node_modules/danfojs/dist/danfojs-base/shared/config.js"],"sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package wide configuration class\n */\nvar Configs = /** @class */ (function () {\n    function Configs(options) {\n        var _a = __assign({ tableDisplayConfig: {}, tableMaxRow: 10, tableMaxColInConsole: 10, dtypeTestLim: 500, lowMemoryMode: false }, options), tableDisplayConfig = _a.tableDisplayConfig, tableMaxRow = _a.tableMaxRow, tableMaxColInConsole = _a.tableMaxColInConsole, dtypeTestLim = _a.dtypeTestLim, lowMemoryMode = _a.lowMemoryMode;\n        this.tableDisplayConfig = tableDisplayConfig;\n        this.tableMaxRow = tableMaxRow; // The maximum number of rows to display in console\n        this.tableMaxColInConsole = tableMaxColInConsole; // The maximum number of columns to display in console\n        this.dtypeTestLim = dtypeTestLim; // The number of rows to use when inferring data type\n        this.lowMemoryMode = lowMemoryMode; // Whether to use minimal memory or not.\n    }\n    Configs.prototype.setTableDisplayConfig = function (config) {\n        this.tableDisplayConfig = config;\n    };\n    Object.defineProperty(Configs.prototype, \"getTableDisplayConfig\", {\n        get: function () {\n            return this.tableDisplayConfig;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Configs.prototype.setTableMaxColInConsole = function (val) {\n        this.tableMaxColInConsole = val;\n    };\n    Object.defineProperty(Configs.prototype, \"getTableMaxColInConsole\", {\n        get: function () {\n            return this.tableMaxColInConsole;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Configs.prototype.setMaxRow = function (val) {\n        this.tableMaxRow = val;\n    };\n    Object.defineProperty(Configs.prototype, \"getMaxRow\", {\n        get: function () {\n            return this.tableMaxRow;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Configs.prototype, \"getDtypeTestLim\", {\n        get: function () {\n            return this.dtypeTestLim;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Configs.prototype.setDtypeTestLim = function (val) {\n        this.dtypeTestLim = val;\n    };\n    Object.defineProperty(Configs.prototype, \"isLowMemoryMode\", {\n        get: function () {\n            return this.lowMemoryMode;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Configs.prototype.setIsLowMemoryMode = function (val) {\n        this.lowMemoryMode = val;\n    };\n    return Configs;\n}());\nexports.default = Configs;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}