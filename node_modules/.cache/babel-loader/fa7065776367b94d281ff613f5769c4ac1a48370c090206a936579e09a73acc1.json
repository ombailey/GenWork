{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStirlingS2 = void 0;\nvar _factory = require(\"../../utils/factory.js\");\nvar name = 'stirlingS2';\nvar dependencies = ['typed', 'addScalar', 'subtract', 'multiplyScalar', 'divideScalar', 'pow', 'factorial', 'combinations', 'isNegative', 'isInteger', 'larger'];\nvar createStirlingS2 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    addScalar = _ref.addScalar,\n    subtract = _ref.subtract,\n    multiplyScalar = _ref.multiplyScalar,\n    divideScalar = _ref.divideScalar,\n    pow = _ref.pow,\n    factorial = _ref.factorial,\n    combinations = _ref.combinations,\n    isNegative = _ref.isNegative,\n    isInteger = _ref.isInteger,\n    larger = _ref.larger;\n\n  /**\n   * The Stirling numbers of the second kind, counts the number of ways to partition\n   * a set of n labelled objects into k nonempty unlabelled subsets.\n   * stirlingS2 only takes integer arguments.\n   * The following condition must be enforced: k <= n.\n   *\n   *  If n = k or k = 1, then s(n,k) = 1\n   *\n   * Syntax:\n   *\n   *   math.stirlingS2(n, k)\n   *\n   * Examples:\n   *\n   *    math.stirlingS2(5, 3) //returns 25\n   *\n   * See also:\n   *\n   *    bellNumbers\n   *\n   * @param {Number | BigNumber} n    Total number of objects in the set\n   * @param {Number | BigNumber} k    Number of objects in the subset\n   * @return {Number | BigNumber}     S(n,k)\n   */\n  return typed(name, {\n    'number | BigNumber, number | BigNumber': function numberBigNumberNumberBigNumber(n, k) {\n      if (!isInteger(n) || isNegative(n) || !isInteger(k) || isNegative(k)) {\n        throw new TypeError('Non-negative integer value expected in function stirlingS2');\n      } else if (larger(k, n)) {\n        throw new TypeError('k must be less than or equal to n in function stirlingS2');\n      } // 1/k! Sum(i=0 -> k) [(-1)^(k-i)*C(k,j)* i^n]\n\n      var kFactorial = factorial(k);\n      var result = 0;\n      for (var i = 0; i <= k; i++) {\n        var negativeOne = pow(-1, subtract(k, i));\n        var kChooseI = combinations(k, i);\n        var iPower = pow(i, n);\n        result = addScalar(result, multiplyScalar(multiplyScalar(kChooseI, iPower), negativeOne));\n      }\n      return divideScalar(result, kFactorial);\n    }\n  });\n});\nexports.createStirlingS2 = createStirlingS2;","map":{"version":3,"names":["Object","defineProperty","exports","value","createStirlingS2","_factory","require","name","dependencies","factory","_ref","typed","addScalar","subtract","multiplyScalar","divideScalar","pow","factorial","combinations","isNegative","isInteger","larger","numberBigNumberNumberBigNumber","n","k","TypeError","kFactorial","result","i","negativeOne","kChooseI","iPower"],"sources":["/Users/omarbailey/node_modules/mathjs/lib/cjs/function/combinatorics/stirlingS2.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStirlingS2 = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'stirlingS2';\nvar dependencies = ['typed', 'addScalar', 'subtract', 'multiplyScalar', 'divideScalar', 'pow', 'factorial', 'combinations', 'isNegative', 'isInteger', 'larger'];\nvar createStirlingS2 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      addScalar = _ref.addScalar,\n      subtract = _ref.subtract,\n      multiplyScalar = _ref.multiplyScalar,\n      divideScalar = _ref.divideScalar,\n      pow = _ref.pow,\n      factorial = _ref.factorial,\n      combinations = _ref.combinations,\n      isNegative = _ref.isNegative,\n      isInteger = _ref.isInteger,\n      larger = _ref.larger;\n\n  /**\n   * The Stirling numbers of the second kind, counts the number of ways to partition\n   * a set of n labelled objects into k nonempty unlabelled subsets.\n   * stirlingS2 only takes integer arguments.\n   * The following condition must be enforced: k <= n.\n   *\n   *  If n = k or k = 1, then s(n,k) = 1\n   *\n   * Syntax:\n   *\n   *   math.stirlingS2(n, k)\n   *\n   * Examples:\n   *\n   *    math.stirlingS2(5, 3) //returns 25\n   *\n   * See also:\n   *\n   *    bellNumbers\n   *\n   * @param {Number | BigNumber} n    Total number of objects in the set\n   * @param {Number | BigNumber} k    Number of objects in the subset\n   * @return {Number | BigNumber}     S(n,k)\n   */\n  return typed(name, {\n    'number | BigNumber, number | BigNumber': function numberBigNumberNumberBigNumber(n, k) {\n      if (!isInteger(n) || isNegative(n) || !isInteger(k) || isNegative(k)) {\n        throw new TypeError('Non-negative integer value expected in function stirlingS2');\n      } else if (larger(k, n)) {\n        throw new TypeError('k must be less than or equal to n in function stirlingS2');\n      } // 1/k! Sum(i=0 -> k) [(-1)^(k-i)*C(k,j)* i^n]\n\n\n      var kFactorial = factorial(k);\n      var result = 0;\n\n      for (var i = 0; i <= k; i++) {\n        var negativeOne = pow(-1, subtract(k, i));\n        var kChooseI = combinations(k, i);\n        var iPower = pow(i, n);\n        result = addScalar(result, multiplyScalar(multiplyScalar(kChooseI, iPower), negativeOne));\n      }\n\n      return divideScalar(result, kFactorial);\n    }\n  });\n});\nexports.createStirlingS2 = createStirlingS2;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,gBAAgB,GAAG,KAAK,CAAC;AAEjC,IAAIC,QAAQ,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAEhD,IAAIC,IAAI,GAAG,YAAY;AACvB,IAAIC,YAAY,GAAG,CAAC,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,gBAAgB,EAAE,cAAc,EAAE,KAAK,EAAE,WAAW,EAAE,cAAc,EAAE,YAAY,EAAE,WAAW,EAAE,QAAQ,CAAC;AAChK,IAAIJ,gBAAgB,GAAG,eAAe,CAAC,CAAC,EAAEC,QAAQ,CAACI,OAAO,EAAEF,IAAI,EAAEC,YAAY,EAAE,UAAUE,IAAI,EAAE;EAC9F,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;IAClBC,SAAS,GAAGF,IAAI,CAACE,SAAS;IAC1BC,QAAQ,GAAGH,IAAI,CAACG,QAAQ;IACxBC,cAAc,GAAGJ,IAAI,CAACI,cAAc;IACpCC,YAAY,GAAGL,IAAI,CAACK,YAAY;IAChCC,GAAG,GAAGN,IAAI,CAACM,GAAG;IACdC,SAAS,GAAGP,IAAI,CAACO,SAAS;IAC1BC,YAAY,GAAGR,IAAI,CAACQ,YAAY;IAChCC,UAAU,GAAGT,IAAI,CAACS,UAAU;IAC5BC,SAAS,GAAGV,IAAI,CAACU,SAAS;IAC1BC,MAAM,GAAGX,IAAI,CAACW,MAAM;;EAExB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOV,KAAK,CAACJ,IAAI,EAAE;IACjB,wCAAwC,EAAE,SAASe,8BAA8B,CAACC,CAAC,EAAEC,CAAC,EAAE;MACtF,IAAI,CAACJ,SAAS,CAACG,CAAC,CAAC,IAAIJ,UAAU,CAACI,CAAC,CAAC,IAAI,CAACH,SAAS,CAACI,CAAC,CAAC,IAAIL,UAAU,CAACK,CAAC,CAAC,EAAE;QACpE,MAAM,IAAIC,SAAS,CAAC,4DAA4D,CAAC;MACnF,CAAC,MAAM,IAAIJ,MAAM,CAACG,CAAC,EAAED,CAAC,CAAC,EAAE;QACvB,MAAM,IAAIE,SAAS,CAAC,0DAA0D,CAAC;MACjF,CAAC,CAAC;;MAGF,IAAIC,UAAU,GAAGT,SAAS,CAACO,CAAC,CAAC;MAC7B,IAAIG,MAAM,GAAG,CAAC;MAEd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIJ,CAAC,EAAEI,CAAC,EAAE,EAAE;QAC3B,IAAIC,WAAW,GAAGb,GAAG,CAAC,CAAC,CAAC,EAAEH,QAAQ,CAACW,CAAC,EAAEI,CAAC,CAAC,CAAC;QACzC,IAAIE,QAAQ,GAAGZ,YAAY,CAACM,CAAC,EAAEI,CAAC,CAAC;QACjC,IAAIG,MAAM,GAAGf,GAAG,CAACY,CAAC,EAAEL,CAAC,CAAC;QACtBI,MAAM,GAAGf,SAAS,CAACe,MAAM,EAAEb,cAAc,CAACA,cAAc,CAACgB,QAAQ,EAAEC,MAAM,CAAC,EAAEF,WAAW,CAAC,CAAC;MAC3F;MAEA,OAAOd,YAAY,CAACY,MAAM,EAAED,UAAU,CAAC;IACzC;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AACFxB,OAAO,CAACE,gBAAgB,GAAGA,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}