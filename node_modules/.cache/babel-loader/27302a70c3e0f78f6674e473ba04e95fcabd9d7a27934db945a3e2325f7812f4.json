{"ast":null,"code":"\"use strict\";\n\n/**\n*  @license\n* Copyright 2022 JsData. All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n* ==========================================================================\n*/\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar frame_1 = __importDefault(require(\"../../core/frame\"));\nvar tensorflowlib_1 = __importDefault(require(\"../../shared/tensorflowlib\"));\nvar series_1 = __importDefault(require(\"../../core/series\"));\nvar utils_1 = __importDefault(require(\"../../shared/utils\"));\nvar utils = new utils_1.default();\n/**\n * Fits a OneHotEncoder to the data.\n * @example\n * ```js\n * const encoder = new OneHotEncoder()\n * encoder.fit([\"a\", \"b\", \"c\"])\n * ```\n*/\nvar OneHotEncoder = /** @class */function () {\n  function OneHotEncoder() {\n    this.$labels = [];\n  }\n  OneHotEncoder.prototype.$getData = function (data) {\n    var $data;\n    if (data instanceof Array) {\n      if (utils.is1DArray(data)) {\n        $data = data;\n      } else {\n        throw new Error(\"ValueError: data must be a 1D array.\");\n      }\n    } else if (data instanceof series_1.default) {\n      $data = data.values;\n    } else if (data instanceof tensorflowlib_1.default.Tensor) {\n      $data = data.arraySync();\n    } else {\n      throw new Error(\"ParamError: data must be one of Array, 1d Tensor or Series.\");\n    }\n    return $data;\n  };\n  /**\n   * Fits a OneHotEncoder to the data.\n   * @param data 1d array of labels, Tensor, or  Series to be encoded.\n   * @returns OneHotEncoder\n   * @example\n   * ```js\n   * const encoder = new OneHotEncoder()\n   * encoder.fit([\"a\", \"b\", \"c\"])\n   * ```\n  */\n  OneHotEncoder.prototype.fit = function (data) {\n    var $data = this.$getData(data);\n    var dataSet = Array.from(new Set($data));\n    this.$labels = dataSet;\n    return this;\n  };\n  /**\n   * Encodes the data using the fitted OneHotEncoder.\n   * @param data 1d array of labels, Tensor, or  Series to be encoded.\n   * @example\n   * ```js\n   * const encoder = new OneHotEncoder()\n   * encoder.fit([\"a\", \"b\", \"c\"])\n   * encoder.transform([\"a\", \"b\", \"c\"])\n   * ```\n   */\n  OneHotEncoder.prototype.transform = function (data) {\n    var $data = this.$getData(data);\n    var oneHotArr = utils.zeros($data.length, this.$labels.length);\n    for (var i = 0; i < $data.length; i++) {\n      var index = this.$labels.indexOf($data[i]);\n      oneHotArr[i][index] = 1;\n    }\n    if (data instanceof Array) {\n      return oneHotArr;\n    } else if (data instanceof series_1.default) {\n      return new frame_1.default(oneHotArr, {\n        index: data.index\n      });\n    } else {\n      return tensorflowlib_1.default.tensor1d(oneHotArr);\n    }\n  };\n  /**\n   * Fit and transform the data using the fitted OneHotEncoder.\n   * @param data 1d array of labels, Tensor, or  Series to be encoded.\n   * @example\n   * ```js\n   * const encoder = new OneHotEncoder()\n   * encoder.fitTransform([\"a\", \"b\", \"c\"])\n   * ```\n   */\n  OneHotEncoder.prototype.fitTransform = function (data) {\n    this.fit(data);\n    return this.transform(data);\n  };\n  return OneHotEncoder;\n}();\nexports.default = OneHotEncoder;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","frame_1","require","tensorflowlib_1","series_1","utils_1","utils","default","OneHotEncoder","$labels","prototype","$getData","data","$data","Array","is1DArray","Error","values","Tensor","arraySync","fit","dataSet","from","Set","transform","oneHotArr","zeros","length","i","index","indexOf","tensor1d","fitTransform"],"sources":["/Users/omarbailey/node_modules/danfojs/dist/danfojs-base/transformers/encoders/one.hot.encoder.js"],"sourcesContent":["\"use strict\";\n/**\n*  @license\n* Copyright 2022 JsData. All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n* ==========================================================================\n*/\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar frame_1 = __importDefault(require(\"../../core/frame\"));\nvar tensorflowlib_1 = __importDefault(require(\"../../shared/tensorflowlib\"));\nvar series_1 = __importDefault(require(\"../../core/series\"));\nvar utils_1 = __importDefault(require(\"../../shared/utils\"));\nvar utils = new utils_1.default();\n/**\n * Fits a OneHotEncoder to the data.\n * @example\n * ```js\n * const encoder = new OneHotEncoder()\n * encoder.fit([\"a\", \"b\", \"c\"])\n * ```\n*/\nvar OneHotEncoder = /** @class */ (function () {\n    function OneHotEncoder() {\n        this.$labels = [];\n    }\n    OneHotEncoder.prototype.$getData = function (data) {\n        var $data;\n        if (data instanceof Array) {\n            if (utils.is1DArray(data)) {\n                $data = data;\n            }\n            else {\n                throw new Error(\"ValueError: data must be a 1D array.\");\n            }\n        }\n        else if (data instanceof series_1.default) {\n            $data = data.values;\n        }\n        else if (data instanceof tensorflowlib_1.default.Tensor) {\n            $data = data.arraySync();\n        }\n        else {\n            throw new Error(\"ParamError: data must be one of Array, 1d Tensor or Series.\");\n        }\n        return $data;\n    };\n    /**\n     * Fits a OneHotEncoder to the data.\n     * @param data 1d array of labels, Tensor, or  Series to be encoded.\n     * @returns OneHotEncoder\n     * @example\n     * ```js\n     * const encoder = new OneHotEncoder()\n     * encoder.fit([\"a\", \"b\", \"c\"])\n     * ```\n    */\n    OneHotEncoder.prototype.fit = function (data) {\n        var $data = this.$getData(data);\n        var dataSet = Array.from(new Set($data));\n        this.$labels = dataSet;\n        return this;\n    };\n    /**\n     * Encodes the data using the fitted OneHotEncoder.\n     * @param data 1d array of labels, Tensor, or  Series to be encoded.\n     * @example\n     * ```js\n     * const encoder = new OneHotEncoder()\n     * encoder.fit([\"a\", \"b\", \"c\"])\n     * encoder.transform([\"a\", \"b\", \"c\"])\n     * ```\n     */\n    OneHotEncoder.prototype.transform = function (data) {\n        var $data = this.$getData(data);\n        var oneHotArr = utils.zeros($data.length, this.$labels.length);\n        for (var i = 0; i < $data.length; i++) {\n            var index = this.$labels.indexOf($data[i]);\n            oneHotArr[i][index] = 1;\n        }\n        if (data instanceof Array) {\n            return oneHotArr;\n        }\n        else if (data instanceof series_1.default) {\n            return new frame_1.default(oneHotArr, {\n                index: data.index,\n            });\n        }\n        else {\n            return tensorflowlib_1.default.tensor1d(oneHotArr);\n        }\n    };\n    /**\n     * Fit and transform the data using the fitted OneHotEncoder.\n     * @param data 1d array of labels, Tensor, or  Series to be encoded.\n     * @example\n     * ```js\n     * const encoder = new OneHotEncoder()\n     * encoder.fitTransform([\"a\", \"b\", \"c\"])\n     * ```\n     */\n    OneHotEncoder.prototype.fitTransform = function (data) {\n        this.fit(data);\n        return this.transform(data);\n    };\n    return OneHotEncoder;\n}());\nexports.default = OneHotEncoder;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}